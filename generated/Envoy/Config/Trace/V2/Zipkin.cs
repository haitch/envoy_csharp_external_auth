// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/config/trace/v2/zipkin.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Config.Trace.V2 {

  /// <summary>Holder for reflection information generated from envoy/config/trace/v2/zipkin.proto</summary>
  public static partial class ZipkinReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/config/trace/v2/zipkin.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ZipkinReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJlbnZveS9jb25maWcvdHJhY2UvdjIvemlwa2luLnByb3RvEhVlbnZveS5j",
            "b25maWcudHJhY2UudjIaHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVycy5wcm90",
            "bxojZW52b3kvYW5ub3RhdGlvbnMvZGVwcmVjYXRpb24ucHJvdG8aHXVkcGEv",
            "YW5ub3RhdGlvbnMvc3RhdHVzLnByb3RvGhd2YWxpZGF0ZS92YWxpZGF0ZS5w",
            "cm90byLsAgoMWmlwa2luQ29uZmlnEiIKEWNvbGxlY3Rvcl9jbHVzdGVyGAEg",
            "ASgJQgf6QgRyAiABEiMKEmNvbGxlY3Rvcl9lbmRwb2ludBgCIAEoCUIH+kIE",
            "cgIgARIXCg90cmFjZV9pZF8xMjhiaXQYAyABKAgSNwoTc2hhcmVkX3NwYW5f",
            "Y29udGV4dBgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUSYAoa",
            "Y29sbGVjdG9yX2VuZHBvaW50X3ZlcnNpb24YBSABKA4yPC5lbnZveS5jb25m",
            "aWcudHJhY2UudjIuWmlwa2luQ29uZmlnLkNvbGxlY3RvckVuZHBvaW50VmVy",
            "c2lvbiJfChhDb2xsZWN0b3JFbmRwb2ludFZlcnNpb24SGgoMSFRUUF9KU09O",
            "X1YxEAAaCAgBqPe0iwIBEg0KCUhUVFBfSlNPThABEg4KCkhUVFBfUFJPVE8Q",
            "AhIICgRHUlBDEANCPAojaW8uZW52b3lwcm94eS5lbnZveS5jb25maWcudHJh",
            "Y2UudjJCC1ppcGtpblByb3RvUAG6gMjRBgIQAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Envoy.Annotations.DeprecationReflection.Descriptor, global::Udpa.Annotations.StatusReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Trace.V2.ZipkinConfig), global::Envoy.Config.Trace.V2.ZipkinConfig.Parser, new[]{ "CollectorCluster", "CollectorEndpoint", "TraceId128Bit", "SharedSpanContext", "CollectorEndpointVersion" }, null, new[]{ typeof(global::Envoy.Config.Trace.V2.ZipkinConfig.Types.CollectorEndpointVersion) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Configuration for the Zipkin tracer.
  /// [#extension: envoy.tracers.zipkin]
  /// [#next-free-field: 6]
  /// </summary>
  public sealed partial class ZipkinConfig : pb::IMessage<ZipkinConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ZipkinConfig> _parser = new pb::MessageParser<ZipkinConfig>(() => new ZipkinConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ZipkinConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.Trace.V2.ZipkinReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ZipkinConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ZipkinConfig(ZipkinConfig other) : this() {
      collectorCluster_ = other.collectorCluster_;
      collectorEndpoint_ = other.collectorEndpoint_;
      traceId128Bit_ = other.traceId128Bit_;
      SharedSpanContext = other.SharedSpanContext;
      collectorEndpointVersion_ = other.collectorEndpointVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ZipkinConfig Clone() {
      return new ZipkinConfig(this);
    }

    /// <summary>Field number for the "collector_cluster" field.</summary>
    public const int CollectorClusterFieldNumber = 1;
    private string collectorCluster_ = "";
    /// <summary>
    /// The cluster manager cluster that hosts the Zipkin collectors. Note that the
    /// Zipkin cluster must be defined in the :ref:`Bootstrap static cluster
    /// resources &lt;envoy_api_field_config.bootstrap.v2.Bootstrap.StaticResources.clusters>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CollectorCluster {
      get { return collectorCluster_; }
      set {
        collectorCluster_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collector_endpoint" field.</summary>
    public const int CollectorEndpointFieldNumber = 2;
    private string collectorEndpoint_ = "";
    /// <summary>
    /// The API endpoint of the Zipkin service where the spans will be sent. When
    /// using a standard Zipkin installation, the API endpoint is typically
    /// /api/v1/spans, which is the default value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CollectorEndpoint {
      get { return collectorEndpoint_; }
      set {
        collectorEndpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trace_id_128bit" field.</summary>
    public const int TraceId128BitFieldNumber = 3;
    private bool traceId128Bit_;
    /// <summary>
    /// Determines whether a 128bit trace id will be used when creating a new
    /// trace instance. The default value is false, which will result in a 64 bit trace id being used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TraceId128Bit {
      get { return traceId128Bit_; }
      set {
        traceId128Bit_ = value;
      }
    }

    /// <summary>Field number for the "shared_span_context" field.</summary>
    public const int SharedSpanContextFieldNumber = 4;
    private static readonly pb::FieldCodec<bool?> _single_sharedSpanContext_codec = pb::FieldCodec.ForStructWrapper<bool>(34);
    private bool? sharedSpanContext_;
    /// <summary>
    /// Determines whether client and server spans will share the same span context.
    /// The default value is true.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool? SharedSpanContext {
      get { return sharedSpanContext_; }
      set {
        sharedSpanContext_ = value;
      }
    }


    /// <summary>Field number for the "collector_endpoint_version" field.</summary>
    public const int CollectorEndpointVersionFieldNumber = 5;
    private global::Envoy.Config.Trace.V2.ZipkinConfig.Types.CollectorEndpointVersion collectorEndpointVersion_ = global::Envoy.Config.Trace.V2.ZipkinConfig.Types.CollectorEndpointVersion.HttpJsonV1;
    /// <summary>
    /// Determines the selected collector endpoint version. By default, the ``HTTP_JSON_V1`` will be
    /// used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Trace.V2.ZipkinConfig.Types.CollectorEndpointVersion CollectorEndpointVersion {
      get { return collectorEndpointVersion_; }
      set {
        collectorEndpointVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ZipkinConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ZipkinConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CollectorCluster != other.CollectorCluster) return false;
      if (CollectorEndpoint != other.CollectorEndpoint) return false;
      if (TraceId128Bit != other.TraceId128Bit) return false;
      if (SharedSpanContext != other.SharedSpanContext) return false;
      if (CollectorEndpointVersion != other.CollectorEndpointVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CollectorCluster.Length != 0) hash ^= CollectorCluster.GetHashCode();
      if (CollectorEndpoint.Length != 0) hash ^= CollectorEndpoint.GetHashCode();
      if (TraceId128Bit != false) hash ^= TraceId128Bit.GetHashCode();
      if (sharedSpanContext_ != null) hash ^= SharedSpanContext.GetHashCode();
      if (CollectorEndpointVersion != global::Envoy.Config.Trace.V2.ZipkinConfig.Types.CollectorEndpointVersion.HttpJsonV1) hash ^= CollectorEndpointVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CollectorCluster.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CollectorCluster);
      }
      if (CollectorEndpoint.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CollectorEndpoint);
      }
      if (TraceId128Bit != false) {
        output.WriteRawTag(24);
        output.WriteBool(TraceId128Bit);
      }
      if (sharedSpanContext_ != null) {
        _single_sharedSpanContext_codec.WriteTagAndValue(output, SharedSpanContext);
      }
      if (CollectorEndpointVersion != global::Envoy.Config.Trace.V2.ZipkinConfig.Types.CollectorEndpointVersion.HttpJsonV1) {
        output.WriteRawTag(40);
        output.WriteEnum((int) CollectorEndpointVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CollectorCluster.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CollectorCluster);
      }
      if (CollectorEndpoint.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CollectorEndpoint);
      }
      if (TraceId128Bit != false) {
        output.WriteRawTag(24);
        output.WriteBool(TraceId128Bit);
      }
      if (sharedSpanContext_ != null) {
        _single_sharedSpanContext_codec.WriteTagAndValue(ref output, SharedSpanContext);
      }
      if (CollectorEndpointVersion != global::Envoy.Config.Trace.V2.ZipkinConfig.Types.CollectorEndpointVersion.HttpJsonV1) {
        output.WriteRawTag(40);
        output.WriteEnum((int) CollectorEndpointVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CollectorCluster.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CollectorCluster);
      }
      if (CollectorEndpoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CollectorEndpoint);
      }
      if (TraceId128Bit != false) {
        size += 1 + 1;
      }
      if (sharedSpanContext_ != null) {
        size += _single_sharedSpanContext_codec.CalculateSizeWithTag(SharedSpanContext);
      }
      if (CollectorEndpointVersion != global::Envoy.Config.Trace.V2.ZipkinConfig.Types.CollectorEndpointVersion.HttpJsonV1) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CollectorEndpointVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ZipkinConfig other) {
      if (other == null) {
        return;
      }
      if (other.CollectorCluster.Length != 0) {
        CollectorCluster = other.CollectorCluster;
      }
      if (other.CollectorEndpoint.Length != 0) {
        CollectorEndpoint = other.CollectorEndpoint;
      }
      if (other.TraceId128Bit != false) {
        TraceId128Bit = other.TraceId128Bit;
      }
      if (other.sharedSpanContext_ != null) {
        if (sharedSpanContext_ == null || other.SharedSpanContext != false) {
          SharedSpanContext = other.SharedSpanContext;
        }
      }
      if (other.CollectorEndpointVersion != global::Envoy.Config.Trace.V2.ZipkinConfig.Types.CollectorEndpointVersion.HttpJsonV1) {
        CollectorEndpointVersion = other.CollectorEndpointVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CollectorCluster = input.ReadString();
            break;
          }
          case 18: {
            CollectorEndpoint = input.ReadString();
            break;
          }
          case 24: {
            TraceId128Bit = input.ReadBool();
            break;
          }
          case 34: {
            bool? value = _single_sharedSpanContext_codec.Read(input);
            if (sharedSpanContext_ == null || value != false) {
              SharedSpanContext = value;
            }
            break;
          }
          case 40: {
            CollectorEndpointVersion = (global::Envoy.Config.Trace.V2.ZipkinConfig.Types.CollectorEndpointVersion) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CollectorCluster = input.ReadString();
            break;
          }
          case 18: {
            CollectorEndpoint = input.ReadString();
            break;
          }
          case 24: {
            TraceId128Bit = input.ReadBool();
            break;
          }
          case 34: {
            bool? value = _single_sharedSpanContext_codec.Read(ref input);
            if (sharedSpanContext_ == null || value != false) {
              SharedSpanContext = value;
            }
            break;
          }
          case 40: {
            CollectorEndpointVersion = (global::Envoy.Config.Trace.V2.ZipkinConfig.Types.CollectorEndpointVersion) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ZipkinConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Available Zipkin collector endpoint versions.
      /// </summary>
      public enum CollectorEndpointVersion {
        /// <summary>
        /// Zipkin API v1, JSON over HTTP.
        /// [#comment: The default implementation of Zipkin client before this field is added was only v1
        /// and the way user configure this was by not explicitly specifying the version. Consequently,
        /// before this is added, the corresponding Zipkin collector expected to receive v1 payload.
        /// Hence the motivation of adding HTTP_JSON_V1 as the default is to avoid a breaking change when
        /// user upgrading Envoy with this change. Furthermore, we also immediately deprecate this field,
        /// since in Zipkin realm this v1 version is considered to be not preferable anymore.]
        /// </summary>
        [pbr::OriginalName("HTTP_JSON_V1")] HttpJsonV1 = 0,
        /// <summary>
        /// Zipkin API v2, JSON over HTTP.
        /// </summary>
        [pbr::OriginalName("HTTP_JSON")] HttpJson = 1,
        /// <summary>
        /// Zipkin API v2, protobuf over HTTP.
        /// </summary>
        [pbr::OriginalName("HTTP_PROTO")] HttpProto = 2,
        /// <summary>
        /// [#not-implemented-hide:]
        /// </summary>
        [pbr::OriginalName("GRPC")] Grpc = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
