// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/api/v2/listener/listener_components.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Api.V2.ListenerNS {

  /// <summary>Holder for reflection information generated from envoy/api/v2/listener/listener_components.proto</summary>
  public static partial class ListenerComponentsReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/api/v2/listener/listener_components.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ListenerComponentsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci9lbnZveS9hcGkvdjIvbGlzdGVuZXIvbGlzdGVuZXJfY29tcG9uZW50cy5w",
            "cm90bxIVZW52b3kuYXBpLnYyLmxpc3RlbmVyGhtlbnZveS9hcGkvdjIvYXV0",
            "aC90bHMucHJvdG8aH2Vudm95L2FwaS92Mi9jb3JlL2FkZHJlc3MucHJvdG8a",
            "HGVudm95L2FwaS92Mi9jb3JlL2Jhc2UucHJvdG8aFmVudm95L3R5cGUvcmFu",
            "Z2UucHJvdG8aGWdvb2dsZS9wcm90b2J1Zi9hbnkucHJvdG8aHGdvb2dsZS9w",
            "cm90b2J1Zi9zdHJ1Y3QucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVy",
            "cy5wcm90bxoedWRwYS9hbm5vdGF0aW9ucy9taWdyYXRlLnByb3RvGh11ZHBh",
            "L2Fubm90YXRpb25zL3N0YXR1cy5wcm90bxoXdmFsaWRhdGUvdmFsaWRhdGUu",
            "cHJvdG8ikQEKBkZpbHRlchIVCgRuYW1lGAEgASgJQgf6QgRyAiABEi0KBmNv",
            "bmZpZxgCIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3RCAhgBSAASLAoM",
            "dHlwZWRfY29uZmlnGAQgASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFueUgAQg0K",
            "C2NvbmZpZ190eXBlSgQIAxAEIsUEChBGaWx0ZXJDaGFpbk1hdGNoEkMKEGRl",
            "c3RpbmF0aW9uX3BvcnQYCCABKAsyHC5nb29nbGUucHJvdG9idWYuVUludDMy",
            "VmFsdWVCC/pCCCoGGP//AygBEjMKDXByZWZpeF9yYW5nZXMYAyADKAsyHC5l",
            "bnZveS5hcGkudjIuY29yZS5DaWRyUmFuZ2USFgoOYWRkcmVzc19zdWZmaXgY",
            "BCABKAkSMAoKc3VmZml4X2xlbhgFIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5V",
            "SW50MzJWYWx1ZRJbCgtzb3VyY2VfdHlwZRgMIAEoDjI8LmVudm95LmFwaS52",
            "Mi5saXN0ZW5lci5GaWx0ZXJDaGFpbk1hdGNoLkNvbm5lY3Rpb25Tb3VyY2VU",
            "eXBlQgj6QgWCAQIQARI6ChRzb3VyY2VfcHJlZml4X3JhbmdlcxgGIAMoCzIc",
            "LmVudm95LmFwaS52Mi5jb3JlLkNpZHJSYW5nZRImCgxzb3VyY2VfcG9ydHMY",
            "ByADKA1CEPpCDZIBCiIIKgYY//8DKAESFAoMc2VydmVyX25hbWVzGAsgAygJ",
            "EhoKEnRyYW5zcG9ydF9wcm90b2NvbBgJIAEoCRIdChVhcHBsaWNhdGlvbl9w",
            "cm90b2NvbHMYCiADKAkiVQoUQ29ubmVjdGlvblNvdXJjZVR5cGUSBwoDQU5Z",
            "EAASJgoFTE9DQUwQARob8pj+jwUVChNTQU1FX0lQX09SX0xPT1BCQUNLEgwK",
            "CEVYVEVSTkFMEAJKBAgBEAIi9AIKC0ZpbHRlckNoYWluEkMKEmZpbHRlcl9j",
            "aGFpbl9tYXRjaBgBIAEoCzInLmVudm95LmFwaS52Mi5saXN0ZW5lci5GaWx0",
            "ZXJDaGFpbk1hdGNoEkAKC3Rsc19jb250ZXh0GAIgASgLMicuZW52b3kuYXBp",
            "LnYyLmF1dGguRG93bnN0cmVhbVRsc0NvbnRleHRCAhgBEi4KB2ZpbHRlcnMY",
            "AyADKAsyHS5lbnZveS5hcGkudjIubGlzdGVuZXIuRmlsdGVyEjMKD3VzZV9w",
            "cm94eV9wcm90bxgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUS",
            "LQoIbWV0YWRhdGEYBSABKAsyGy5lbnZveS5hcGkudjIuY29yZS5NZXRhZGF0",
            "YRI8ChB0cmFuc3BvcnRfc29ja2V0GAYgASgLMiIuZW52b3kuYXBpLnYyLmNv",
            "cmUuVHJhbnNwb3J0U29ja2V0EgwKBG5hbWUYByABKAki5QMKIUxpc3RlbmVy",
            "RmlsdGVyQ2hhaW5NYXRjaFByZWRpY2F0ZRJVCghvcl9tYXRjaBgBIAEoCzJB",
            "LmVudm95LmFwaS52Mi5saXN0ZW5lci5MaXN0ZW5lckZpbHRlckNoYWluTWF0",
            "Y2hQcmVkaWNhdGUuTWF0Y2hTZXRIABJWCglhbmRfbWF0Y2gYAiABKAsyQS5l",
            "bnZveS5hcGkudjIubGlzdGVuZXIuTGlzdGVuZXJGaWx0ZXJDaGFpbk1hdGNo",
            "UHJlZGljYXRlLk1hdGNoU2V0SAASTQoJbm90X21hdGNoGAMgASgLMjguZW52",
            "b3kuYXBpLnYyLmxpc3RlbmVyLkxpc3RlbmVyRmlsdGVyQ2hhaW5NYXRjaFBy",
            "ZWRpY2F0ZUgAEhwKCWFueV9tYXRjaBgEIAEoCEIH+kIEagIIAUgAEjgKFmRl",
            "c3RpbmF0aW9uX3BvcnRfcmFuZ2UYBSABKAsyFi5lbnZveS50eXBlLkludDMy",
            "UmFuZ2VIABpdCghNYXRjaFNldBJRCgVydWxlcxgBIAMoCzI4LmVudm95LmFw",
            "aS52Mi5saXN0ZW5lci5MaXN0ZW5lckZpbHRlckNoYWluTWF0Y2hQcmVkaWNh",
            "dGVCCPpCBZIBAggCQgsKBHJ1bGUSA/hCASLmAQoOTGlzdGVuZXJGaWx0ZXIS",
            "FQoEbmFtZRgBIAEoCUIH+kIEcgIgARItCgZjb25maWcYAiABKAsyFy5nb29n",
            "bGUucHJvdG9idWYuU3RydWN0QgIYAUgAEiwKDHR5cGVkX2NvbmZpZxgDIAEo",
            "CzIULmdvb2dsZS5wcm90b2J1Zi5BbnlIABJRCg9maWx0ZXJfZGlzYWJsZWQY",
            "BCABKAsyOC5lbnZveS5hcGkudjIubGlzdGVuZXIuTGlzdGVuZXJGaWx0ZXJD",
            "aGFpbk1hdGNoUHJlZGljYXRlQg0KC2NvbmZpZ190eXBlQpwBCiNpby5lbnZv",
            "eXByb3h5LmVudm95LmFwaS52Mi5saXN0ZW5lckIXTGlzdGVuZXJDb21wb25l",
            "bnRzUHJvdG9QAaoCF0Vudm95LkFwaS5WMi5MaXN0ZW5lck5T6gIXRW52b3ku",
            "QXBpLlYyLkxpc3RlbmVyTlPymP6PBRoSGGVudm95LmNvbmZpZy5saXN0ZW5l",
            "ci52M7qAyNEGAhABYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Api.V2.Auth.TlsReflection.Descriptor, global::Envoy.Api.V2.Core.AddressReflection.Descriptor, global::Envoy.Api.V2.Core.BaseReflection.Descriptor, global::Envoy.Type.RangeReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Udpa.Annotations.MigrateReflection.Descriptor, global::Udpa.Annotations.StatusReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.ListenerNS.Filter), global::Envoy.Api.V2.ListenerNS.Filter.Parser, new[]{ "Name", "Config", "TypedConfig" }, new[]{ "ConfigType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.ListenerNS.FilterChainMatch), global::Envoy.Api.V2.ListenerNS.FilterChainMatch.Parser, new[]{ "DestinationPort", "PrefixRanges", "AddressSuffix", "SuffixLen", "SourceType", "SourcePrefixRanges", "SourcePorts", "ServerNames", "TransportProtocol", "ApplicationProtocols" }, null, new[]{ typeof(global::Envoy.Api.V2.ListenerNS.FilterChainMatch.Types.ConnectionSourceType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.ListenerNS.FilterChain), global::Envoy.Api.V2.ListenerNS.FilterChain.Parser, new[]{ "FilterChainMatch", "TlsContext", "Filters", "UseProxyProto", "Metadata", "TransportSocket", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate), global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate.Parser, new[]{ "OrMatch", "AndMatch", "NotMatch", "AnyMatch", "DestinationPortRange" }, new[]{ "Rule" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate.Types.MatchSet), global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate.Types.MatchSet.Parser, new[]{ "Rules" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.ListenerNS.ListenerFilter), global::Envoy.Api.V2.ListenerNS.ListenerFilter.Parser, new[]{ "Name", "Config", "TypedConfig", "FilterDisabled" }, new[]{ "ConfigType" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Filter : pb::IMessage<Filter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Filter> _parser = new pb::MessageParser<Filter>(() => new Filter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Filter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Api.V2.ListenerNS.ListenerComponentsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Filter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Filter(Filter other) : this() {
      name_ = other.name_;
      switch (other.ConfigTypeCase) {
        case ConfigTypeOneofCase.Config:
          Config = other.Config.Clone();
          break;
        case ConfigTypeOneofCase.TypedConfig:
          TypedConfig = other.TypedConfig.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Filter Clone() {
      return new Filter(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the filter to instantiate. The name must match a
    /// :ref:`supported filter &lt;config_network_filters>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Struct Config {
      get { return configTypeCase_ == ConfigTypeOneofCase.Config ? (global::Google.Protobuf.WellKnownTypes.Struct) configType_ : null; }
      set {
        configType_ = value;
        configTypeCase_ = value == null ? ConfigTypeOneofCase.None : ConfigTypeOneofCase.Config;
      }
    }

    /// <summary>Field number for the "typed_config" field.</summary>
    public const int TypedConfigFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Any TypedConfig {
      get { return configTypeCase_ == ConfigTypeOneofCase.TypedConfig ? (global::Google.Protobuf.WellKnownTypes.Any) configType_ : null; }
      set {
        configType_ = value;
        configTypeCase_ = value == null ? ConfigTypeOneofCase.None : ConfigTypeOneofCase.TypedConfig;
      }
    }

    private object configType_;
    /// <summary>Enum of possible cases for the "config_type" oneof.</summary>
    public enum ConfigTypeOneofCase {
      None = 0,
      Config = 2,
      TypedConfig = 4,
    }
    private ConfigTypeOneofCase configTypeCase_ = ConfigTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConfigTypeOneofCase ConfigTypeCase {
      get { return configTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConfigType() {
      configTypeCase_ = ConfigTypeOneofCase.None;
      configType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Filter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Filter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (!object.Equals(TypedConfig, other.TypedConfig)) return false;
      if (ConfigTypeCase != other.ConfigTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (configTypeCase_ == ConfigTypeOneofCase.Config) hash ^= Config.GetHashCode();
      if (configTypeCase_ == ConfigTypeOneofCase.TypedConfig) hash ^= TypedConfig.GetHashCode();
      hash ^= (int) configTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (configTypeCase_ == ConfigTypeOneofCase.Config) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (configTypeCase_ == ConfigTypeOneofCase.TypedConfig) {
        output.WriteRawTag(34);
        output.WriteMessage(TypedConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (configTypeCase_ == ConfigTypeOneofCase.Config) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (configTypeCase_ == ConfigTypeOneofCase.TypedConfig) {
        output.WriteRawTag(34);
        output.WriteMessage(TypedConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (configTypeCase_ == ConfigTypeOneofCase.Config) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (configTypeCase_ == ConfigTypeOneofCase.TypedConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypedConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Filter other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      switch (other.ConfigTypeCase) {
        case ConfigTypeOneofCase.Config:
          if (Config == null) {
            Config = new global::Google.Protobuf.WellKnownTypes.Struct();
          }
          Config.MergeFrom(other.Config);
          break;
        case ConfigTypeOneofCase.TypedConfig:
          if (TypedConfig == null) {
            TypedConfig = new global::Google.Protobuf.WellKnownTypes.Any();
          }
          TypedConfig.MergeFrom(other.TypedConfig);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            global::Google.Protobuf.WellKnownTypes.Struct subBuilder = new global::Google.Protobuf.WellKnownTypes.Struct();
            if (configTypeCase_ == ConfigTypeOneofCase.Config) {
              subBuilder.MergeFrom(Config);
            }
            input.ReadMessage(subBuilder);
            Config = subBuilder;
            break;
          }
          case 34: {
            global::Google.Protobuf.WellKnownTypes.Any subBuilder = new global::Google.Protobuf.WellKnownTypes.Any();
            if (configTypeCase_ == ConfigTypeOneofCase.TypedConfig) {
              subBuilder.MergeFrom(TypedConfig);
            }
            input.ReadMessage(subBuilder);
            TypedConfig = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            global::Google.Protobuf.WellKnownTypes.Struct subBuilder = new global::Google.Protobuf.WellKnownTypes.Struct();
            if (configTypeCase_ == ConfigTypeOneofCase.Config) {
              subBuilder.MergeFrom(Config);
            }
            input.ReadMessage(subBuilder);
            Config = subBuilder;
            break;
          }
          case 34: {
            global::Google.Protobuf.WellKnownTypes.Any subBuilder = new global::Google.Protobuf.WellKnownTypes.Any();
            if (configTypeCase_ == ConfigTypeOneofCase.TypedConfig) {
              subBuilder.MergeFrom(TypedConfig);
            }
            input.ReadMessage(subBuilder);
            TypedConfig = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Specifies the match criteria for selecting a specific filter chain for a
  /// listener.
  ///
  /// In order for a filter chain to be selected, *ALL* of its criteria must be
  /// fulfilled by the incoming connection, properties of which are set by the
  /// networking stack and/or listener filters.
  ///
  /// The following order applies:
  ///
  /// 1. Destination port.
  /// 2. Destination IP address.
  /// 3. Server name (e.g. SNI for TLS protocol),
  /// 4. Transport protocol.
  /// 5. Application protocols (e.g. ALPN for TLS protocol).
  /// 6. Source type (e.g. any, local or external network).
  /// 7. Source IP address.
  /// 8. Source port.
  ///
  /// For criteria that allow ranges or wildcards, the most specific value in any
  /// of the configured filter chains that matches the incoming connection is going
  /// to be used (e.g. for SNI ``www.example.com`` the most specific match would be
  /// ``www.example.com``, then ``*.example.com``, then ``*.com``, then any filter
  /// chain without ``server_names`` requirements).
  ///
  /// [#comment: Implemented rules are kept in the preference order, with deprecated fields
  /// listed at the end, because that's how we want to list them in the docs.
  ///
  /// [#comment:TODO(PiotrSikora): Add support for configurable precedence of the rules]
  /// [#next-free-field: 13]
  /// </summary>
  public sealed partial class FilterChainMatch : pb::IMessage<FilterChainMatch>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FilterChainMatch> _parser = new pb::MessageParser<FilterChainMatch>(() => new FilterChainMatch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FilterChainMatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Api.V2.ListenerNS.ListenerComponentsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FilterChainMatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FilterChainMatch(FilterChainMatch other) : this() {
      DestinationPort = other.DestinationPort;
      prefixRanges_ = other.prefixRanges_.Clone();
      addressSuffix_ = other.addressSuffix_;
      SuffixLen = other.SuffixLen;
      sourceType_ = other.sourceType_;
      sourcePrefixRanges_ = other.sourcePrefixRanges_.Clone();
      sourcePorts_ = other.sourcePorts_.Clone();
      serverNames_ = other.serverNames_.Clone();
      transportProtocol_ = other.transportProtocol_;
      applicationProtocols_ = other.applicationProtocols_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FilterChainMatch Clone() {
      return new FilterChainMatch(this);
    }

    /// <summary>Field number for the "destination_port" field.</summary>
    public const int DestinationPortFieldNumber = 8;
    private static readonly pb::FieldCodec<uint?> _single_destinationPort_codec = pb::FieldCodec.ForStructWrapper<uint>(66);
    private uint? destinationPort_;
    /// <summary>
    /// Optional destination port to consider when use_original_dst is set on the
    /// listener in determining a filter chain match.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint? DestinationPort {
      get { return destinationPort_; }
      set {
        destinationPort_ = value;
      }
    }


    /// <summary>Field number for the "prefix_ranges" field.</summary>
    public const int PrefixRangesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Envoy.Api.V2.Core.CidrRange> _repeated_prefixRanges_codec
        = pb::FieldCodec.ForMessage(26, global::Envoy.Api.V2.Core.CidrRange.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Api.V2.Core.CidrRange> prefixRanges_ = new pbc::RepeatedField<global::Envoy.Api.V2.Core.CidrRange>();
    /// <summary>
    /// If non-empty, an IP address and prefix length to match addresses when the
    /// listener is bound to 0.0.0.0/:: or when use_original_dst is specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Api.V2.Core.CidrRange> PrefixRanges {
      get { return prefixRanges_; }
    }

    /// <summary>Field number for the "address_suffix" field.</summary>
    public const int AddressSuffixFieldNumber = 4;
    private string addressSuffix_ = "";
    /// <summary>
    /// If non-empty, an IP address and suffix length to match addresses when the
    /// listener is bound to 0.0.0.0/:: or when use_original_dst is specified.
    /// [#not-implemented-hide:]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AddressSuffix {
      get { return addressSuffix_; }
      set {
        addressSuffix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "suffix_len" field.</summary>
    public const int SuffixLenFieldNumber = 5;
    private static readonly pb::FieldCodec<uint?> _single_suffixLen_codec = pb::FieldCodec.ForStructWrapper<uint>(42);
    private uint? suffixLen_;
    /// <summary>
    /// [#not-implemented-hide:]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint? SuffixLen {
      get { return suffixLen_; }
      set {
        suffixLen_ = value;
      }
    }


    /// <summary>Field number for the "source_type" field.</summary>
    public const int SourceTypeFieldNumber = 12;
    private global::Envoy.Api.V2.ListenerNS.FilterChainMatch.Types.ConnectionSourceType sourceType_ = global::Envoy.Api.V2.ListenerNS.FilterChainMatch.Types.ConnectionSourceType.Any;
    /// <summary>
    /// Specifies the connection source IP match type. Can be any, local or external network.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Api.V2.ListenerNS.FilterChainMatch.Types.ConnectionSourceType SourceType {
      get { return sourceType_; }
      set {
        sourceType_ = value;
      }
    }

    /// <summary>Field number for the "source_prefix_ranges" field.</summary>
    public const int SourcePrefixRangesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Envoy.Api.V2.Core.CidrRange> _repeated_sourcePrefixRanges_codec
        = pb::FieldCodec.ForMessage(50, global::Envoy.Api.V2.Core.CidrRange.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Api.V2.Core.CidrRange> sourcePrefixRanges_ = new pbc::RepeatedField<global::Envoy.Api.V2.Core.CidrRange>();
    /// <summary>
    /// The criteria is satisfied if the source IP address of the downstream
    /// connection is contained in at least one of the specified subnets. If the
    /// parameter is not specified or the list is empty, the source IP address is
    /// ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Api.V2.Core.CidrRange> SourcePrefixRanges {
      get { return sourcePrefixRanges_; }
    }

    /// <summary>Field number for the "source_ports" field.</summary>
    public const int SourcePortsFieldNumber = 7;
    private static readonly pb::FieldCodec<uint> _repeated_sourcePorts_codec
        = pb::FieldCodec.ForUInt32(58);
    private readonly pbc::RepeatedField<uint> sourcePorts_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// The criteria is satisfied if the source port of the downstream connection
    /// is contained in at least one of the specified ports. If the parameter is
    /// not specified, the source port is ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> SourcePorts {
      get { return sourcePorts_; }
    }

    /// <summary>Field number for the "server_names" field.</summary>
    public const int ServerNamesFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _repeated_serverNames_codec
        = pb::FieldCodec.ForString(90);
    private readonly pbc::RepeatedField<string> serverNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// If non-empty, a list of server names (e.g. SNI for TLS protocol) to consider when determining
    /// a filter chain match. Those values will be compared against the server names of a new
    /// connection, when detected by one of the listener filters.
    ///
    /// The server name will be matched against all wildcard domains, i.e. ``www.example.com``
    /// will be first matched against ``www.example.com``, then ``*.example.com``, then ``*.com``.
    ///
    /// Note that partial wildcards are not supported, and values like ``*w.example.com`` are invalid.
    ///
    /// .. attention::
    ///
    ///   See the :ref:`FAQ entry &lt;faq_how_to_setup_sni>` on how to configure SNI for more
    ///   information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ServerNames {
      get { return serverNames_; }
    }

    /// <summary>Field number for the "transport_protocol" field.</summary>
    public const int TransportProtocolFieldNumber = 9;
    private string transportProtocol_ = "";
    /// <summary>
    /// If non-empty, a transport protocol to consider when determining a filter chain match.
    /// This value will be compared against the transport protocol of a new connection, when
    /// it's detected by one of the listener filters.
    ///
    /// Suggested values include:
    ///
    /// * ``raw_buffer`` - default, used when no transport protocol is detected,
    /// * ``tls`` - set by :ref:`envoy.filters.listener.tls_inspector &lt;config_listener_filters_tls_inspector>`
    ///   when TLS protocol is detected.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TransportProtocol {
      get { return transportProtocol_; }
      set {
        transportProtocol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "application_protocols" field.</summary>
    public const int ApplicationProtocolsFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_applicationProtocols_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> applicationProtocols_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// If non-empty, a list of application protocols (e.g. ALPN for TLS protocol) to consider when
    /// determining a filter chain match. Those values will be compared against the application
    /// protocols of a new connection, when detected by one of the listener filters.
    ///
    /// Suggested values include:
    ///
    /// * ``http/1.1`` - set by :ref:`envoy.filters.listener.tls_inspector
    ///   &lt;config_listener_filters_tls_inspector>`,
    /// * ``h2`` - set by :ref:`envoy.filters.listener.tls_inspector &lt;config_listener_filters_tls_inspector>`
    ///
    /// .. attention::
    ///
    ///   Currently, only :ref:`TLS Inspector &lt;config_listener_filters_tls_inspector>` provides
    ///   application protocol detection based on the requested
    ///   `ALPN &lt;https://en.wikipedia.org/wiki/Application-Layer_Protocol_Negotiation>`_ values.
    ///
    ///   However, the use of ALPN is pretty much limited to the HTTP/2 traffic on the Internet,
    ///   and matching on values other than ``h2`` is going to lead to a lot of false negatives,
    ///   unless all connecting clients are known to use ALPN.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ApplicationProtocols {
      get { return applicationProtocols_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FilterChainMatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FilterChainMatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DestinationPort != other.DestinationPort) return false;
      if(!prefixRanges_.Equals(other.prefixRanges_)) return false;
      if (AddressSuffix != other.AddressSuffix) return false;
      if (SuffixLen != other.SuffixLen) return false;
      if (SourceType != other.SourceType) return false;
      if(!sourcePrefixRanges_.Equals(other.sourcePrefixRanges_)) return false;
      if(!sourcePorts_.Equals(other.sourcePorts_)) return false;
      if(!serverNames_.Equals(other.serverNames_)) return false;
      if (TransportProtocol != other.TransportProtocol) return false;
      if(!applicationProtocols_.Equals(other.applicationProtocols_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (destinationPort_ != null) hash ^= DestinationPort.GetHashCode();
      hash ^= prefixRanges_.GetHashCode();
      if (AddressSuffix.Length != 0) hash ^= AddressSuffix.GetHashCode();
      if (suffixLen_ != null) hash ^= SuffixLen.GetHashCode();
      if (SourceType != global::Envoy.Api.V2.ListenerNS.FilterChainMatch.Types.ConnectionSourceType.Any) hash ^= SourceType.GetHashCode();
      hash ^= sourcePrefixRanges_.GetHashCode();
      hash ^= sourcePorts_.GetHashCode();
      hash ^= serverNames_.GetHashCode();
      if (TransportProtocol.Length != 0) hash ^= TransportProtocol.GetHashCode();
      hash ^= applicationProtocols_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      prefixRanges_.WriteTo(output, _repeated_prefixRanges_codec);
      if (AddressSuffix.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AddressSuffix);
      }
      if (suffixLen_ != null) {
        _single_suffixLen_codec.WriteTagAndValue(output, SuffixLen);
      }
      sourcePrefixRanges_.WriteTo(output, _repeated_sourcePrefixRanges_codec);
      sourcePorts_.WriteTo(output, _repeated_sourcePorts_codec);
      if (destinationPort_ != null) {
        _single_destinationPort_codec.WriteTagAndValue(output, DestinationPort);
      }
      if (TransportProtocol.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(TransportProtocol);
      }
      applicationProtocols_.WriteTo(output, _repeated_applicationProtocols_codec);
      serverNames_.WriteTo(output, _repeated_serverNames_codec);
      if (SourceType != global::Envoy.Api.V2.ListenerNS.FilterChainMatch.Types.ConnectionSourceType.Any) {
        output.WriteRawTag(96);
        output.WriteEnum((int) SourceType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      prefixRanges_.WriteTo(ref output, _repeated_prefixRanges_codec);
      if (AddressSuffix.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AddressSuffix);
      }
      if (suffixLen_ != null) {
        _single_suffixLen_codec.WriteTagAndValue(ref output, SuffixLen);
      }
      sourcePrefixRanges_.WriteTo(ref output, _repeated_sourcePrefixRanges_codec);
      sourcePorts_.WriteTo(ref output, _repeated_sourcePorts_codec);
      if (destinationPort_ != null) {
        _single_destinationPort_codec.WriteTagAndValue(ref output, DestinationPort);
      }
      if (TransportProtocol.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(TransportProtocol);
      }
      applicationProtocols_.WriteTo(ref output, _repeated_applicationProtocols_codec);
      serverNames_.WriteTo(ref output, _repeated_serverNames_codec);
      if (SourceType != global::Envoy.Api.V2.ListenerNS.FilterChainMatch.Types.ConnectionSourceType.Any) {
        output.WriteRawTag(96);
        output.WriteEnum((int) SourceType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (destinationPort_ != null) {
        size += _single_destinationPort_codec.CalculateSizeWithTag(DestinationPort);
      }
      size += prefixRanges_.CalculateSize(_repeated_prefixRanges_codec);
      if (AddressSuffix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AddressSuffix);
      }
      if (suffixLen_ != null) {
        size += _single_suffixLen_codec.CalculateSizeWithTag(SuffixLen);
      }
      if (SourceType != global::Envoy.Api.V2.ListenerNS.FilterChainMatch.Types.ConnectionSourceType.Any) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SourceType);
      }
      size += sourcePrefixRanges_.CalculateSize(_repeated_sourcePrefixRanges_codec);
      size += sourcePorts_.CalculateSize(_repeated_sourcePorts_codec);
      size += serverNames_.CalculateSize(_repeated_serverNames_codec);
      if (TransportProtocol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransportProtocol);
      }
      size += applicationProtocols_.CalculateSize(_repeated_applicationProtocols_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FilterChainMatch other) {
      if (other == null) {
        return;
      }
      if (other.destinationPort_ != null) {
        if (destinationPort_ == null || other.DestinationPort != 0) {
          DestinationPort = other.DestinationPort;
        }
      }
      prefixRanges_.Add(other.prefixRanges_);
      if (other.AddressSuffix.Length != 0) {
        AddressSuffix = other.AddressSuffix;
      }
      if (other.suffixLen_ != null) {
        if (suffixLen_ == null || other.SuffixLen != 0) {
          SuffixLen = other.SuffixLen;
        }
      }
      if (other.SourceType != global::Envoy.Api.V2.ListenerNS.FilterChainMatch.Types.ConnectionSourceType.Any) {
        SourceType = other.SourceType;
      }
      sourcePrefixRanges_.Add(other.sourcePrefixRanges_);
      sourcePorts_.Add(other.sourcePorts_);
      serverNames_.Add(other.serverNames_);
      if (other.TransportProtocol.Length != 0) {
        TransportProtocol = other.TransportProtocol;
      }
      applicationProtocols_.Add(other.applicationProtocols_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            prefixRanges_.AddEntriesFrom(input, _repeated_prefixRanges_codec);
            break;
          }
          case 34: {
            AddressSuffix = input.ReadString();
            break;
          }
          case 42: {
            uint? value = _single_suffixLen_codec.Read(input);
            if (suffixLen_ == null || value != 0) {
              SuffixLen = value;
            }
            break;
          }
          case 50: {
            sourcePrefixRanges_.AddEntriesFrom(input, _repeated_sourcePrefixRanges_codec);
            break;
          }
          case 58:
          case 56: {
            sourcePorts_.AddEntriesFrom(input, _repeated_sourcePorts_codec);
            break;
          }
          case 66: {
            uint? value = _single_destinationPort_codec.Read(input);
            if (destinationPort_ == null || value != 0) {
              DestinationPort = value;
            }
            break;
          }
          case 74: {
            TransportProtocol = input.ReadString();
            break;
          }
          case 82: {
            applicationProtocols_.AddEntriesFrom(input, _repeated_applicationProtocols_codec);
            break;
          }
          case 90: {
            serverNames_.AddEntriesFrom(input, _repeated_serverNames_codec);
            break;
          }
          case 96: {
            SourceType = (global::Envoy.Api.V2.ListenerNS.FilterChainMatch.Types.ConnectionSourceType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 26: {
            prefixRanges_.AddEntriesFrom(ref input, _repeated_prefixRanges_codec);
            break;
          }
          case 34: {
            AddressSuffix = input.ReadString();
            break;
          }
          case 42: {
            uint? value = _single_suffixLen_codec.Read(ref input);
            if (suffixLen_ == null || value != 0) {
              SuffixLen = value;
            }
            break;
          }
          case 50: {
            sourcePrefixRanges_.AddEntriesFrom(ref input, _repeated_sourcePrefixRanges_codec);
            break;
          }
          case 58:
          case 56: {
            sourcePorts_.AddEntriesFrom(ref input, _repeated_sourcePorts_codec);
            break;
          }
          case 66: {
            uint? value = _single_destinationPort_codec.Read(ref input);
            if (destinationPort_ == null || value != 0) {
              DestinationPort = value;
            }
            break;
          }
          case 74: {
            TransportProtocol = input.ReadString();
            break;
          }
          case 82: {
            applicationProtocols_.AddEntriesFrom(ref input, _repeated_applicationProtocols_codec);
            break;
          }
          case 90: {
            serverNames_.AddEntriesFrom(ref input, _repeated_serverNames_codec);
            break;
          }
          case 96: {
            SourceType = (global::Envoy.Api.V2.ListenerNS.FilterChainMatch.Types.ConnectionSourceType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the FilterChainMatch message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum ConnectionSourceType {
        /// <summary>
        /// Any connection source matches.
        /// </summary>
        [pbr::OriginalName("ANY")] Any = 0,
        /// <summary>
        /// Match a connection originating from the same host.
        /// </summary>
        [pbr::OriginalName("LOCAL")] Local = 1,
        /// <summary>
        /// Match a connection originating from a different host.
        /// </summary>
        [pbr::OriginalName("EXTERNAL")] External = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// A filter chain wraps a set of match criteria, an option TLS context, a set of filters, and
  /// various other parameters.
  /// [#next-free-field: 8]
  /// </summary>
  public sealed partial class FilterChain : pb::IMessage<FilterChain>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FilterChain> _parser = new pb::MessageParser<FilterChain>(() => new FilterChain());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FilterChain> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Api.V2.ListenerNS.ListenerComponentsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FilterChain() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FilterChain(FilterChain other) : this() {
      filterChainMatch_ = other.filterChainMatch_ != null ? other.filterChainMatch_.Clone() : null;
      tlsContext_ = other.tlsContext_ != null ? other.tlsContext_.Clone() : null;
      filters_ = other.filters_.Clone();
      UseProxyProto = other.UseProxyProto;
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      transportSocket_ = other.transportSocket_ != null ? other.transportSocket_.Clone() : null;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FilterChain Clone() {
      return new FilterChain(this);
    }

    /// <summary>Field number for the "filter_chain_match" field.</summary>
    public const int FilterChainMatchFieldNumber = 1;
    private global::Envoy.Api.V2.ListenerNS.FilterChainMatch filterChainMatch_;
    /// <summary>
    /// The criteria to use when matching a connection to this filter chain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Api.V2.ListenerNS.FilterChainMatch FilterChainMatch {
      get { return filterChainMatch_; }
      set {
        filterChainMatch_ = value;
      }
    }

    /// <summary>Field number for the "tls_context" field.</summary>
    public const int TlsContextFieldNumber = 2;
    private global::Envoy.Api.V2.Auth.DownstreamTlsContext tlsContext_;
    /// <summary>
    /// The TLS context for this filter chain.
    ///
    /// .. attention::
    ///
    ///   **This field is deprecated**. Use `transport_socket` with name `tls` instead. If both are
    ///   set, `transport_socket` takes priority.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Api.V2.Auth.DownstreamTlsContext TlsContext {
      get { return tlsContext_; }
      set {
        tlsContext_ = value;
      }
    }

    /// <summary>Field number for the "filters" field.</summary>
    public const int FiltersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Envoy.Api.V2.ListenerNS.Filter> _repeated_filters_codec
        = pb::FieldCodec.ForMessage(26, global::Envoy.Api.V2.ListenerNS.Filter.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Api.V2.ListenerNS.Filter> filters_ = new pbc::RepeatedField<global::Envoy.Api.V2.ListenerNS.Filter>();
    /// <summary>
    /// A list of individual network filters that make up the filter chain for
    /// connections established with the listener. Order matters as the filters are
    /// processed sequentially as connection events happen. Note: If the filter
    /// list is empty, the connection will close by default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Api.V2.ListenerNS.Filter> Filters {
      get { return filters_; }
    }

    /// <summary>Field number for the "use_proxy_proto" field.</summary>
    public const int UseProxyProtoFieldNumber = 4;
    private static readonly pb::FieldCodec<bool?> _single_useProxyProto_codec = pb::FieldCodec.ForStructWrapper<bool>(34);
    private bool? useProxyProto_;
    /// <summary>
    /// Whether the listener should expect a PROXY protocol V1 header on new
    /// connections. If this option is enabled, the listener will assume that that
    /// remote address of the connection is the one specified in the header. Some
    /// load balancers including the AWS ELB support this option. If the option is
    /// absent or set to false, Envoy will use the physical peer address of the
    /// connection as the remote address.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool? UseProxyProto {
      get { return useProxyProto_; }
      set {
        useProxyProto_ = value;
      }
    }


    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 5;
    private global::Envoy.Api.V2.Core.Metadata metadata_;
    /// <summary>
    /// [#not-implemented-hide:] filter chain metadata.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Api.V2.Core.Metadata Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "transport_socket" field.</summary>
    public const int TransportSocketFieldNumber = 6;
    private global::Envoy.Api.V2.Core.TransportSocket transportSocket_;
    /// <summary>
    /// Optional custom transport socket implementation to use for downstream connections.
    /// To setup TLS, set a transport socket with name `tls` and
    /// :ref:`DownstreamTlsContext &lt;envoy_api_msg_auth.DownstreamTlsContext>` in the `typed_config`.
    /// If no transport socket configuration is specified, new connections
    /// will be set up with plaintext.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Api.V2.Core.TransportSocket TransportSocket {
      get { return transportSocket_; }
      set {
        transportSocket_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    /// <summary>
    /// [#not-implemented-hide:] The unique name (or empty) by which this filter chain is known. If no
    /// name is provided, Envoy will allocate an internal UUID for the filter chain. If the filter
    /// chain is to be dynamically updated or removed via FCDS a unique name must be provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FilterChain);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FilterChain other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FilterChainMatch, other.FilterChainMatch)) return false;
      if (!object.Equals(TlsContext, other.TlsContext)) return false;
      if(!filters_.Equals(other.filters_)) return false;
      if (UseProxyProto != other.UseProxyProto) return false;
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(TransportSocket, other.TransportSocket)) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (filterChainMatch_ != null) hash ^= FilterChainMatch.GetHashCode();
      if (tlsContext_ != null) hash ^= TlsContext.GetHashCode();
      hash ^= filters_.GetHashCode();
      if (useProxyProto_ != null) hash ^= UseProxyProto.GetHashCode();
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (transportSocket_ != null) hash ^= TransportSocket.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (filterChainMatch_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FilterChainMatch);
      }
      if (tlsContext_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TlsContext);
      }
      filters_.WriteTo(output, _repeated_filters_codec);
      if (useProxyProto_ != null) {
        _single_useProxyProto_codec.WriteTagAndValue(output, UseProxyProto);
      }
      if (metadata_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Metadata);
      }
      if (transportSocket_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TransportSocket);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (filterChainMatch_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FilterChainMatch);
      }
      if (tlsContext_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TlsContext);
      }
      filters_.WriteTo(ref output, _repeated_filters_codec);
      if (useProxyProto_ != null) {
        _single_useProxyProto_codec.WriteTagAndValue(ref output, UseProxyProto);
      }
      if (metadata_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Metadata);
      }
      if (transportSocket_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TransportSocket);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (filterChainMatch_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FilterChainMatch);
      }
      if (tlsContext_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TlsContext);
      }
      size += filters_.CalculateSize(_repeated_filters_codec);
      if (useProxyProto_ != null) {
        size += _single_useProxyProto_codec.CalculateSizeWithTag(UseProxyProto);
      }
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (transportSocket_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransportSocket);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FilterChain other) {
      if (other == null) {
        return;
      }
      if (other.filterChainMatch_ != null) {
        if (filterChainMatch_ == null) {
          FilterChainMatch = new global::Envoy.Api.V2.ListenerNS.FilterChainMatch();
        }
        FilterChainMatch.MergeFrom(other.FilterChainMatch);
      }
      if (other.tlsContext_ != null) {
        if (tlsContext_ == null) {
          TlsContext = new global::Envoy.Api.V2.Auth.DownstreamTlsContext();
        }
        TlsContext.MergeFrom(other.TlsContext);
      }
      filters_.Add(other.filters_);
      if (other.useProxyProto_ != null) {
        if (useProxyProto_ == null || other.UseProxyProto != false) {
          UseProxyProto = other.UseProxyProto;
        }
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::Envoy.Api.V2.Core.Metadata();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.transportSocket_ != null) {
        if (transportSocket_ == null) {
          TransportSocket = new global::Envoy.Api.V2.Core.TransportSocket();
        }
        TransportSocket.MergeFrom(other.TransportSocket);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (filterChainMatch_ == null) {
              FilterChainMatch = new global::Envoy.Api.V2.ListenerNS.FilterChainMatch();
            }
            input.ReadMessage(FilterChainMatch);
            break;
          }
          case 18: {
            if (tlsContext_ == null) {
              TlsContext = new global::Envoy.Api.V2.Auth.DownstreamTlsContext();
            }
            input.ReadMessage(TlsContext);
            break;
          }
          case 26: {
            filters_.AddEntriesFrom(input, _repeated_filters_codec);
            break;
          }
          case 34: {
            bool? value = _single_useProxyProto_codec.Read(input);
            if (useProxyProto_ == null || value != false) {
              UseProxyProto = value;
            }
            break;
          }
          case 42: {
            if (metadata_ == null) {
              Metadata = new global::Envoy.Api.V2.Core.Metadata();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 50: {
            if (transportSocket_ == null) {
              TransportSocket = new global::Envoy.Api.V2.Core.TransportSocket();
            }
            input.ReadMessage(TransportSocket);
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (filterChainMatch_ == null) {
              FilterChainMatch = new global::Envoy.Api.V2.ListenerNS.FilterChainMatch();
            }
            input.ReadMessage(FilterChainMatch);
            break;
          }
          case 18: {
            if (tlsContext_ == null) {
              TlsContext = new global::Envoy.Api.V2.Auth.DownstreamTlsContext();
            }
            input.ReadMessage(TlsContext);
            break;
          }
          case 26: {
            filters_.AddEntriesFrom(ref input, _repeated_filters_codec);
            break;
          }
          case 34: {
            bool? value = _single_useProxyProto_codec.Read(ref input);
            if (useProxyProto_ == null || value != false) {
              UseProxyProto = value;
            }
            break;
          }
          case 42: {
            if (metadata_ == null) {
              Metadata = new global::Envoy.Api.V2.Core.Metadata();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 50: {
            if (transportSocket_ == null) {
              TransportSocket = new global::Envoy.Api.V2.Core.TransportSocket();
            }
            input.ReadMessage(TransportSocket);
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Listener filter chain match configuration. This is a recursive structure which allows complex
  /// nested match configurations to be built using various logical operators.
  ///
  /// Examples:
  ///
  /// * Matches if the destination port is 3306.
  ///
  /// .. code-block:: yaml
  ///
  ///  destination_port_range:
  ///   start: 3306
  ///   end: 3307
  ///
  /// * Matches if the destination port is 3306 or 15000.
  ///
  /// .. code-block:: yaml
  ///
  ///  or_match:
  ///    rules:
  ///      - destination_port_range:
  ///          start: 3306
  ///          end: 3307
  ///      - destination_port_range:
  ///          start: 15000
  ///          end: 15001
  ///
  /// [#next-free-field: 6]
  /// </summary>
  public sealed partial class ListenerFilterChainMatchPredicate : pb::IMessage<ListenerFilterChainMatchPredicate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListenerFilterChainMatchPredicate> _parser = new pb::MessageParser<ListenerFilterChainMatchPredicate>(() => new ListenerFilterChainMatchPredicate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListenerFilterChainMatchPredicate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Api.V2.ListenerNS.ListenerComponentsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListenerFilterChainMatchPredicate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListenerFilterChainMatchPredicate(ListenerFilterChainMatchPredicate other) : this() {
      switch (other.RuleCase) {
        case RuleOneofCase.OrMatch:
          OrMatch = other.OrMatch.Clone();
          break;
        case RuleOneofCase.AndMatch:
          AndMatch = other.AndMatch.Clone();
          break;
        case RuleOneofCase.NotMatch:
          NotMatch = other.NotMatch.Clone();
          break;
        case RuleOneofCase.AnyMatch:
          AnyMatch = other.AnyMatch;
          break;
        case RuleOneofCase.DestinationPortRange:
          DestinationPortRange = other.DestinationPortRange.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListenerFilterChainMatchPredicate Clone() {
      return new ListenerFilterChainMatchPredicate(this);
    }

    /// <summary>Field number for the "or_match" field.</summary>
    public const int OrMatchFieldNumber = 1;
    /// <summary>
    /// A set that describes a logical OR. If any member of the set matches, the match configuration
    /// matches.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate.Types.MatchSet OrMatch {
      get { return ruleCase_ == RuleOneofCase.OrMatch ? (global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate.Types.MatchSet) rule_ : null; }
      set {
        rule_ = value;
        ruleCase_ = value == null ? RuleOneofCase.None : RuleOneofCase.OrMatch;
      }
    }

    /// <summary>Field number for the "and_match" field.</summary>
    public const int AndMatchFieldNumber = 2;
    /// <summary>
    /// A set that describes a logical AND. If all members of the set match, the match configuration
    /// matches.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate.Types.MatchSet AndMatch {
      get { return ruleCase_ == RuleOneofCase.AndMatch ? (global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate.Types.MatchSet) rule_ : null; }
      set {
        rule_ = value;
        ruleCase_ = value == null ? RuleOneofCase.None : RuleOneofCase.AndMatch;
      }
    }

    /// <summary>Field number for the "not_match" field.</summary>
    public const int NotMatchFieldNumber = 3;
    /// <summary>
    /// A negation match. The match configuration will match if the negated match condition matches.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate NotMatch {
      get { return ruleCase_ == RuleOneofCase.NotMatch ? (global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate) rule_ : null; }
      set {
        rule_ = value;
        ruleCase_ = value == null ? RuleOneofCase.None : RuleOneofCase.NotMatch;
      }
    }

    /// <summary>Field number for the "any_match" field.</summary>
    public const int AnyMatchFieldNumber = 4;
    /// <summary>
    /// The match configuration will always match.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AnyMatch {
      get { return ruleCase_ == RuleOneofCase.AnyMatch ? (bool) rule_ : false; }
      set {
        rule_ = value;
        ruleCase_ = RuleOneofCase.AnyMatch;
      }
    }

    /// <summary>Field number for the "destination_port_range" field.</summary>
    public const int DestinationPortRangeFieldNumber = 5;
    /// <summary>
    /// Match destination port. Particularly, the match evaluation must use the recovered local port if
    /// the owning listener filter is after :ref:`an original_dst listener filter &lt;config_listener_filters_original_dst>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Type.Int32Range DestinationPortRange {
      get { return ruleCase_ == RuleOneofCase.DestinationPortRange ? (global::Envoy.Type.Int32Range) rule_ : null; }
      set {
        rule_ = value;
        ruleCase_ = value == null ? RuleOneofCase.None : RuleOneofCase.DestinationPortRange;
      }
    }

    private object rule_;
    /// <summary>Enum of possible cases for the "rule" oneof.</summary>
    public enum RuleOneofCase {
      None = 0,
      OrMatch = 1,
      AndMatch = 2,
      NotMatch = 3,
      AnyMatch = 4,
      DestinationPortRange = 5,
    }
    private RuleOneofCase ruleCase_ = RuleOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RuleOneofCase RuleCase {
      get { return ruleCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRule() {
      ruleCase_ = RuleOneofCase.None;
      rule_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListenerFilterChainMatchPredicate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListenerFilterChainMatchPredicate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OrMatch, other.OrMatch)) return false;
      if (!object.Equals(AndMatch, other.AndMatch)) return false;
      if (!object.Equals(NotMatch, other.NotMatch)) return false;
      if (AnyMatch != other.AnyMatch) return false;
      if (!object.Equals(DestinationPortRange, other.DestinationPortRange)) return false;
      if (RuleCase != other.RuleCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ruleCase_ == RuleOneofCase.OrMatch) hash ^= OrMatch.GetHashCode();
      if (ruleCase_ == RuleOneofCase.AndMatch) hash ^= AndMatch.GetHashCode();
      if (ruleCase_ == RuleOneofCase.NotMatch) hash ^= NotMatch.GetHashCode();
      if (ruleCase_ == RuleOneofCase.AnyMatch) hash ^= AnyMatch.GetHashCode();
      if (ruleCase_ == RuleOneofCase.DestinationPortRange) hash ^= DestinationPortRange.GetHashCode();
      hash ^= (int) ruleCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ruleCase_ == RuleOneofCase.OrMatch) {
        output.WriteRawTag(10);
        output.WriteMessage(OrMatch);
      }
      if (ruleCase_ == RuleOneofCase.AndMatch) {
        output.WriteRawTag(18);
        output.WriteMessage(AndMatch);
      }
      if (ruleCase_ == RuleOneofCase.NotMatch) {
        output.WriteRawTag(26);
        output.WriteMessage(NotMatch);
      }
      if (ruleCase_ == RuleOneofCase.AnyMatch) {
        output.WriteRawTag(32);
        output.WriteBool(AnyMatch);
      }
      if (ruleCase_ == RuleOneofCase.DestinationPortRange) {
        output.WriteRawTag(42);
        output.WriteMessage(DestinationPortRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ruleCase_ == RuleOneofCase.OrMatch) {
        output.WriteRawTag(10);
        output.WriteMessage(OrMatch);
      }
      if (ruleCase_ == RuleOneofCase.AndMatch) {
        output.WriteRawTag(18);
        output.WriteMessage(AndMatch);
      }
      if (ruleCase_ == RuleOneofCase.NotMatch) {
        output.WriteRawTag(26);
        output.WriteMessage(NotMatch);
      }
      if (ruleCase_ == RuleOneofCase.AnyMatch) {
        output.WriteRawTag(32);
        output.WriteBool(AnyMatch);
      }
      if (ruleCase_ == RuleOneofCase.DestinationPortRange) {
        output.WriteRawTag(42);
        output.WriteMessage(DestinationPortRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ruleCase_ == RuleOneofCase.OrMatch) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrMatch);
      }
      if (ruleCase_ == RuleOneofCase.AndMatch) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AndMatch);
      }
      if (ruleCase_ == RuleOneofCase.NotMatch) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NotMatch);
      }
      if (ruleCase_ == RuleOneofCase.AnyMatch) {
        size += 1 + 1;
      }
      if (ruleCase_ == RuleOneofCase.DestinationPortRange) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DestinationPortRange);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListenerFilterChainMatchPredicate other) {
      if (other == null) {
        return;
      }
      switch (other.RuleCase) {
        case RuleOneofCase.OrMatch:
          if (OrMatch == null) {
            OrMatch = new global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate.Types.MatchSet();
          }
          OrMatch.MergeFrom(other.OrMatch);
          break;
        case RuleOneofCase.AndMatch:
          if (AndMatch == null) {
            AndMatch = new global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate.Types.MatchSet();
          }
          AndMatch.MergeFrom(other.AndMatch);
          break;
        case RuleOneofCase.NotMatch:
          if (NotMatch == null) {
            NotMatch = new global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate();
          }
          NotMatch.MergeFrom(other.NotMatch);
          break;
        case RuleOneofCase.AnyMatch:
          AnyMatch = other.AnyMatch;
          break;
        case RuleOneofCase.DestinationPortRange:
          if (DestinationPortRange == null) {
            DestinationPortRange = new global::Envoy.Type.Int32Range();
          }
          DestinationPortRange.MergeFrom(other.DestinationPortRange);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate.Types.MatchSet subBuilder = new global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate.Types.MatchSet();
            if (ruleCase_ == RuleOneofCase.OrMatch) {
              subBuilder.MergeFrom(OrMatch);
            }
            input.ReadMessage(subBuilder);
            OrMatch = subBuilder;
            break;
          }
          case 18: {
            global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate.Types.MatchSet subBuilder = new global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate.Types.MatchSet();
            if (ruleCase_ == RuleOneofCase.AndMatch) {
              subBuilder.MergeFrom(AndMatch);
            }
            input.ReadMessage(subBuilder);
            AndMatch = subBuilder;
            break;
          }
          case 26: {
            global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate subBuilder = new global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate();
            if (ruleCase_ == RuleOneofCase.NotMatch) {
              subBuilder.MergeFrom(NotMatch);
            }
            input.ReadMessage(subBuilder);
            NotMatch = subBuilder;
            break;
          }
          case 32: {
            AnyMatch = input.ReadBool();
            break;
          }
          case 42: {
            global::Envoy.Type.Int32Range subBuilder = new global::Envoy.Type.Int32Range();
            if (ruleCase_ == RuleOneofCase.DestinationPortRange) {
              subBuilder.MergeFrom(DestinationPortRange);
            }
            input.ReadMessage(subBuilder);
            DestinationPortRange = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate.Types.MatchSet subBuilder = new global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate.Types.MatchSet();
            if (ruleCase_ == RuleOneofCase.OrMatch) {
              subBuilder.MergeFrom(OrMatch);
            }
            input.ReadMessage(subBuilder);
            OrMatch = subBuilder;
            break;
          }
          case 18: {
            global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate.Types.MatchSet subBuilder = new global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate.Types.MatchSet();
            if (ruleCase_ == RuleOneofCase.AndMatch) {
              subBuilder.MergeFrom(AndMatch);
            }
            input.ReadMessage(subBuilder);
            AndMatch = subBuilder;
            break;
          }
          case 26: {
            global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate subBuilder = new global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate();
            if (ruleCase_ == RuleOneofCase.NotMatch) {
              subBuilder.MergeFrom(NotMatch);
            }
            input.ReadMessage(subBuilder);
            NotMatch = subBuilder;
            break;
          }
          case 32: {
            AnyMatch = input.ReadBool();
            break;
          }
          case 42: {
            global::Envoy.Type.Int32Range subBuilder = new global::Envoy.Type.Int32Range();
            if (ruleCase_ == RuleOneofCase.DestinationPortRange) {
              subBuilder.MergeFrom(DestinationPortRange);
            }
            input.ReadMessage(subBuilder);
            DestinationPortRange = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ListenerFilterChainMatchPredicate message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// A set of match configurations used for logical operations.
      /// </summary>
      public sealed partial class MatchSet : pb::IMessage<MatchSet>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MatchSet> _parser = new pb::MessageParser<MatchSet>(() => new MatchSet());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<MatchSet> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MatchSet() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MatchSet(MatchSet other) : this() {
          rules_ = other.rules_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MatchSet Clone() {
          return new MatchSet(this);
        }

        /// <summary>Field number for the "rules" field.</summary>
        public const int RulesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate> _repeated_rules_codec
            = pb::FieldCodec.ForMessage(10, global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate.Parser);
        private readonly pbc::RepeatedField<global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate> rules_ = new pbc::RepeatedField<global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate>();
        /// <summary>
        /// The list of rules that make up the set.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate> Rules {
          get { return rules_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as MatchSet);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(MatchSet other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!rules_.Equals(other.rules_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= rules_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          rules_.WriteTo(output, _repeated_rules_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          rules_.WriteTo(ref output, _repeated_rules_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += rules_.CalculateSize(_repeated_rules_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(MatchSet other) {
          if (other == null) {
            return;
          }
          rules_.Add(other.rules_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                rules_.AddEntriesFrom(input, _repeated_rules_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                rules_.AddEntriesFrom(ref input, _repeated_rules_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class ListenerFilter : pb::IMessage<ListenerFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListenerFilter> _parser = new pb::MessageParser<ListenerFilter>(() => new ListenerFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListenerFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Api.V2.ListenerNS.ListenerComponentsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListenerFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListenerFilter(ListenerFilter other) : this() {
      name_ = other.name_;
      filterDisabled_ = other.filterDisabled_ != null ? other.filterDisabled_.Clone() : null;
      switch (other.ConfigTypeCase) {
        case ConfigTypeOneofCase.Config:
          Config = other.Config.Clone();
          break;
        case ConfigTypeOneofCase.TypedConfig:
          TypedConfig = other.TypedConfig.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListenerFilter Clone() {
      return new ListenerFilter(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the filter to instantiate. The name must match a
    /// :ref:`supported filter &lt;config_listener_filters>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Struct Config {
      get { return configTypeCase_ == ConfigTypeOneofCase.Config ? (global::Google.Protobuf.WellKnownTypes.Struct) configType_ : null; }
      set {
        configType_ = value;
        configTypeCase_ = value == null ? ConfigTypeOneofCase.None : ConfigTypeOneofCase.Config;
      }
    }

    /// <summary>Field number for the "typed_config" field.</summary>
    public const int TypedConfigFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Any TypedConfig {
      get { return configTypeCase_ == ConfigTypeOneofCase.TypedConfig ? (global::Google.Protobuf.WellKnownTypes.Any) configType_ : null; }
      set {
        configType_ = value;
        configTypeCase_ = value == null ? ConfigTypeOneofCase.None : ConfigTypeOneofCase.TypedConfig;
      }
    }

    /// <summary>Field number for the "filter_disabled" field.</summary>
    public const int FilterDisabledFieldNumber = 4;
    private global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate filterDisabled_;
    /// <summary>
    /// Optional match predicate used to disable the filter. The filter is enabled when this field is empty.
    /// See :ref:`ListenerFilterChainMatchPredicate &lt;envoy_api_msg_listener.ListenerFilterChainMatchPredicate>`
    /// for further examples.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate FilterDisabled {
      get { return filterDisabled_; }
      set {
        filterDisabled_ = value;
      }
    }

    private object configType_;
    /// <summary>Enum of possible cases for the "config_type" oneof.</summary>
    public enum ConfigTypeOneofCase {
      None = 0,
      Config = 2,
      TypedConfig = 3,
    }
    private ConfigTypeOneofCase configTypeCase_ = ConfigTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConfigTypeOneofCase ConfigTypeCase {
      get { return configTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConfigType() {
      configTypeCase_ = ConfigTypeOneofCase.None;
      configType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListenerFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListenerFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (!object.Equals(TypedConfig, other.TypedConfig)) return false;
      if (!object.Equals(FilterDisabled, other.FilterDisabled)) return false;
      if (ConfigTypeCase != other.ConfigTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (configTypeCase_ == ConfigTypeOneofCase.Config) hash ^= Config.GetHashCode();
      if (configTypeCase_ == ConfigTypeOneofCase.TypedConfig) hash ^= TypedConfig.GetHashCode();
      if (filterDisabled_ != null) hash ^= FilterDisabled.GetHashCode();
      hash ^= (int) configTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (configTypeCase_ == ConfigTypeOneofCase.Config) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (configTypeCase_ == ConfigTypeOneofCase.TypedConfig) {
        output.WriteRawTag(26);
        output.WriteMessage(TypedConfig);
      }
      if (filterDisabled_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FilterDisabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (configTypeCase_ == ConfigTypeOneofCase.Config) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (configTypeCase_ == ConfigTypeOneofCase.TypedConfig) {
        output.WriteRawTag(26);
        output.WriteMessage(TypedConfig);
      }
      if (filterDisabled_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FilterDisabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (configTypeCase_ == ConfigTypeOneofCase.Config) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (configTypeCase_ == ConfigTypeOneofCase.TypedConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypedConfig);
      }
      if (filterDisabled_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FilterDisabled);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListenerFilter other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.filterDisabled_ != null) {
        if (filterDisabled_ == null) {
          FilterDisabled = new global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate();
        }
        FilterDisabled.MergeFrom(other.FilterDisabled);
      }
      switch (other.ConfigTypeCase) {
        case ConfigTypeOneofCase.Config:
          if (Config == null) {
            Config = new global::Google.Protobuf.WellKnownTypes.Struct();
          }
          Config.MergeFrom(other.Config);
          break;
        case ConfigTypeOneofCase.TypedConfig:
          if (TypedConfig == null) {
            TypedConfig = new global::Google.Protobuf.WellKnownTypes.Any();
          }
          TypedConfig.MergeFrom(other.TypedConfig);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            global::Google.Protobuf.WellKnownTypes.Struct subBuilder = new global::Google.Protobuf.WellKnownTypes.Struct();
            if (configTypeCase_ == ConfigTypeOneofCase.Config) {
              subBuilder.MergeFrom(Config);
            }
            input.ReadMessage(subBuilder);
            Config = subBuilder;
            break;
          }
          case 26: {
            global::Google.Protobuf.WellKnownTypes.Any subBuilder = new global::Google.Protobuf.WellKnownTypes.Any();
            if (configTypeCase_ == ConfigTypeOneofCase.TypedConfig) {
              subBuilder.MergeFrom(TypedConfig);
            }
            input.ReadMessage(subBuilder);
            TypedConfig = subBuilder;
            break;
          }
          case 34: {
            if (filterDisabled_ == null) {
              FilterDisabled = new global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate();
            }
            input.ReadMessage(FilterDisabled);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            global::Google.Protobuf.WellKnownTypes.Struct subBuilder = new global::Google.Protobuf.WellKnownTypes.Struct();
            if (configTypeCase_ == ConfigTypeOneofCase.Config) {
              subBuilder.MergeFrom(Config);
            }
            input.ReadMessage(subBuilder);
            Config = subBuilder;
            break;
          }
          case 26: {
            global::Google.Protobuf.WellKnownTypes.Any subBuilder = new global::Google.Protobuf.WellKnownTypes.Any();
            if (configTypeCase_ == ConfigTypeOneofCase.TypedConfig) {
              subBuilder.MergeFrom(TypedConfig);
            }
            input.ReadMessage(subBuilder);
            TypedConfig = subBuilder;
            break;
          }
          case 34: {
            if (filterDisabled_ == null) {
              FilterDisabled = new global::Envoy.Api.V2.ListenerNS.ListenerFilterChainMatchPredicate();
            }
            input.ReadMessage(FilterDisabled);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
