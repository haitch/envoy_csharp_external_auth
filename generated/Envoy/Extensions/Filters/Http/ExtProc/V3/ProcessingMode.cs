// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/extensions/filters/http/ext_proc/v3/processing_mode.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Extensions.Filters.Http.ExtProc.V3 {

  /// <summary>Holder for reflection information generated from envoy/extensions/filters/http/ext_proc/v3/processing_mode.proto</summary>
  public static partial class ProcessingModeReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/extensions/filters/http/ext_proc/v3/processing_mode.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProcessingModeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj9lbnZveS9leHRlbnNpb25zL2ZpbHRlcnMvaHR0cC9leHRfcHJvYy92My9w",
            "cm9jZXNzaW5nX21vZGUucHJvdG8SKWVudm95LmV4dGVuc2lvbnMuZmlsdGVy",
            "cy5odHRwLmV4dF9wcm9jLnYzGh94ZHMvYW5ub3RhdGlvbnMvdjMvc3RhdHVz",
            "LnByb3RvGh11ZHBhL2Fubm90YXRpb25zL3N0YXR1cy5wcm90bxoXdmFsaWRh",
            "dGUvdmFsaWRhdGUucHJvdG8isgYKDlByb2Nlc3NpbmdNb2RlEm8KE3JlcXVl",
            "c3RfaGVhZGVyX21vZGUYASABKA4ySC5lbnZveS5leHRlbnNpb25zLmZpbHRl",
            "cnMuaHR0cC5leHRfcHJvYy52My5Qcm9jZXNzaW5nTW9kZS5IZWFkZXJTZW5k",
            "TW9kZUII+kIFggECEAEScAoUcmVzcG9uc2VfaGVhZGVyX21vZGUYAiABKA4y",
            "SC5lbnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5leHRfcHJvYy52My5Q",
            "cm9jZXNzaW5nTW9kZS5IZWFkZXJTZW5kTW9kZUII+kIFggECEAESawoRcmVx",
            "dWVzdF9ib2R5X21vZGUYAyABKA4yRi5lbnZveS5leHRlbnNpb25zLmZpbHRl",
            "cnMuaHR0cC5leHRfcHJvYy52My5Qcm9jZXNzaW5nTW9kZS5Cb2R5U2VuZE1v",
            "ZGVCCPpCBYIBAhABEmwKEnJlc3BvbnNlX2JvZHlfbW9kZRgEIAEoDjJGLmVu",
            "dm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLmV4dF9wcm9jLnYzLlByb2Nl",
            "c3NpbmdNb2RlLkJvZHlTZW5kTW9kZUII+kIFggECEAEScAoUcmVxdWVzdF90",
            "cmFpbGVyX21vZGUYBSABKA4ySC5lbnZveS5leHRlbnNpb25zLmZpbHRlcnMu",
            "aHR0cC5leHRfcHJvYy52My5Qcm9jZXNzaW5nTW9kZS5IZWFkZXJTZW5kTW9k",
            "ZUII+kIFggECEAEScQoVcmVzcG9uc2VfdHJhaWxlcl9tb2RlGAYgASgOMkgu",
            "ZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLmh0dHAuZXh0X3Byb2MudjMuUHJv",
            "Y2Vzc2luZ01vZGUuSGVhZGVyU2VuZE1vZGVCCPpCBYIBAhABIjEKDkhlYWRl",
            "clNlbmRNb2RlEgsKB0RFRkFVTFQQABIICgRTRU5EEAESCAoEU0tJUBACIkoK",
            "DEJvZHlTZW5kTW9kZRIICgROT05FEAASDAoIU1RSRUFNRUQQARIMCghCVUZG",
            "RVJFRBACEhQKEEJVRkZFUkVEX1BBUlRJQUwQA0JgCjdpby5lbnZveXByb3h5",
            "LmVudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLmV4dF9wcm9jLnYzQhNQ",
            "cm9jZXNzaW5nTW9kZVByb3RvUAG6gMjRBgIQAtLGpOEGAggBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Xds.Annotations.V3.StatusReflection.Descriptor, global::Udpa.Annotations.StatusReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode), global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Parser, new[]{ "RequestHeaderMode", "ResponseHeaderMode", "RequestBodyMode", "ResponseBodyMode", "RequestTrailerMode", "ResponseTrailerMode" }, null, new[]{ typeof(global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode), typeof(global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.BodySendMode) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// [#next-free-field: 7]
  /// </summary>
  public sealed partial class ProcessingMode : pb::IMessage<ProcessingMode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProcessingMode> _parser = new pb::MessageParser<ProcessingMode>(() => new ProcessingMode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProcessingMode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingModeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProcessingMode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProcessingMode(ProcessingMode other) : this() {
      requestHeaderMode_ = other.requestHeaderMode_;
      responseHeaderMode_ = other.responseHeaderMode_;
      requestBodyMode_ = other.requestBodyMode_;
      responseBodyMode_ = other.responseBodyMode_;
      requestTrailerMode_ = other.requestTrailerMode_;
      responseTrailerMode_ = other.responseTrailerMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProcessingMode Clone() {
      return new ProcessingMode(this);
    }

    /// <summary>Field number for the "request_header_mode" field.</summary>
    public const int RequestHeaderModeFieldNumber = 1;
    private global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode requestHeaderMode_ = global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default;
    /// <summary>
    /// How to handle the request header. Default is "SEND".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode RequestHeaderMode {
      get { return requestHeaderMode_; }
      set {
        requestHeaderMode_ = value;
      }
    }

    /// <summary>Field number for the "response_header_mode" field.</summary>
    public const int ResponseHeaderModeFieldNumber = 2;
    private global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode responseHeaderMode_ = global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default;
    /// <summary>
    /// How to handle the response header. Default is "SEND".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode ResponseHeaderMode {
      get { return responseHeaderMode_; }
      set {
        responseHeaderMode_ = value;
      }
    }

    /// <summary>Field number for the "request_body_mode" field.</summary>
    public const int RequestBodyModeFieldNumber = 3;
    private global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.BodySendMode requestBodyMode_ = global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.BodySendMode.None;
    /// <summary>
    /// How to handle the request body. Default is "NONE".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.BodySendMode RequestBodyMode {
      get { return requestBodyMode_; }
      set {
        requestBodyMode_ = value;
      }
    }

    /// <summary>Field number for the "response_body_mode" field.</summary>
    public const int ResponseBodyModeFieldNumber = 4;
    private global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.BodySendMode responseBodyMode_ = global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.BodySendMode.None;
    /// <summary>
    /// How do handle the response body. Default is "NONE".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.BodySendMode ResponseBodyMode {
      get { return responseBodyMode_; }
      set {
        responseBodyMode_ = value;
      }
    }

    /// <summary>Field number for the "request_trailer_mode" field.</summary>
    public const int RequestTrailerModeFieldNumber = 5;
    private global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode requestTrailerMode_ = global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default;
    /// <summary>
    /// How to handle the request trailers. Default is "SKIP".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode RequestTrailerMode {
      get { return requestTrailerMode_; }
      set {
        requestTrailerMode_ = value;
      }
    }

    /// <summary>Field number for the "response_trailer_mode" field.</summary>
    public const int ResponseTrailerModeFieldNumber = 6;
    private global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode responseTrailerMode_ = global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default;
    /// <summary>
    /// How to handle the response trailers. Default is "SKIP".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode ResponseTrailerMode {
      get { return responseTrailerMode_; }
      set {
        responseTrailerMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProcessingMode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProcessingMode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestHeaderMode != other.RequestHeaderMode) return false;
      if (ResponseHeaderMode != other.ResponseHeaderMode) return false;
      if (RequestBodyMode != other.RequestBodyMode) return false;
      if (ResponseBodyMode != other.ResponseBodyMode) return false;
      if (RequestTrailerMode != other.RequestTrailerMode) return false;
      if (ResponseTrailerMode != other.ResponseTrailerMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestHeaderMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default) hash ^= RequestHeaderMode.GetHashCode();
      if (ResponseHeaderMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default) hash ^= ResponseHeaderMode.GetHashCode();
      if (RequestBodyMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.BodySendMode.None) hash ^= RequestBodyMode.GetHashCode();
      if (ResponseBodyMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.BodySendMode.None) hash ^= ResponseBodyMode.GetHashCode();
      if (RequestTrailerMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default) hash ^= RequestTrailerMode.GetHashCode();
      if (ResponseTrailerMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default) hash ^= ResponseTrailerMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestHeaderMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RequestHeaderMode);
      }
      if (ResponseHeaderMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ResponseHeaderMode);
      }
      if (RequestBodyMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.BodySendMode.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RequestBodyMode);
      }
      if (ResponseBodyMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.BodySendMode.None) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ResponseBodyMode);
      }
      if (RequestTrailerMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default) {
        output.WriteRawTag(40);
        output.WriteEnum((int) RequestTrailerMode);
      }
      if (ResponseTrailerMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default) {
        output.WriteRawTag(48);
        output.WriteEnum((int) ResponseTrailerMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestHeaderMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RequestHeaderMode);
      }
      if (ResponseHeaderMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ResponseHeaderMode);
      }
      if (RequestBodyMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.BodySendMode.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RequestBodyMode);
      }
      if (ResponseBodyMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.BodySendMode.None) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ResponseBodyMode);
      }
      if (RequestTrailerMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default) {
        output.WriteRawTag(40);
        output.WriteEnum((int) RequestTrailerMode);
      }
      if (ResponseTrailerMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default) {
        output.WriteRawTag(48);
        output.WriteEnum((int) ResponseTrailerMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RequestHeaderMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequestHeaderMode);
      }
      if (ResponseHeaderMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResponseHeaderMode);
      }
      if (RequestBodyMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.BodySendMode.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequestBodyMode);
      }
      if (ResponseBodyMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.BodySendMode.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResponseBodyMode);
      }
      if (RequestTrailerMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequestTrailerMode);
      }
      if (ResponseTrailerMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResponseTrailerMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProcessingMode other) {
      if (other == null) {
        return;
      }
      if (other.RequestHeaderMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default) {
        RequestHeaderMode = other.RequestHeaderMode;
      }
      if (other.ResponseHeaderMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default) {
        ResponseHeaderMode = other.ResponseHeaderMode;
      }
      if (other.RequestBodyMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.BodySendMode.None) {
        RequestBodyMode = other.RequestBodyMode;
      }
      if (other.ResponseBodyMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.BodySendMode.None) {
        ResponseBodyMode = other.ResponseBodyMode;
      }
      if (other.RequestTrailerMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default) {
        RequestTrailerMode = other.RequestTrailerMode;
      }
      if (other.ResponseTrailerMode != global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode.Default) {
        ResponseTrailerMode = other.ResponseTrailerMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestHeaderMode = (global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode) input.ReadEnum();
            break;
          }
          case 16: {
            ResponseHeaderMode = (global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode) input.ReadEnum();
            break;
          }
          case 24: {
            RequestBodyMode = (global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.BodySendMode) input.ReadEnum();
            break;
          }
          case 32: {
            ResponseBodyMode = (global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.BodySendMode) input.ReadEnum();
            break;
          }
          case 40: {
            RequestTrailerMode = (global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode) input.ReadEnum();
            break;
          }
          case 48: {
            ResponseTrailerMode = (global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestHeaderMode = (global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode) input.ReadEnum();
            break;
          }
          case 16: {
            ResponseHeaderMode = (global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode) input.ReadEnum();
            break;
          }
          case 24: {
            RequestBodyMode = (global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.BodySendMode) input.ReadEnum();
            break;
          }
          case 32: {
            ResponseBodyMode = (global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.BodySendMode) input.ReadEnum();
            break;
          }
          case 40: {
            RequestTrailerMode = (global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode) input.ReadEnum();
            break;
          }
          case 48: {
            ResponseTrailerMode = (global::Envoy.Extensions.Filters.Http.ExtProc.V3.ProcessingMode.Types.HeaderSendMode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ProcessingMode message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Control how headers and trailers are handled
      /// </summary>
      public enum HeaderSendMode {
        /// <summary>
        /// The default HeaderSendMode depends on which part of the message is being
        /// processed. By default, request and response headers are sent,
        /// while trailers are skipped.
        /// </summary>
        [pbr::OriginalName("DEFAULT")] Default = 0,
        /// <summary>
        /// Send the header or trailer.
        /// </summary>
        [pbr::OriginalName("SEND")] Send = 1,
        /// <summary>
        /// Do not send the header or trailer.
        /// </summary>
        [pbr::OriginalName("SKIP")] Skip = 2,
      }

      /// <summary>
      /// Control how the request and response bodies are handled
      /// </summary>
      public enum BodySendMode {
        /// <summary>
        /// Do not send the body at all. This is the default.
        /// </summary>
        [pbr::OriginalName("NONE")] None = 0,
        /// <summary>
        /// Stream the body to the server in pieces as they arrive at the
        /// proxy.
        /// </summary>
        [pbr::OriginalName("STREAMED")] Streamed = 1,
        /// <summary>
        /// Buffer the message body in memory and send the entire body at once.
        /// If the body exceeds the configured buffer limit, then the
        /// downstream system will receive an error.
        /// </summary>
        [pbr::OriginalName("BUFFERED")] Buffered = 2,
        /// <summary>
        /// Buffer the message body in memory and send the entire body in one
        /// chunk. If the body exceeds the configured buffer limit, then the body contents
        /// up to the buffer limit will be sent.
        /// </summary>
        [pbr::OriginalName("BUFFERED_PARTIAL")] BufferedPartial = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
