// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/config/filter/http/rate_limit/v2/rate_limit.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Config.Filter.Http.RateLimit.V2 {

  /// <summary>Holder for reflection information generated from envoy/config/filter/http/rate_limit/v2/rate_limit.proto</summary>
  public static partial class RateLimitReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/config/filter/http/rate_limit/v2/rate_limit.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RateLimitReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjdlbnZveS9jb25maWcvZmlsdGVyL2h0dHAvcmF0ZV9saW1pdC92Mi9yYXRl",
            "X2xpbWl0LnByb3RvEiZlbnZveS5jb25maWcuZmlsdGVyLmh0dHAucmF0ZV9s",
            "aW1pdC52MhojZW52b3kvY29uZmlnL3JhdGVsaW1pdC92Mi9ybHMucHJvdG8a",
            "Hmdvb2dsZS9wcm90b2J1Zi9kdXJhdGlvbi5wcm90bxoedWRwYS9hbm5vdGF0",
            "aW9ucy9taWdyYXRlLnByb3RvGh11ZHBhL2Fubm90YXRpb25zL3N0YXR1cy5w",
            "cm90bxoXdmFsaWRhdGUvdmFsaWRhdGUucHJvdG8iwQIKCVJhdGVMaW1pdBIX",
            "CgZkb21haW4YASABKAlCB/pCBHICIAESFgoFc3RhZ2UYAiABKA1CB/pCBCoC",
            "GAoSNwoMcmVxdWVzdF90eXBlGAMgASgJQiH6Qh5yHFIIaW50ZXJuYWxSCGV4",
            "dGVybmFsUgRib3RoUgASKgoHdGltZW91dBgEIAEoCzIZLmdvb2dsZS5wcm90",
            "b2J1Zi5EdXJhdGlvbhIZChFmYWlsdXJlX21vZGVfZGVueRgFIAEoCBIqCiJy",
            "YXRlX2xpbWl0ZWRfYXNfcmVzb3VyY2VfZXhoYXVzdGVkGAYgASgIElcKEnJh",
            "dGVfbGltaXRfc2VydmljZRgHIAEoCzIxLmVudm95LmNvbmZpZy5yYXRlbGlt",
            "aXQudjIuUmF0ZUxpbWl0U2VydmljZUNvbmZpZ0II+kIFigECEAFCggEKNGlv",
            "LmVudm95cHJveHkuZW52b3kuY29uZmlnLmZpbHRlci5odHRwLnJhdGVfbGlt",
            "aXQudjJCDlJhdGVMaW1pdFByb3RvUAHymP6PBSwSKmVudm95LmV4dGVuc2lv",
            "bnMuZmlsdGVycy5odHRwLnJhdGVsaW1pdC52M7qAyNEGAhABYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Config.Ratelimit.V2.RlsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Udpa.Annotations.MigrateReflection.Descriptor, global::Udpa.Annotations.StatusReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Filter.Http.RateLimit.V2.RateLimit), global::Envoy.Config.Filter.Http.RateLimit.V2.RateLimit.Parser, new[]{ "Domain", "Stage", "RequestType", "Timeout", "FailureModeDeny", "RateLimitedAsResourceExhausted", "RateLimitService" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// [#next-free-field: 8]
  /// </summary>
  public sealed partial class RateLimit : pb::IMessage<RateLimit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RateLimit> _parser = new pb::MessageParser<RateLimit>(() => new RateLimit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RateLimit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.Filter.Http.RateLimit.V2.RateLimitReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RateLimit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RateLimit(RateLimit other) : this() {
      domain_ = other.domain_;
      stage_ = other.stage_;
      requestType_ = other.requestType_;
      timeout_ = other.timeout_ != null ? other.timeout_.Clone() : null;
      failureModeDeny_ = other.failureModeDeny_;
      rateLimitedAsResourceExhausted_ = other.rateLimitedAsResourceExhausted_;
      rateLimitService_ = other.rateLimitService_ != null ? other.rateLimitService_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RateLimit Clone() {
      return new RateLimit(this);
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 1;
    private string domain_ = "";
    /// <summary>
    /// The rate limit domain to use when calling the rate limit service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Domain {
      get { return domain_; }
      set {
        domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stage" field.</summary>
    public const int StageFieldNumber = 2;
    private uint stage_;
    /// <summary>
    /// Specifies the rate limit configurations to be applied with the same
    /// stage number. If not set, the default stage number is 0.
    ///
    /// .. note::
    ///
    ///  The filter supports a range of 0 - 10 inclusively for stage numbers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Stage {
      get { return stage_; }
      set {
        stage_ = value;
      }
    }

    /// <summary>Field number for the "request_type" field.</summary>
    public const int RequestTypeFieldNumber = 3;
    private string requestType_ = "";
    /// <summary>
    /// The type of requests the filter should apply to. The supported
    /// types are *internal*, *external* or *both*. A request is considered internal if
    /// :ref:`x-envoy-internal&lt;config_http_conn_man_headers_x-envoy-internal>` is set to true. If
    /// :ref:`x-envoy-internal&lt;config_http_conn_man_headers_x-envoy-internal>` is not set or false, a
    /// request is considered external. The filter defaults to *both*, and it will apply to all request
    /// types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RequestType {
      get { return requestType_; }
      set {
        requestType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timeout" field.</summary>
    public const int TimeoutFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Duration timeout_;
    /// <summary>
    /// The timeout in milliseconds for the rate limit service RPC. If not
    /// set, this defaults to 20ms.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration Timeout {
      get { return timeout_; }
      set {
        timeout_ = value;
      }
    }

    /// <summary>Field number for the "failure_mode_deny" field.</summary>
    public const int FailureModeDenyFieldNumber = 5;
    private bool failureModeDeny_;
    /// <summary>
    /// The filter's behaviour in case the rate limiting service does
    /// not respond back. When it is set to true, Envoy will not allow traffic in case of
    /// communication failure between rate limiting service and the proxy.
    /// Defaults to false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FailureModeDeny {
      get { return failureModeDeny_; }
      set {
        failureModeDeny_ = value;
      }
    }

    /// <summary>Field number for the "rate_limited_as_resource_exhausted" field.</summary>
    public const int RateLimitedAsResourceExhaustedFieldNumber = 6;
    private bool rateLimitedAsResourceExhausted_;
    /// <summary>
    /// Specifies whether a `RESOURCE_EXHAUSTED` gRPC code must be returned instead
    /// of the default `UNAVAILABLE` gRPC code for a rate limited gRPC call. The
    /// HTTP code will be 200 for a gRPC response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RateLimitedAsResourceExhausted {
      get { return rateLimitedAsResourceExhausted_; }
      set {
        rateLimitedAsResourceExhausted_ = value;
      }
    }

    /// <summary>Field number for the "rate_limit_service" field.</summary>
    public const int RateLimitServiceFieldNumber = 7;
    private global::Envoy.Config.Ratelimit.V2.RateLimitServiceConfig rateLimitService_;
    /// <summary>
    /// Configuration for an external rate limit service provider. If not
    /// specified, any calls to the rate limit service will immediately return
    /// success.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Ratelimit.V2.RateLimitServiceConfig RateLimitService {
      get { return rateLimitService_; }
      set {
        rateLimitService_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RateLimit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RateLimit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Domain != other.Domain) return false;
      if (Stage != other.Stage) return false;
      if (RequestType != other.RequestType) return false;
      if (!object.Equals(Timeout, other.Timeout)) return false;
      if (FailureModeDeny != other.FailureModeDeny) return false;
      if (RateLimitedAsResourceExhausted != other.RateLimitedAsResourceExhausted) return false;
      if (!object.Equals(RateLimitService, other.RateLimitService)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Domain.Length != 0) hash ^= Domain.GetHashCode();
      if (Stage != 0) hash ^= Stage.GetHashCode();
      if (RequestType.Length != 0) hash ^= RequestType.GetHashCode();
      if (timeout_ != null) hash ^= Timeout.GetHashCode();
      if (FailureModeDeny != false) hash ^= FailureModeDeny.GetHashCode();
      if (RateLimitedAsResourceExhausted != false) hash ^= RateLimitedAsResourceExhausted.GetHashCode();
      if (rateLimitService_ != null) hash ^= RateLimitService.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Domain.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Domain);
      }
      if (Stage != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Stage);
      }
      if (RequestType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RequestType);
      }
      if (timeout_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Timeout);
      }
      if (FailureModeDeny != false) {
        output.WriteRawTag(40);
        output.WriteBool(FailureModeDeny);
      }
      if (RateLimitedAsResourceExhausted != false) {
        output.WriteRawTag(48);
        output.WriteBool(RateLimitedAsResourceExhausted);
      }
      if (rateLimitService_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RateLimitService);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Domain.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Domain);
      }
      if (Stage != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Stage);
      }
      if (RequestType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RequestType);
      }
      if (timeout_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Timeout);
      }
      if (FailureModeDeny != false) {
        output.WriteRawTag(40);
        output.WriteBool(FailureModeDeny);
      }
      if (RateLimitedAsResourceExhausted != false) {
        output.WriteRawTag(48);
        output.WriteBool(RateLimitedAsResourceExhausted);
      }
      if (rateLimitService_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RateLimitService);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Domain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      if (Stage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Stage);
      }
      if (RequestType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestType);
      }
      if (timeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timeout);
      }
      if (FailureModeDeny != false) {
        size += 1 + 1;
      }
      if (RateLimitedAsResourceExhausted != false) {
        size += 1 + 1;
      }
      if (rateLimitService_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RateLimitService);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RateLimit other) {
      if (other == null) {
        return;
      }
      if (other.Domain.Length != 0) {
        Domain = other.Domain;
      }
      if (other.Stage != 0) {
        Stage = other.Stage;
      }
      if (other.RequestType.Length != 0) {
        RequestType = other.RequestType;
      }
      if (other.timeout_ != null) {
        if (timeout_ == null) {
          Timeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Timeout.MergeFrom(other.Timeout);
      }
      if (other.FailureModeDeny != false) {
        FailureModeDeny = other.FailureModeDeny;
      }
      if (other.RateLimitedAsResourceExhausted != false) {
        RateLimitedAsResourceExhausted = other.RateLimitedAsResourceExhausted;
      }
      if (other.rateLimitService_ != null) {
        if (rateLimitService_ == null) {
          RateLimitService = new global::Envoy.Config.Ratelimit.V2.RateLimitServiceConfig();
        }
        RateLimitService.MergeFrom(other.RateLimitService);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Domain = input.ReadString();
            break;
          }
          case 16: {
            Stage = input.ReadUInt32();
            break;
          }
          case 26: {
            RequestType = input.ReadString();
            break;
          }
          case 34: {
            if (timeout_ == null) {
              Timeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Timeout);
            break;
          }
          case 40: {
            FailureModeDeny = input.ReadBool();
            break;
          }
          case 48: {
            RateLimitedAsResourceExhausted = input.ReadBool();
            break;
          }
          case 58: {
            if (rateLimitService_ == null) {
              RateLimitService = new global::Envoy.Config.Ratelimit.V2.RateLimitServiceConfig();
            }
            input.ReadMessage(RateLimitService);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Domain = input.ReadString();
            break;
          }
          case 16: {
            Stage = input.ReadUInt32();
            break;
          }
          case 26: {
            RequestType = input.ReadString();
            break;
          }
          case 34: {
            if (timeout_ == null) {
              Timeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Timeout);
            break;
          }
          case 40: {
            FailureModeDeny = input.ReadBool();
            break;
          }
          case 48: {
            RateLimitedAsResourceExhausted = input.ReadBool();
            break;
          }
          case 58: {
            if (rateLimitService_ == null) {
              RateLimitService = new global::Envoy.Config.Ratelimit.V2.RateLimitServiceConfig();
            }
            input.ReadMessage(RateLimitService);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
