// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/config/filter/http/jwt_authn/v2alpha/config.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Config.Filter.Http.JwtAuthn.V2Alpha {

  /// <summary>Holder for reflection information generated from envoy/config/filter/http/jwt_authn/v2alpha/config.proto</summary>
  public static partial class ConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/config/filter/http/jwt_authn/v2alpha/config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjdlbnZveS9jb25maWcvZmlsdGVyL2h0dHAvand0X2F1dGhuL3YyYWxwaGEv",
            "Y29uZmlnLnByb3RvEiplbnZveS5jb25maWcuZmlsdGVyLmh0dHAuand0X2F1",
            "dGhuLnYyYWxwaGEaHGVudm95L2FwaS92Mi9jb3JlL2Jhc2UucHJvdG8aIGVu",
            "dm95L2FwaS92Mi9jb3JlL2h0dHBfdXJpLnByb3RvGillbnZveS9hcGkvdjIv",
            "cm91dGUvcm91dGVfY29tcG9uZW50cy5wcm90bxoeZ29vZ2xlL3Byb3RvYnVm",
            "L2R1cmF0aW9uLnByb3RvGhtnb29nbGUvcHJvdG9idWYvZW1wdHkucHJvdG8a",
            "HnVkcGEvYW5ub3RhdGlvbnMvbWlncmF0ZS5wcm90bxoddWRwYS9hbm5vdGF0",
            "aW9ucy9zdGF0dXMucHJvdG8aF3ZhbGlkYXRlL3ZhbGlkYXRlLnByb3RvIosD",
            "CgtKd3RQcm92aWRlchIXCgZpc3N1ZXIYASABKAlCB/pCBHICIAESEQoJYXVk",
            "aWVuY2VzGAIgAygJEk0KC3JlbW90ZV9qd2tzGAMgASgLMjYuZW52b3kuY29u",
            "ZmlnLmZpbHRlci5odHRwLmp3dF9hdXRobi52MmFscGhhLlJlbW90ZUp3a3NI",
            "ABIzCgpsb2NhbF9qd2tzGAQgASgLMh0uZW52b3kuYXBpLnYyLmNvcmUuRGF0",
            "YVNvdXJjZUgAEg8KB2ZvcndhcmQYBSABKAgSSwoMZnJvbV9oZWFkZXJzGAYg",
            "AygLMjUuZW52b3kuY29uZmlnLmZpbHRlci5odHRwLmp3dF9hdXRobi52MmFs",
            "cGhhLkp3dEhlYWRlchITCgtmcm9tX3BhcmFtcxgHIAMoCRIeChZmb3J3YXJk",
            "X3BheWxvYWRfaGVhZGVyGAggASgJEhsKE3BheWxvYWRfaW5fbWV0YWRhdGEY",
            "CSABKAlCHAoVandrc19zb3VyY2Vfc3BlY2lmaWVyEgP4QgEibQoKUmVtb3Rl",
            "SndrcxIsCghodHRwX3VyaRgBIAEoCzIaLmVudm95LmFwaS52Mi5jb3JlLkh0",
            "dHBVcmkSMQoOY2FjaGVfZHVyYXRpb24YAiABKAsyGS5nb29nbGUucHJvdG9i",
            "dWYuRHVyYXRpb24iOAoJSnd0SGVhZGVyEhUKBG5hbWUYASABKAlCB/pCBHIC",
            "IAESFAoMdmFsdWVfcHJlZml4GAIgASgJIkEKFVByb3ZpZGVyV2l0aEF1ZGll",
            "bmNlcxIVCg1wcm92aWRlcl9uYW1lGAEgASgJEhEKCWF1ZGllbmNlcxgCIAMo",
            "CSLAAwoOSnd0UmVxdWlyZW1lbnQSFwoNcHJvdmlkZXJfbmFtZRgBIAEoCUgA",
            "EmMKFnByb3ZpZGVyX2FuZF9hdWRpZW5jZXMYAiABKAsyQS5lbnZveS5jb25m",
            "aWcuZmlsdGVyLmh0dHAuand0X2F1dGhuLnYyYWxwaGEuUHJvdmlkZXJXaXRo",
            "QXVkaWVuY2VzSAASWAoMcmVxdWlyZXNfYW55GAMgASgLMkAuZW52b3kuY29u",
            "ZmlnLmZpbHRlci5odHRwLmp3dF9hdXRobi52MmFscGhhLkp3dFJlcXVpcmVt",
            "ZW50T3JMaXN0SAASWQoMcmVxdWlyZXNfYWxsGAQgASgLMkEuZW52b3kuY29u",
            "ZmlnLmZpbHRlci5odHRwLmp3dF9hdXRobi52MmFscGhhLkp3dFJlcXVpcmVt",
            "ZW50QW5kTGlzdEgAEjkKF2FsbG93X21pc3Npbmdfb3JfZmFpbGVkGAUgASgL",
            "MhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5SAASLwoNYWxsb3dfbWlzc2luZxgG",
            "IAEoCzIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eUgAQg8KDXJlcXVpcmVzX3R5",
            "cGUicgoUSnd0UmVxdWlyZW1lbnRPckxpc3QSWgoMcmVxdWlyZW1lbnRzGAEg",
            "AygLMjouZW52b3kuY29uZmlnLmZpbHRlci5odHRwLmp3dF9hdXRobi52MmFs",
            "cGhhLkp3dFJlcXVpcmVtZW50Qgj6QgWSAQIIAiJzChVKd3RSZXF1aXJlbWVu",
            "dEFuZExpc3QSWgoMcmVxdWlyZW1lbnRzGAEgAygLMjouZW52b3kuY29uZmln",
            "LmZpbHRlci5odHRwLmp3dF9hdXRobi52MmFscGhhLkp3dFJlcXVpcmVtZW50",
            "Qgj6QgWSAQIIAiKYAQoPUmVxdWlyZW1lbnRSdWxlEjcKBW1hdGNoGAEgASgL",
            "Mh4uZW52b3kuYXBpLnYyLnJvdXRlLlJvdXRlTWF0Y2hCCPpCBYoBAhABEkwK",
            "CHJlcXVpcmVzGAIgASgLMjouZW52b3kuY29uZmlnLmZpbHRlci5odHRwLmp3",
            "dF9hdXRobi52MmFscGhhLkp3dFJlcXVpcmVtZW50IvIBCg9GaWx0ZXJTdGF0",
            "ZVJ1bGUSFQoEbmFtZRgBIAEoCUIH+kIEcgIgARJbCghyZXF1aXJlcxgDIAMo",
            "CzJJLmVudm95LmNvbmZpZy5maWx0ZXIuaHR0cC5qd3RfYXV0aG4udjJhbHBo",
            "YS5GaWx0ZXJTdGF0ZVJ1bGUuUmVxdWlyZXNFbnRyeRprCg1SZXF1aXJlc0Vu",
            "dHJ5EgsKA2tleRgBIAEoCRJJCgV2YWx1ZRgCIAEoCzI6LmVudm95LmNvbmZp",
            "Zy5maWx0ZXIuaHR0cC5qd3RfYXV0aG4udjJhbHBoYS5Kd3RSZXF1aXJlbWVu",
            "dDoCOAEiowMKEUp3dEF1dGhlbnRpY2F0aW9uEl8KCXByb3ZpZGVycxgBIAMo",
            "CzJMLmVudm95LmNvbmZpZy5maWx0ZXIuaHR0cC5qd3RfYXV0aG4udjJhbHBo",
            "YS5Kd3RBdXRoZW50aWNhdGlvbi5Qcm92aWRlcnNFbnRyeRJKCgVydWxlcxgC",
            "IAMoCzI7LmVudm95LmNvbmZpZy5maWx0ZXIuaHR0cC5qd3RfYXV0aG4udjJh",
            "bHBoYS5SZXF1aXJlbWVudFJ1bGUSVwoSZmlsdGVyX3N0YXRlX3J1bGVzGAMg",
            "ASgLMjsuZW52b3kuY29uZmlnLmZpbHRlci5odHRwLmp3dF9hdXRobi52MmFs",
            "cGhhLkZpbHRlclN0YXRlUnVsZRIdChVieXBhc3NfY29yc19wcmVmbGlnaHQY",
            "BCABKAgaaQoOUHJvdmlkZXJzRW50cnkSCwoDa2V5GAEgASgJEkYKBXZhbHVl",
            "GAIgASgLMjcuZW52b3kuY29uZmlnLmZpbHRlci5odHRwLmp3dF9hdXRobi52",
            "MmFscGhhLkp3dFByb3ZpZGVyOgI4AUKDAQo4aW8uZW52b3lwcm94eS5lbnZv",
            "eS5jb25maWcuZmlsdGVyLmh0dHAuand0X2F1dGhuLnYyYWxwaGFCC0NvbmZp",
            "Z1Byb3RvUAHymP6PBSwSKmVudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRw",
            "Lmp3dF9hdXRobi52M7qAyNEGAhABYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Api.V2.Core.BaseReflection.Descriptor, global::Envoy.Api.V2.Core.HttpUriReflection.Descriptor, global::Envoy.Api.V2.Route.RouteComponentsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Udpa.Annotations.MigrateReflection.Descriptor, global::Udpa.Annotations.StatusReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtProvider), global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtProvider.Parser, new[]{ "Issuer", "Audiences", "RemoteJwks", "LocalJwks", "Forward", "FromHeaders", "FromParams", "ForwardPayloadHeader", "PayloadInMetadata" }, new[]{ "JwksSourceSpecifier" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.RemoteJwks), global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.RemoteJwks.Parser, new[]{ "HttpUri", "CacheDuration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtHeader), global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtHeader.Parser, new[]{ "Name", "ValuePrefix" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.ProviderWithAudiences), global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.ProviderWithAudiences.Parser, new[]{ "ProviderName", "Audiences" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement), global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement.Parser, new[]{ "ProviderName", "ProviderAndAudiences", "RequiresAny", "RequiresAll", "AllowMissingOrFailed", "AllowMissing" }, new[]{ "RequiresType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirementOrList), global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirementOrList.Parser, new[]{ "Requirements" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirementAndList), global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirementAndList.Parser, new[]{ "Requirements" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.RequirementRule), global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.RequirementRule.Parser, new[]{ "Match", "Requires" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.FilterStateRule), global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.FilterStateRule.Parser, new[]{ "Name", "Requires" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtAuthentication), global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtAuthentication.Parser, new[]{ "Providers", "Rules", "FilterStateRules", "BypassCorsPreflight" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Please see following for JWT authentication flow:
  ///
  /// * `JSON Web Token (JWT) &lt;https://tools.ietf.org/html/rfc7519>`_
  /// * `The OAuth 2.0 Authorization Framework &lt;https://tools.ietf.org/html/rfc6749>`_
  /// * `OpenID Connect &lt;http://openid.net/connect>`_
  ///
  /// A JwtProvider message specifies how a JSON Web Token (JWT) can be verified. It specifies:
  ///
  /// * issuer: the principal that issues the JWT. It has to match the one from the token.
  /// * allowed audiences: the ones in the token have to be listed here.
  /// * how to fetch public key JWKS to verify the token signature.
  /// * how to extract JWT token in the request.
  /// * how to pass successfully verified token payload.
  ///
  /// Example:
  ///
  /// .. code-block:: yaml
  ///
  ///     issuer: https://example.com
  ///     audiences:
  ///     - bookstore_android.apps.googleusercontent.com
  ///     - bookstore_web.apps.googleusercontent.com
  ///     remote_jwks:
  ///       http_uri:
  ///         uri: https://example.com/.well-known/jwks.json
  ///         cluster: example_jwks_cluster
  ///       cache_duration:
  ///         seconds: 300
  ///
  /// [#next-free-field: 10]
  /// </summary>
  public sealed partial class JwtProvider : pb::IMessage<JwtProvider>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JwtProvider> _parser = new pb::MessageParser<JwtProvider>(() => new JwtProvider());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<JwtProvider> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.ConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JwtProvider() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JwtProvider(JwtProvider other) : this() {
      issuer_ = other.issuer_;
      audiences_ = other.audiences_.Clone();
      forward_ = other.forward_;
      fromHeaders_ = other.fromHeaders_.Clone();
      fromParams_ = other.fromParams_.Clone();
      forwardPayloadHeader_ = other.forwardPayloadHeader_;
      payloadInMetadata_ = other.payloadInMetadata_;
      switch (other.JwksSourceSpecifierCase) {
        case JwksSourceSpecifierOneofCase.RemoteJwks:
          RemoteJwks = other.RemoteJwks.Clone();
          break;
        case JwksSourceSpecifierOneofCase.LocalJwks:
          LocalJwks = other.LocalJwks.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JwtProvider Clone() {
      return new JwtProvider(this);
    }

    /// <summary>Field number for the "issuer" field.</summary>
    public const int IssuerFieldNumber = 1;
    private string issuer_ = "";
    /// <summary>
    /// Specify the `principal &lt;https://tools.ietf.org/html/rfc7519#section-4.1.1>`_ that issued
    /// the JWT, usually a URL or an email address.
    ///
    /// Example: https://securetoken.google.com
    /// Example: 1234567-compute@developer.gserviceaccount.com
    ///
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Issuer {
      get { return issuer_; }
      set {
        issuer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "audiences" field.</summary>
    public const int AudiencesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_audiences_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> audiences_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The list of JWT `audiences &lt;https://tools.ietf.org/html/rfc7519#section-4.1.3>`_ are
    /// allowed to access. A JWT containing any of these audiences will be accepted. If not specified,
    /// will not check audiences in the token.
    ///
    /// Example:
    ///
    /// .. code-block:: yaml
    ///
    ///     audiences:
    ///     - bookstore_android.apps.googleusercontent.com
    ///     - bookstore_web.apps.googleusercontent.com
    ///
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Audiences {
      get { return audiences_; }
    }

    /// <summary>Field number for the "remote_jwks" field.</summary>
    public const int RemoteJwksFieldNumber = 3;
    /// <summary>
    /// JWKS can be fetched from remote server via HTTP/HTTPS. This field specifies the remote HTTP
    /// URI and how the fetched JWKS should be cached.
    ///
    /// Example:
    ///
    /// .. code-block:: yaml
    ///
    ///    remote_jwks:
    ///      http_uri:
    ///        uri: https://www.googleapis.com/oauth2/v1/certs
    ///        cluster: jwt.www.googleapis.com|443
    ///      cache_duration:
    ///        seconds: 300
    ///
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.RemoteJwks RemoteJwks {
      get { return jwksSourceSpecifierCase_ == JwksSourceSpecifierOneofCase.RemoteJwks ? (global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.RemoteJwks) jwksSourceSpecifier_ : null; }
      set {
        jwksSourceSpecifier_ = value;
        jwksSourceSpecifierCase_ = value == null ? JwksSourceSpecifierOneofCase.None : JwksSourceSpecifierOneofCase.RemoteJwks;
      }
    }

    /// <summary>Field number for the "local_jwks" field.</summary>
    public const int LocalJwksFieldNumber = 4;
    /// <summary>
    /// JWKS is in local data source. It could be either in a local file or embedded in the
    /// inline_string.
    ///
    /// Example: local file
    ///
    /// .. code-block:: yaml
    ///
    ///    local_jwks:
    ///      filename: /etc/envoy/jwks/jwks1.txt
    ///
    /// Example: inline_string
    ///
    /// .. code-block:: yaml
    ///
    ///    local_jwks:
    ///      inline_string: ACADADADADA
    ///
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Api.V2.Core.DataSource LocalJwks {
      get { return jwksSourceSpecifierCase_ == JwksSourceSpecifierOneofCase.LocalJwks ? (global::Envoy.Api.V2.Core.DataSource) jwksSourceSpecifier_ : null; }
      set {
        jwksSourceSpecifier_ = value;
        jwksSourceSpecifierCase_ = value == null ? JwksSourceSpecifierOneofCase.None : JwksSourceSpecifierOneofCase.LocalJwks;
      }
    }

    /// <summary>Field number for the "forward" field.</summary>
    public const int ForwardFieldNumber = 5;
    private bool forward_;
    /// <summary>
    /// If false, the JWT is removed in the request after a success verification. If true, the JWT is
    /// not removed in the request. Default value is false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Forward {
      get { return forward_; }
      set {
        forward_ = value;
      }
    }

    /// <summary>Field number for the "from_headers" field.</summary>
    public const int FromHeadersFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtHeader> _repeated_fromHeaders_codec
        = pb::FieldCodec.ForMessage(50, global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtHeader.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtHeader> fromHeaders_ = new pbc::RepeatedField<global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtHeader>();
    /// <summary>
    /// Two fields below define where to extract the JWT from an HTTP request.
    ///
    /// If no explicit location is specified, the following default locations are tried in order:
    ///
    /// 1. The Authorization header using the `Bearer schema
    /// &lt;https://tools.ietf.org/html/rfc6750#section-2.1>`_. Example::
    ///
    ///    Authorization: Bearer &lt;token>.
    ///
    /// 2. `access_token &lt;https://tools.ietf.org/html/rfc6750#section-2.3>`_ query parameter.
    ///
    /// Multiple JWTs can be verified for a request. Each JWT has to be extracted from the locations
    /// its provider specified or from the default locations.
    ///
    /// Specify the HTTP headers to extract JWT token. For examples, following config:
    ///
    /// .. code-block:: yaml
    ///
    ///   from_headers:
    ///   - name: x-goog-iap-jwt-assertion
    ///
    /// can be used to extract token from header::
    ///
    ///   ``x-goog-iap-jwt-assertion: &lt;JWT>``.
    ///
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtHeader> FromHeaders {
      get { return fromHeaders_; }
    }

    /// <summary>Field number for the "from_params" field.</summary>
    public const int FromParamsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_fromParams_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> fromParams_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// JWT is sent in a query parameter. `jwt_params` represents the query parameter names.
    ///
    /// For example, if config is:
    ///
    /// .. code-block:: yaml
    ///
    ///   from_params:
    ///   - jwt_token
    ///
    /// The JWT format in query parameter is::
    ///
    ///    /path?jwt_token=&lt;JWT>
    ///
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> FromParams {
      get { return fromParams_; }
    }

    /// <summary>Field number for the "forward_payload_header" field.</summary>
    public const int ForwardPayloadHeaderFieldNumber = 8;
    private string forwardPayloadHeader_ = "";
    /// <summary>
    /// This field specifies the header name to forward a successfully verified JWT payload to the
    /// backend. The forwarded data is::
    ///
    ///    base64url_encoded(jwt_payload_in_JSON)
    ///
    /// If it is not specified, the payload will not be forwarded.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ForwardPayloadHeader {
      get { return forwardPayloadHeader_; }
      set {
        forwardPayloadHeader_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payload_in_metadata" field.</summary>
    public const int PayloadInMetadataFieldNumber = 9;
    private string payloadInMetadata_ = "";
    /// <summary>
    /// If non empty, successfully verified JWT payloads will be written to StreamInfo DynamicMetadata
    /// in the format as: *namespace* is the jwt_authn filter name as **envoy.filters.http.jwt_authn**
    /// The value is the *protobuf::Struct*. The value of this field will be the key for its *fields*
    /// and the value is the *protobuf::Struct* converted from JWT JSON payload.
    ///
    /// For example, if payload_in_metadata is *my_payload*:
    ///
    /// .. code-block:: yaml
    ///
    ///   envoy.filters.http.jwt_authn:
    ///     my_payload:
    ///       iss: https://example.com
    ///       sub: test@example.com
    ///       aud: https://example.com
    ///       exp: 1501281058
    ///
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PayloadInMetadata {
      get { return payloadInMetadata_; }
      set {
        payloadInMetadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object jwksSourceSpecifier_;
    /// <summary>Enum of possible cases for the "jwks_source_specifier" oneof.</summary>
    public enum JwksSourceSpecifierOneofCase {
      None = 0,
      RemoteJwks = 3,
      LocalJwks = 4,
    }
    private JwksSourceSpecifierOneofCase jwksSourceSpecifierCase_ = JwksSourceSpecifierOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JwksSourceSpecifierOneofCase JwksSourceSpecifierCase {
      get { return jwksSourceSpecifierCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearJwksSourceSpecifier() {
      jwksSourceSpecifierCase_ = JwksSourceSpecifierOneofCase.None;
      jwksSourceSpecifier_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as JwtProvider);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(JwtProvider other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Issuer != other.Issuer) return false;
      if(!audiences_.Equals(other.audiences_)) return false;
      if (!object.Equals(RemoteJwks, other.RemoteJwks)) return false;
      if (!object.Equals(LocalJwks, other.LocalJwks)) return false;
      if (Forward != other.Forward) return false;
      if(!fromHeaders_.Equals(other.fromHeaders_)) return false;
      if(!fromParams_.Equals(other.fromParams_)) return false;
      if (ForwardPayloadHeader != other.ForwardPayloadHeader) return false;
      if (PayloadInMetadata != other.PayloadInMetadata) return false;
      if (JwksSourceSpecifierCase != other.JwksSourceSpecifierCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Issuer.Length != 0) hash ^= Issuer.GetHashCode();
      hash ^= audiences_.GetHashCode();
      if (jwksSourceSpecifierCase_ == JwksSourceSpecifierOneofCase.RemoteJwks) hash ^= RemoteJwks.GetHashCode();
      if (jwksSourceSpecifierCase_ == JwksSourceSpecifierOneofCase.LocalJwks) hash ^= LocalJwks.GetHashCode();
      if (Forward != false) hash ^= Forward.GetHashCode();
      hash ^= fromHeaders_.GetHashCode();
      hash ^= fromParams_.GetHashCode();
      if (ForwardPayloadHeader.Length != 0) hash ^= ForwardPayloadHeader.GetHashCode();
      if (PayloadInMetadata.Length != 0) hash ^= PayloadInMetadata.GetHashCode();
      hash ^= (int) jwksSourceSpecifierCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Issuer.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Issuer);
      }
      audiences_.WriteTo(output, _repeated_audiences_codec);
      if (jwksSourceSpecifierCase_ == JwksSourceSpecifierOneofCase.RemoteJwks) {
        output.WriteRawTag(26);
        output.WriteMessage(RemoteJwks);
      }
      if (jwksSourceSpecifierCase_ == JwksSourceSpecifierOneofCase.LocalJwks) {
        output.WriteRawTag(34);
        output.WriteMessage(LocalJwks);
      }
      if (Forward != false) {
        output.WriteRawTag(40);
        output.WriteBool(Forward);
      }
      fromHeaders_.WriteTo(output, _repeated_fromHeaders_codec);
      fromParams_.WriteTo(output, _repeated_fromParams_codec);
      if (ForwardPayloadHeader.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ForwardPayloadHeader);
      }
      if (PayloadInMetadata.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(PayloadInMetadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Issuer.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Issuer);
      }
      audiences_.WriteTo(ref output, _repeated_audiences_codec);
      if (jwksSourceSpecifierCase_ == JwksSourceSpecifierOneofCase.RemoteJwks) {
        output.WriteRawTag(26);
        output.WriteMessage(RemoteJwks);
      }
      if (jwksSourceSpecifierCase_ == JwksSourceSpecifierOneofCase.LocalJwks) {
        output.WriteRawTag(34);
        output.WriteMessage(LocalJwks);
      }
      if (Forward != false) {
        output.WriteRawTag(40);
        output.WriteBool(Forward);
      }
      fromHeaders_.WriteTo(ref output, _repeated_fromHeaders_codec);
      fromParams_.WriteTo(ref output, _repeated_fromParams_codec);
      if (ForwardPayloadHeader.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ForwardPayloadHeader);
      }
      if (PayloadInMetadata.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(PayloadInMetadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Issuer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Issuer);
      }
      size += audiences_.CalculateSize(_repeated_audiences_codec);
      if (jwksSourceSpecifierCase_ == JwksSourceSpecifierOneofCase.RemoteJwks) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemoteJwks);
      }
      if (jwksSourceSpecifierCase_ == JwksSourceSpecifierOneofCase.LocalJwks) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalJwks);
      }
      if (Forward != false) {
        size += 1 + 1;
      }
      size += fromHeaders_.CalculateSize(_repeated_fromHeaders_codec);
      size += fromParams_.CalculateSize(_repeated_fromParams_codec);
      if (ForwardPayloadHeader.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ForwardPayloadHeader);
      }
      if (PayloadInMetadata.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PayloadInMetadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(JwtProvider other) {
      if (other == null) {
        return;
      }
      if (other.Issuer.Length != 0) {
        Issuer = other.Issuer;
      }
      audiences_.Add(other.audiences_);
      if (other.Forward != false) {
        Forward = other.Forward;
      }
      fromHeaders_.Add(other.fromHeaders_);
      fromParams_.Add(other.fromParams_);
      if (other.ForwardPayloadHeader.Length != 0) {
        ForwardPayloadHeader = other.ForwardPayloadHeader;
      }
      if (other.PayloadInMetadata.Length != 0) {
        PayloadInMetadata = other.PayloadInMetadata;
      }
      switch (other.JwksSourceSpecifierCase) {
        case JwksSourceSpecifierOneofCase.RemoteJwks:
          if (RemoteJwks == null) {
            RemoteJwks = new global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.RemoteJwks();
          }
          RemoteJwks.MergeFrom(other.RemoteJwks);
          break;
        case JwksSourceSpecifierOneofCase.LocalJwks:
          if (LocalJwks == null) {
            LocalJwks = new global::Envoy.Api.V2.Core.DataSource();
          }
          LocalJwks.MergeFrom(other.LocalJwks);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Issuer = input.ReadString();
            break;
          }
          case 18: {
            audiences_.AddEntriesFrom(input, _repeated_audiences_codec);
            break;
          }
          case 26: {
            global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.RemoteJwks subBuilder = new global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.RemoteJwks();
            if (jwksSourceSpecifierCase_ == JwksSourceSpecifierOneofCase.RemoteJwks) {
              subBuilder.MergeFrom(RemoteJwks);
            }
            input.ReadMessage(subBuilder);
            RemoteJwks = subBuilder;
            break;
          }
          case 34: {
            global::Envoy.Api.V2.Core.DataSource subBuilder = new global::Envoy.Api.V2.Core.DataSource();
            if (jwksSourceSpecifierCase_ == JwksSourceSpecifierOneofCase.LocalJwks) {
              subBuilder.MergeFrom(LocalJwks);
            }
            input.ReadMessage(subBuilder);
            LocalJwks = subBuilder;
            break;
          }
          case 40: {
            Forward = input.ReadBool();
            break;
          }
          case 50: {
            fromHeaders_.AddEntriesFrom(input, _repeated_fromHeaders_codec);
            break;
          }
          case 58: {
            fromParams_.AddEntriesFrom(input, _repeated_fromParams_codec);
            break;
          }
          case 66: {
            ForwardPayloadHeader = input.ReadString();
            break;
          }
          case 74: {
            PayloadInMetadata = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Issuer = input.ReadString();
            break;
          }
          case 18: {
            audiences_.AddEntriesFrom(ref input, _repeated_audiences_codec);
            break;
          }
          case 26: {
            global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.RemoteJwks subBuilder = new global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.RemoteJwks();
            if (jwksSourceSpecifierCase_ == JwksSourceSpecifierOneofCase.RemoteJwks) {
              subBuilder.MergeFrom(RemoteJwks);
            }
            input.ReadMessage(subBuilder);
            RemoteJwks = subBuilder;
            break;
          }
          case 34: {
            global::Envoy.Api.V2.Core.DataSource subBuilder = new global::Envoy.Api.V2.Core.DataSource();
            if (jwksSourceSpecifierCase_ == JwksSourceSpecifierOneofCase.LocalJwks) {
              subBuilder.MergeFrom(LocalJwks);
            }
            input.ReadMessage(subBuilder);
            LocalJwks = subBuilder;
            break;
          }
          case 40: {
            Forward = input.ReadBool();
            break;
          }
          case 50: {
            fromHeaders_.AddEntriesFrom(ref input, _repeated_fromHeaders_codec);
            break;
          }
          case 58: {
            fromParams_.AddEntriesFrom(ref input, _repeated_fromParams_codec);
            break;
          }
          case 66: {
            ForwardPayloadHeader = input.ReadString();
            break;
          }
          case 74: {
            PayloadInMetadata = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// This message specifies how to fetch JWKS from remote and how to cache it.
  /// </summary>
  public sealed partial class RemoteJwks : pb::IMessage<RemoteJwks>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RemoteJwks> _parser = new pb::MessageParser<RemoteJwks>(() => new RemoteJwks());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RemoteJwks> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.ConfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RemoteJwks() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RemoteJwks(RemoteJwks other) : this() {
      httpUri_ = other.httpUri_ != null ? other.httpUri_.Clone() : null;
      cacheDuration_ = other.cacheDuration_ != null ? other.cacheDuration_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RemoteJwks Clone() {
      return new RemoteJwks(this);
    }

    /// <summary>Field number for the "http_uri" field.</summary>
    public const int HttpUriFieldNumber = 1;
    private global::Envoy.Api.V2.Core.HttpUri httpUri_;
    /// <summary>
    /// The HTTP URI to fetch the JWKS. For example:
    ///
    /// .. code-block:: yaml
    ///
    ///    http_uri:
    ///      uri: https://www.googleapis.com/oauth2/v1/certs
    ///      cluster: jwt.www.googleapis.com|443
    ///
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Api.V2.Core.HttpUri HttpUri {
      get { return httpUri_; }
      set {
        httpUri_ = value;
      }
    }

    /// <summary>Field number for the "cache_duration" field.</summary>
    public const int CacheDurationFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Duration cacheDuration_;
    /// <summary>
    /// Duration after which the cached JWKS should be expired. If not specified, default cache
    /// duration is 5 minutes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration CacheDuration {
      get { return cacheDuration_; }
      set {
        cacheDuration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RemoteJwks);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RemoteJwks other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(HttpUri, other.HttpUri)) return false;
      if (!object.Equals(CacheDuration, other.CacheDuration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (httpUri_ != null) hash ^= HttpUri.GetHashCode();
      if (cacheDuration_ != null) hash ^= CacheDuration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (httpUri_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HttpUri);
      }
      if (cacheDuration_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CacheDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (httpUri_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HttpUri);
      }
      if (cacheDuration_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CacheDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (httpUri_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HttpUri);
      }
      if (cacheDuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CacheDuration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RemoteJwks other) {
      if (other == null) {
        return;
      }
      if (other.httpUri_ != null) {
        if (httpUri_ == null) {
          HttpUri = new global::Envoy.Api.V2.Core.HttpUri();
        }
        HttpUri.MergeFrom(other.HttpUri);
      }
      if (other.cacheDuration_ != null) {
        if (cacheDuration_ == null) {
          CacheDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        CacheDuration.MergeFrom(other.CacheDuration);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (httpUri_ == null) {
              HttpUri = new global::Envoy.Api.V2.Core.HttpUri();
            }
            input.ReadMessage(HttpUri);
            break;
          }
          case 18: {
            if (cacheDuration_ == null) {
              CacheDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(CacheDuration);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (httpUri_ == null) {
              HttpUri = new global::Envoy.Api.V2.Core.HttpUri();
            }
            input.ReadMessage(HttpUri);
            break;
          }
          case 18: {
            if (cacheDuration_ == null) {
              CacheDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(CacheDuration);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// This message specifies a header location to extract JWT token.
  /// </summary>
  public sealed partial class JwtHeader : pb::IMessage<JwtHeader>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JwtHeader> _parser = new pb::MessageParser<JwtHeader>(() => new JwtHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<JwtHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.ConfigReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JwtHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JwtHeader(JwtHeader other) : this() {
      name_ = other.name_;
      valuePrefix_ = other.valuePrefix_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JwtHeader Clone() {
      return new JwtHeader(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The HTTP header name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value_prefix" field.</summary>
    public const int ValuePrefixFieldNumber = 2;
    private string valuePrefix_ = "";
    /// <summary>
    /// The value prefix. The value format is "value_prefix&lt;token>"
    /// For example, for "Authorization: Bearer &lt;token>", value_prefix="Bearer " with a space at the
    /// end.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ValuePrefix {
      get { return valuePrefix_; }
      set {
        valuePrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as JwtHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(JwtHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ValuePrefix != other.ValuePrefix) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ValuePrefix.Length != 0) hash ^= ValuePrefix.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ValuePrefix.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ValuePrefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ValuePrefix.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ValuePrefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ValuePrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValuePrefix);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(JwtHeader other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ValuePrefix.Length != 0) {
        ValuePrefix = other.ValuePrefix;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ValuePrefix = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ValuePrefix = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Specify a required provider with audiences.
  /// </summary>
  public sealed partial class ProviderWithAudiences : pb::IMessage<ProviderWithAudiences>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProviderWithAudiences> _parser = new pb::MessageParser<ProviderWithAudiences>(() => new ProviderWithAudiences());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProviderWithAudiences> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.ConfigReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProviderWithAudiences() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProviderWithAudiences(ProviderWithAudiences other) : this() {
      providerName_ = other.providerName_;
      audiences_ = other.audiences_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProviderWithAudiences Clone() {
      return new ProviderWithAudiences(this);
    }

    /// <summary>Field number for the "provider_name" field.</summary>
    public const int ProviderNameFieldNumber = 1;
    private string providerName_ = "";
    /// <summary>
    /// Specify a required provider name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProviderName {
      get { return providerName_; }
      set {
        providerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "audiences" field.</summary>
    public const int AudiencesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_audiences_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> audiences_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// This field overrides the one specified in the JwtProvider.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Audiences {
      get { return audiences_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProviderWithAudiences);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProviderWithAudiences other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProviderName != other.ProviderName) return false;
      if(!audiences_.Equals(other.audiences_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ProviderName.Length != 0) hash ^= ProviderName.GetHashCode();
      hash ^= audiences_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProviderName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProviderName);
      }
      audiences_.WriteTo(output, _repeated_audiences_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProviderName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProviderName);
      }
      audiences_.WriteTo(ref output, _repeated_audiences_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ProviderName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProviderName);
      }
      size += audiences_.CalculateSize(_repeated_audiences_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProviderWithAudiences other) {
      if (other == null) {
        return;
      }
      if (other.ProviderName.Length != 0) {
        ProviderName = other.ProviderName;
      }
      audiences_.Add(other.audiences_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProviderName = input.ReadString();
            break;
          }
          case 18: {
            audiences_.AddEntriesFrom(input, _repeated_audiences_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProviderName = input.ReadString();
            break;
          }
          case 18: {
            audiences_.AddEntriesFrom(ref input, _repeated_audiences_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// This message specifies a Jwt requirement. An empty message means JWT verification is not
  /// required. Here are some config examples:
  ///
  /// .. code-block:: yaml
  ///
  ///  # Example 1: not required with an empty message
  ///
  ///  # Example 2: require A
  ///  provider_name: provider-A
  ///
  ///  # Example 3: require A or B
  ///  requires_any:
  ///    requirements:
  ///      - provider_name: provider-A
  ///      - provider_name: provider-B
  ///
  ///  # Example 4: require A and B
  ///  requires_all:
  ///    requirements:
  ///      - provider_name: provider-A
  ///      - provider_name: provider-B
  ///
  ///  # Example 5: require A and (B or C)
  ///  requires_all:
  ///    requirements:
  ///      - provider_name: provider-A
  ///      - requires_any:
  ///        requirements:
  ///          - provider_name: provider-B
  ///          - provider_name: provider-C
  ///
  ///  # Example 6: require A or (B and C)
  ///  requires_any:
  ///    requirements:
  ///      - provider_name: provider-A
  ///      - requires_all:
  ///        requirements:
  ///          - provider_name: provider-B
  ///          - provider_name: provider-C
  ///
  ///  # Example 7: A is optional (if token from A is provided, it must be valid, but also allows
  ///  missing token.)
  ///  requires_any:
  ///    requirements:
  ///    - provider_name: provider-A
  ///    - allow_missing: {}
  ///
  ///  # Example 8: A is optional and B is required.
  ///  requires_all:
  ///    requirements:
  ///    - requires_any:
  ///        requirements:
  ///        - provider_name: provider-A
  ///        - allow_missing: {}
  ///    - provider_name: provider-B
  ///
  /// [#next-free-field: 7]
  /// </summary>
  public sealed partial class JwtRequirement : pb::IMessage<JwtRequirement>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JwtRequirement> _parser = new pb::MessageParser<JwtRequirement>(() => new JwtRequirement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<JwtRequirement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.ConfigReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JwtRequirement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JwtRequirement(JwtRequirement other) : this() {
      switch (other.RequiresTypeCase) {
        case RequiresTypeOneofCase.ProviderName:
          ProviderName = other.ProviderName;
          break;
        case RequiresTypeOneofCase.ProviderAndAudiences:
          ProviderAndAudiences = other.ProviderAndAudiences.Clone();
          break;
        case RequiresTypeOneofCase.RequiresAny:
          RequiresAny = other.RequiresAny.Clone();
          break;
        case RequiresTypeOneofCase.RequiresAll:
          RequiresAll = other.RequiresAll.Clone();
          break;
        case RequiresTypeOneofCase.AllowMissingOrFailed:
          AllowMissingOrFailed = other.AllowMissingOrFailed.Clone();
          break;
        case RequiresTypeOneofCase.AllowMissing:
          AllowMissing = other.AllowMissing.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JwtRequirement Clone() {
      return new JwtRequirement(this);
    }

    /// <summary>Field number for the "provider_name" field.</summary>
    public const int ProviderNameFieldNumber = 1;
    /// <summary>
    /// Specify a required provider name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProviderName {
      get { return requiresTypeCase_ == RequiresTypeOneofCase.ProviderName ? (string) requiresType_ : ""; }
      set {
        requiresType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        requiresTypeCase_ = RequiresTypeOneofCase.ProviderName;
      }
    }

    /// <summary>Field number for the "provider_and_audiences" field.</summary>
    public const int ProviderAndAudiencesFieldNumber = 2;
    /// <summary>
    /// Specify a required provider with audiences.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.ProviderWithAudiences ProviderAndAudiences {
      get { return requiresTypeCase_ == RequiresTypeOneofCase.ProviderAndAudiences ? (global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.ProviderWithAudiences) requiresType_ : null; }
      set {
        requiresType_ = value;
        requiresTypeCase_ = value == null ? RequiresTypeOneofCase.None : RequiresTypeOneofCase.ProviderAndAudiences;
      }
    }

    /// <summary>Field number for the "requires_any" field.</summary>
    public const int RequiresAnyFieldNumber = 3;
    /// <summary>
    /// Specify list of JwtRequirement. Their results are OR-ed.
    /// If any one of them passes, the result is passed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirementOrList RequiresAny {
      get { return requiresTypeCase_ == RequiresTypeOneofCase.RequiresAny ? (global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirementOrList) requiresType_ : null; }
      set {
        requiresType_ = value;
        requiresTypeCase_ = value == null ? RequiresTypeOneofCase.None : RequiresTypeOneofCase.RequiresAny;
      }
    }

    /// <summary>Field number for the "requires_all" field.</summary>
    public const int RequiresAllFieldNumber = 4;
    /// <summary>
    /// Specify list of JwtRequirement. Their results are AND-ed.
    /// All of them must pass, if one of them fails or missing, it fails.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirementAndList RequiresAll {
      get { return requiresTypeCase_ == RequiresTypeOneofCase.RequiresAll ? (global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirementAndList) requiresType_ : null; }
      set {
        requiresType_ = value;
        requiresTypeCase_ = value == null ? RequiresTypeOneofCase.None : RequiresTypeOneofCase.RequiresAll;
      }
    }

    /// <summary>Field number for the "allow_missing_or_failed" field.</summary>
    public const int AllowMissingOrFailedFieldNumber = 5;
    /// <summary>
    /// The requirement is always satisfied even if JWT is missing or the JWT
    /// verification fails. A typical usage is: this filter is used to only verify
    /// JWTs and pass the verified JWT payloads to another filter, the other filter
    /// will make decision. In this mode, all JWT tokens will be verified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Empty AllowMissingOrFailed {
      get { return requiresTypeCase_ == RequiresTypeOneofCase.AllowMissingOrFailed ? (global::Google.Protobuf.WellKnownTypes.Empty) requiresType_ : null; }
      set {
        requiresType_ = value;
        requiresTypeCase_ = value == null ? RequiresTypeOneofCase.None : RequiresTypeOneofCase.AllowMissingOrFailed;
      }
    }

    /// <summary>Field number for the "allow_missing" field.</summary>
    public const int AllowMissingFieldNumber = 6;
    /// <summary>
    /// The requirement is satisfied if JWT is missing, but failed if JWT is
    /// presented but invalid. Similar to allow_missing_or_failed, this is used
    /// to only verify JWTs and pass the verified payload to another filter. The
    /// different is this mode will reject requests with invalid tokens.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Empty AllowMissing {
      get { return requiresTypeCase_ == RequiresTypeOneofCase.AllowMissing ? (global::Google.Protobuf.WellKnownTypes.Empty) requiresType_ : null; }
      set {
        requiresType_ = value;
        requiresTypeCase_ = value == null ? RequiresTypeOneofCase.None : RequiresTypeOneofCase.AllowMissing;
      }
    }

    private object requiresType_;
    /// <summary>Enum of possible cases for the "requires_type" oneof.</summary>
    public enum RequiresTypeOneofCase {
      None = 0,
      ProviderName = 1,
      ProviderAndAudiences = 2,
      RequiresAny = 3,
      RequiresAll = 4,
      AllowMissingOrFailed = 5,
      AllowMissing = 6,
    }
    private RequiresTypeOneofCase requiresTypeCase_ = RequiresTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequiresTypeOneofCase RequiresTypeCase {
      get { return requiresTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequiresType() {
      requiresTypeCase_ = RequiresTypeOneofCase.None;
      requiresType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as JwtRequirement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(JwtRequirement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProviderName != other.ProviderName) return false;
      if (!object.Equals(ProviderAndAudiences, other.ProviderAndAudiences)) return false;
      if (!object.Equals(RequiresAny, other.RequiresAny)) return false;
      if (!object.Equals(RequiresAll, other.RequiresAll)) return false;
      if (!object.Equals(AllowMissingOrFailed, other.AllowMissingOrFailed)) return false;
      if (!object.Equals(AllowMissing, other.AllowMissing)) return false;
      if (RequiresTypeCase != other.RequiresTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (requiresTypeCase_ == RequiresTypeOneofCase.ProviderName) hash ^= ProviderName.GetHashCode();
      if (requiresTypeCase_ == RequiresTypeOneofCase.ProviderAndAudiences) hash ^= ProviderAndAudiences.GetHashCode();
      if (requiresTypeCase_ == RequiresTypeOneofCase.RequiresAny) hash ^= RequiresAny.GetHashCode();
      if (requiresTypeCase_ == RequiresTypeOneofCase.RequiresAll) hash ^= RequiresAll.GetHashCode();
      if (requiresTypeCase_ == RequiresTypeOneofCase.AllowMissingOrFailed) hash ^= AllowMissingOrFailed.GetHashCode();
      if (requiresTypeCase_ == RequiresTypeOneofCase.AllowMissing) hash ^= AllowMissing.GetHashCode();
      hash ^= (int) requiresTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (requiresTypeCase_ == RequiresTypeOneofCase.ProviderName) {
        output.WriteRawTag(10);
        output.WriteString(ProviderName);
      }
      if (requiresTypeCase_ == RequiresTypeOneofCase.ProviderAndAudiences) {
        output.WriteRawTag(18);
        output.WriteMessage(ProviderAndAudiences);
      }
      if (requiresTypeCase_ == RequiresTypeOneofCase.RequiresAny) {
        output.WriteRawTag(26);
        output.WriteMessage(RequiresAny);
      }
      if (requiresTypeCase_ == RequiresTypeOneofCase.RequiresAll) {
        output.WriteRawTag(34);
        output.WriteMessage(RequiresAll);
      }
      if (requiresTypeCase_ == RequiresTypeOneofCase.AllowMissingOrFailed) {
        output.WriteRawTag(42);
        output.WriteMessage(AllowMissingOrFailed);
      }
      if (requiresTypeCase_ == RequiresTypeOneofCase.AllowMissing) {
        output.WriteRawTag(50);
        output.WriteMessage(AllowMissing);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (requiresTypeCase_ == RequiresTypeOneofCase.ProviderName) {
        output.WriteRawTag(10);
        output.WriteString(ProviderName);
      }
      if (requiresTypeCase_ == RequiresTypeOneofCase.ProviderAndAudiences) {
        output.WriteRawTag(18);
        output.WriteMessage(ProviderAndAudiences);
      }
      if (requiresTypeCase_ == RequiresTypeOneofCase.RequiresAny) {
        output.WriteRawTag(26);
        output.WriteMessage(RequiresAny);
      }
      if (requiresTypeCase_ == RequiresTypeOneofCase.RequiresAll) {
        output.WriteRawTag(34);
        output.WriteMessage(RequiresAll);
      }
      if (requiresTypeCase_ == RequiresTypeOneofCase.AllowMissingOrFailed) {
        output.WriteRawTag(42);
        output.WriteMessage(AllowMissingOrFailed);
      }
      if (requiresTypeCase_ == RequiresTypeOneofCase.AllowMissing) {
        output.WriteRawTag(50);
        output.WriteMessage(AllowMissing);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (requiresTypeCase_ == RequiresTypeOneofCase.ProviderName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProviderName);
      }
      if (requiresTypeCase_ == RequiresTypeOneofCase.ProviderAndAudiences) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProviderAndAudiences);
      }
      if (requiresTypeCase_ == RequiresTypeOneofCase.RequiresAny) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequiresAny);
      }
      if (requiresTypeCase_ == RequiresTypeOneofCase.RequiresAll) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequiresAll);
      }
      if (requiresTypeCase_ == RequiresTypeOneofCase.AllowMissingOrFailed) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AllowMissingOrFailed);
      }
      if (requiresTypeCase_ == RequiresTypeOneofCase.AllowMissing) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AllowMissing);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(JwtRequirement other) {
      if (other == null) {
        return;
      }
      switch (other.RequiresTypeCase) {
        case RequiresTypeOneofCase.ProviderName:
          ProviderName = other.ProviderName;
          break;
        case RequiresTypeOneofCase.ProviderAndAudiences:
          if (ProviderAndAudiences == null) {
            ProviderAndAudiences = new global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.ProviderWithAudiences();
          }
          ProviderAndAudiences.MergeFrom(other.ProviderAndAudiences);
          break;
        case RequiresTypeOneofCase.RequiresAny:
          if (RequiresAny == null) {
            RequiresAny = new global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirementOrList();
          }
          RequiresAny.MergeFrom(other.RequiresAny);
          break;
        case RequiresTypeOneofCase.RequiresAll:
          if (RequiresAll == null) {
            RequiresAll = new global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirementAndList();
          }
          RequiresAll.MergeFrom(other.RequiresAll);
          break;
        case RequiresTypeOneofCase.AllowMissingOrFailed:
          if (AllowMissingOrFailed == null) {
            AllowMissingOrFailed = new global::Google.Protobuf.WellKnownTypes.Empty();
          }
          AllowMissingOrFailed.MergeFrom(other.AllowMissingOrFailed);
          break;
        case RequiresTypeOneofCase.AllowMissing:
          if (AllowMissing == null) {
            AllowMissing = new global::Google.Protobuf.WellKnownTypes.Empty();
          }
          AllowMissing.MergeFrom(other.AllowMissing);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProviderName = input.ReadString();
            break;
          }
          case 18: {
            global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.ProviderWithAudiences subBuilder = new global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.ProviderWithAudiences();
            if (requiresTypeCase_ == RequiresTypeOneofCase.ProviderAndAudiences) {
              subBuilder.MergeFrom(ProviderAndAudiences);
            }
            input.ReadMessage(subBuilder);
            ProviderAndAudiences = subBuilder;
            break;
          }
          case 26: {
            global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirementOrList subBuilder = new global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirementOrList();
            if (requiresTypeCase_ == RequiresTypeOneofCase.RequiresAny) {
              subBuilder.MergeFrom(RequiresAny);
            }
            input.ReadMessage(subBuilder);
            RequiresAny = subBuilder;
            break;
          }
          case 34: {
            global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirementAndList subBuilder = new global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirementAndList();
            if (requiresTypeCase_ == RequiresTypeOneofCase.RequiresAll) {
              subBuilder.MergeFrom(RequiresAll);
            }
            input.ReadMessage(subBuilder);
            RequiresAll = subBuilder;
            break;
          }
          case 42: {
            global::Google.Protobuf.WellKnownTypes.Empty subBuilder = new global::Google.Protobuf.WellKnownTypes.Empty();
            if (requiresTypeCase_ == RequiresTypeOneofCase.AllowMissingOrFailed) {
              subBuilder.MergeFrom(AllowMissingOrFailed);
            }
            input.ReadMessage(subBuilder);
            AllowMissingOrFailed = subBuilder;
            break;
          }
          case 50: {
            global::Google.Protobuf.WellKnownTypes.Empty subBuilder = new global::Google.Protobuf.WellKnownTypes.Empty();
            if (requiresTypeCase_ == RequiresTypeOneofCase.AllowMissing) {
              subBuilder.MergeFrom(AllowMissing);
            }
            input.ReadMessage(subBuilder);
            AllowMissing = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProviderName = input.ReadString();
            break;
          }
          case 18: {
            global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.ProviderWithAudiences subBuilder = new global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.ProviderWithAudiences();
            if (requiresTypeCase_ == RequiresTypeOneofCase.ProviderAndAudiences) {
              subBuilder.MergeFrom(ProviderAndAudiences);
            }
            input.ReadMessage(subBuilder);
            ProviderAndAudiences = subBuilder;
            break;
          }
          case 26: {
            global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirementOrList subBuilder = new global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirementOrList();
            if (requiresTypeCase_ == RequiresTypeOneofCase.RequiresAny) {
              subBuilder.MergeFrom(RequiresAny);
            }
            input.ReadMessage(subBuilder);
            RequiresAny = subBuilder;
            break;
          }
          case 34: {
            global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirementAndList subBuilder = new global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirementAndList();
            if (requiresTypeCase_ == RequiresTypeOneofCase.RequiresAll) {
              subBuilder.MergeFrom(RequiresAll);
            }
            input.ReadMessage(subBuilder);
            RequiresAll = subBuilder;
            break;
          }
          case 42: {
            global::Google.Protobuf.WellKnownTypes.Empty subBuilder = new global::Google.Protobuf.WellKnownTypes.Empty();
            if (requiresTypeCase_ == RequiresTypeOneofCase.AllowMissingOrFailed) {
              subBuilder.MergeFrom(AllowMissingOrFailed);
            }
            input.ReadMessage(subBuilder);
            AllowMissingOrFailed = subBuilder;
            break;
          }
          case 50: {
            global::Google.Protobuf.WellKnownTypes.Empty subBuilder = new global::Google.Protobuf.WellKnownTypes.Empty();
            if (requiresTypeCase_ == RequiresTypeOneofCase.AllowMissing) {
              subBuilder.MergeFrom(AllowMissing);
            }
            input.ReadMessage(subBuilder);
            AllowMissing = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// This message specifies a list of RequiredProvider.
  /// Their results are OR-ed; if any one of them passes, the result is passed
  /// </summary>
  public sealed partial class JwtRequirementOrList : pb::IMessage<JwtRequirementOrList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JwtRequirementOrList> _parser = new pb::MessageParser<JwtRequirementOrList>(() => new JwtRequirementOrList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<JwtRequirementOrList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.ConfigReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JwtRequirementOrList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JwtRequirementOrList(JwtRequirementOrList other) : this() {
      requirements_ = other.requirements_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JwtRequirementOrList Clone() {
      return new JwtRequirementOrList(this);
    }

    /// <summary>Field number for the "requirements" field.</summary>
    public const int RequirementsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement> _repeated_requirements_codec
        = pb::FieldCodec.ForMessage(10, global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement> requirements_ = new pbc::RepeatedField<global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement>();
    /// <summary>
    /// Specify a list of JwtRequirement.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement> Requirements {
      get { return requirements_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as JwtRequirementOrList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(JwtRequirementOrList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!requirements_.Equals(other.requirements_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= requirements_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      requirements_.WriteTo(output, _repeated_requirements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      requirements_.WriteTo(ref output, _repeated_requirements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += requirements_.CalculateSize(_repeated_requirements_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(JwtRequirementOrList other) {
      if (other == null) {
        return;
      }
      requirements_.Add(other.requirements_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            requirements_.AddEntriesFrom(input, _repeated_requirements_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            requirements_.AddEntriesFrom(ref input, _repeated_requirements_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// This message specifies a list of RequiredProvider.
  /// Their results are AND-ed; all of them must pass, if one of them fails or missing, it fails.
  /// </summary>
  public sealed partial class JwtRequirementAndList : pb::IMessage<JwtRequirementAndList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JwtRequirementAndList> _parser = new pb::MessageParser<JwtRequirementAndList>(() => new JwtRequirementAndList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<JwtRequirementAndList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.ConfigReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JwtRequirementAndList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JwtRequirementAndList(JwtRequirementAndList other) : this() {
      requirements_ = other.requirements_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JwtRequirementAndList Clone() {
      return new JwtRequirementAndList(this);
    }

    /// <summary>Field number for the "requirements" field.</summary>
    public const int RequirementsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement> _repeated_requirements_codec
        = pb::FieldCodec.ForMessage(10, global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement> requirements_ = new pbc::RepeatedField<global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement>();
    /// <summary>
    /// Specify a list of JwtRequirement.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement> Requirements {
      get { return requirements_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as JwtRequirementAndList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(JwtRequirementAndList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!requirements_.Equals(other.requirements_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= requirements_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      requirements_.WriteTo(output, _repeated_requirements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      requirements_.WriteTo(ref output, _repeated_requirements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += requirements_.CalculateSize(_repeated_requirements_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(JwtRequirementAndList other) {
      if (other == null) {
        return;
      }
      requirements_.Add(other.requirements_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            requirements_.AddEntriesFrom(input, _repeated_requirements_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            requirements_.AddEntriesFrom(ref input, _repeated_requirements_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// This message specifies a Jwt requirement for a specific Route condition.
  /// Example 1:
  ///
  /// .. code-block:: yaml
  ///
  ///    - match:
  ///        prefix: /healthz
  ///
  /// In above example, "requires" field is empty for /healthz prefix match,
  /// it means that requests matching the path prefix don't require JWT authentication.
  ///
  /// Example 2:
  ///
  /// .. code-block:: yaml
  ///
  ///    - match:
  ///        prefix: /
  ///      requires: { provider_name: provider-A }
  ///
  /// In above example, all requests matched the path prefix require jwt authentication
  /// from "provider-A".
  /// </summary>
  public sealed partial class RequirementRule : pb::IMessage<RequirementRule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RequirementRule> _parser = new pb::MessageParser<RequirementRule>(() => new RequirementRule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RequirementRule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.ConfigReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequirementRule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequirementRule(RequirementRule other) : this() {
      match_ = other.match_ != null ? other.match_.Clone() : null;
      requires_ = other.requires_ != null ? other.requires_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequirementRule Clone() {
      return new RequirementRule(this);
    }

    /// <summary>Field number for the "match" field.</summary>
    public const int MatchFieldNumber = 1;
    private global::Envoy.Api.V2.Route.RouteMatch match_;
    /// <summary>
    /// The route matching parameter. Only when the match is satisfied, the "requires" field will
    /// apply.
    ///
    /// For example: following match will match all requests.
    ///
    /// .. code-block:: yaml
    ///
    ///    match:
    ///      prefix: /
    ///
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Api.V2.Route.RouteMatch Match {
      get { return match_; }
      set {
        match_ = value;
      }
    }

    /// <summary>Field number for the "requires" field.</summary>
    public const int RequiresFieldNumber = 2;
    private global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement requires_;
    /// <summary>
    /// Specify a Jwt Requirement. Please detail comment in message JwtRequirement.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement Requires {
      get { return requires_; }
      set {
        requires_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RequirementRule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RequirementRule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Match, other.Match)) return false;
      if (!object.Equals(Requires, other.Requires)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (match_ != null) hash ^= Match.GetHashCode();
      if (requires_ != null) hash ^= Requires.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (match_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Match);
      }
      if (requires_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Requires);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (match_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Match);
      }
      if (requires_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Requires);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (match_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Match);
      }
      if (requires_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Requires);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RequirementRule other) {
      if (other == null) {
        return;
      }
      if (other.match_ != null) {
        if (match_ == null) {
          Match = new global::Envoy.Api.V2.Route.RouteMatch();
        }
        Match.MergeFrom(other.Match);
      }
      if (other.requires_ != null) {
        if (requires_ == null) {
          Requires = new global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement();
        }
        Requires.MergeFrom(other.Requires);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (match_ == null) {
              Match = new global::Envoy.Api.V2.Route.RouteMatch();
            }
            input.ReadMessage(Match);
            break;
          }
          case 18: {
            if (requires_ == null) {
              Requires = new global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement();
            }
            input.ReadMessage(Requires);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (match_ == null) {
              Match = new global::Envoy.Api.V2.Route.RouteMatch();
            }
            input.ReadMessage(Match);
            break;
          }
          case 18: {
            if (requires_ == null) {
              Requires = new global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement();
            }
            input.ReadMessage(Requires);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// This message specifies Jwt requirements based on stream_info.filterState.
  /// This FilterState should use `Router::StringAccessor` object to set a string value.
  /// Other HTTP filters can use it to specify Jwt requirements dynamically.
  ///
  /// Example:
  ///
  /// .. code-block:: yaml
  ///
  ///    name: jwt_selector
  ///    requires:
  ///      issuer_1:
  ///        provider_name: issuer1
  ///      issuer_2:
  ///        provider_name: issuer2
  ///
  /// If a filter set "jwt_selector" with "issuer_1" to FilterState for a request,
  /// jwt_authn filter will use JwtRequirement{"provider_name": "issuer1"} to verify.
  /// </summary>
  public sealed partial class FilterStateRule : pb::IMessage<FilterStateRule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FilterStateRule> _parser = new pb::MessageParser<FilterStateRule>(() => new FilterStateRule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FilterStateRule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.ConfigReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FilterStateRule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FilterStateRule(FilterStateRule other) : this() {
      name_ = other.name_;
      requires_ = other.requires_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FilterStateRule Clone() {
      return new FilterStateRule(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The filter state name to retrieve the `Router::StringAccessor` object.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "requires" field.</summary>
    public const int RequiresFieldNumber = 3;
    private static readonly pbc::MapField<string, global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement>.Codec _map_requires_codec
        = new pbc::MapField<string, global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement.Parser), 26);
    private readonly pbc::MapField<string, global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement> requires_ = new pbc::MapField<string, global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement>();
    /// <summary>
    /// A map of string keys to requirements. The string key is the string value
    /// in the FilterState with the name specified in the *name* field above.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtRequirement> Requires {
      get { return requires_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FilterStateRule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FilterStateRule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!Requires.Equals(other.Requires)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= Requires.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      requires_.WriteTo(output, _map_requires_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      requires_.WriteTo(ref output, _map_requires_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += requires_.CalculateSize(_map_requires_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FilterStateRule other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      requires_.Add(other.requires_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            requires_.AddEntriesFrom(input, _map_requires_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            requires_.AddEntriesFrom(ref input, _map_requires_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// This is the Envoy HTTP filter config for JWT authentication.
  ///
  /// For example:
  ///
  /// .. code-block:: yaml
  ///
  ///   providers:
  ///      provider1:
  ///        issuer: issuer1
  ///        audiences:
  ///        - audience1
  ///        - audience2
  ///        remote_jwks:
  ///          http_uri:
  ///            uri: https://example.com/.well-known/jwks.json
  ///            cluster: example_jwks_cluster
  ///      provider2:
  ///        issuer: issuer2
  ///        local_jwks:
  ///          inline_string: jwks_string
  ///
  ///   rules:
  ///      # Not jwt verification is required for /health path
  ///      - match:
  ///          prefix: /health
  ///
  ///      # Jwt verification for provider1 is required for path prefixed with "prefix"
  ///      - match:
  ///          prefix: /prefix
  ///        requires:
  ///          provider_name: provider1
  ///
  ///      # Jwt verification for either provider1 or provider2 is required for all other requests.
  ///      - match:
  ///          prefix: /
  ///        requires:
  ///          requires_any:
  ///            requirements:
  ///              - provider_name: provider1
  ///              - provider_name: provider2
  ///
  /// </summary>
  public sealed partial class JwtAuthentication : pb::IMessage<JwtAuthentication>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JwtAuthentication> _parser = new pb::MessageParser<JwtAuthentication>(() => new JwtAuthentication());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<JwtAuthentication> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.ConfigReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JwtAuthentication() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JwtAuthentication(JwtAuthentication other) : this() {
      providers_ = other.providers_.Clone();
      rules_ = other.rules_.Clone();
      filterStateRules_ = other.filterStateRules_ != null ? other.filterStateRules_.Clone() : null;
      bypassCorsPreflight_ = other.bypassCorsPreflight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JwtAuthentication Clone() {
      return new JwtAuthentication(this);
    }

    /// <summary>Field number for the "providers" field.</summary>
    public const int ProvidersFieldNumber = 1;
    private static readonly pbc::MapField<string, global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtProvider>.Codec _map_providers_codec
        = new pbc::MapField<string, global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtProvider>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtProvider.Parser), 10);
    private readonly pbc::MapField<string, global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtProvider> providers_ = new pbc::MapField<string, global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtProvider>();
    /// <summary>
    /// Map of provider names to JwtProviders.
    ///
    /// .. code-block:: yaml
    ///
    ///   providers:
    ///     provider1:
    ///        issuer: issuer1
    ///        audiences:
    ///        - audience1
    ///        - audience2
    ///        remote_jwks:
    ///          http_uri:
    ///            uri: https://example.com/.well-known/jwks.json
    ///            cluster: example_jwks_cluster
    ///      provider2:
    ///        issuer: provider2
    ///        local_jwks:
    ///          inline_string: jwks_string
    ///
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.JwtProvider> Providers {
      get { return providers_; }
    }

    /// <summary>Field number for the "rules" field.</summary>
    public const int RulesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.RequirementRule> _repeated_rules_codec
        = pb::FieldCodec.ForMessage(18, global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.RequirementRule.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.RequirementRule> rules_ = new pbc::RepeatedField<global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.RequirementRule>();
    /// <summary>
    /// Specifies requirements based on the route matches. The first matched requirement will be
    /// applied. If there are overlapped match conditions, please put the most specific match first.
    ///
    /// Examples
    ///
    /// .. code-block:: yaml
    ///
    ///   rules:
    ///     - match:
    ///         prefix: /healthz
    ///     - match:
    ///         prefix: /baz
    ///       requires:
    ///         provider_name: provider1
    ///     - match:
    ///         prefix: /foo
    ///       requires:
    ///         requires_any:
    ///           requirements:
    ///             - provider_name: provider1
    ///             - provider_name: provider2
    ///     - match:
    ///         prefix: /bar
    ///       requires:
    ///         requires_all:
    ///           requirements:
    ///             - provider_name: provider1
    ///             - provider_name: provider2
    ///
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.RequirementRule> Rules {
      get { return rules_; }
    }

    /// <summary>Field number for the "filter_state_rules" field.</summary>
    public const int FilterStateRulesFieldNumber = 3;
    private global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.FilterStateRule filterStateRules_;
    /// <summary>
    /// This message specifies Jwt requirements based on stream_info.filterState.
    /// Other HTTP filters can use it to specify Jwt requirements dynamically.
    /// The *rules* field above is checked first, if it could not find any matches,
    /// check this one.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.FilterStateRule FilterStateRules {
      get { return filterStateRules_; }
      set {
        filterStateRules_ = value;
      }
    }

    /// <summary>Field number for the "bypass_cors_preflight" field.</summary>
    public const int BypassCorsPreflightFieldNumber = 4;
    private bool bypassCorsPreflight_;
    /// <summary>
    /// When set to true, bypass the `CORS preflight request
    /// &lt;http://www.w3.org/TR/cors/#cross-origin-request-with-preflight>`_ regardless of JWT
    /// requirements specified in the rules.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BypassCorsPreflight {
      get { return bypassCorsPreflight_; }
      set {
        bypassCorsPreflight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as JwtAuthentication);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(JwtAuthentication other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Providers.Equals(other.Providers)) return false;
      if(!rules_.Equals(other.rules_)) return false;
      if (!object.Equals(FilterStateRules, other.FilterStateRules)) return false;
      if (BypassCorsPreflight != other.BypassCorsPreflight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Providers.GetHashCode();
      hash ^= rules_.GetHashCode();
      if (filterStateRules_ != null) hash ^= FilterStateRules.GetHashCode();
      if (BypassCorsPreflight != false) hash ^= BypassCorsPreflight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      providers_.WriteTo(output, _map_providers_codec);
      rules_.WriteTo(output, _repeated_rules_codec);
      if (filterStateRules_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(FilterStateRules);
      }
      if (BypassCorsPreflight != false) {
        output.WriteRawTag(32);
        output.WriteBool(BypassCorsPreflight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      providers_.WriteTo(ref output, _map_providers_codec);
      rules_.WriteTo(ref output, _repeated_rules_codec);
      if (filterStateRules_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(FilterStateRules);
      }
      if (BypassCorsPreflight != false) {
        output.WriteRawTag(32);
        output.WriteBool(BypassCorsPreflight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += providers_.CalculateSize(_map_providers_codec);
      size += rules_.CalculateSize(_repeated_rules_codec);
      if (filterStateRules_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FilterStateRules);
      }
      if (BypassCorsPreflight != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(JwtAuthentication other) {
      if (other == null) {
        return;
      }
      providers_.Add(other.providers_);
      rules_.Add(other.rules_);
      if (other.filterStateRules_ != null) {
        if (filterStateRules_ == null) {
          FilterStateRules = new global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.FilterStateRule();
        }
        FilterStateRules.MergeFrom(other.FilterStateRules);
      }
      if (other.BypassCorsPreflight != false) {
        BypassCorsPreflight = other.BypassCorsPreflight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            providers_.AddEntriesFrom(input, _map_providers_codec);
            break;
          }
          case 18: {
            rules_.AddEntriesFrom(input, _repeated_rules_codec);
            break;
          }
          case 26: {
            if (filterStateRules_ == null) {
              FilterStateRules = new global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.FilterStateRule();
            }
            input.ReadMessage(FilterStateRules);
            break;
          }
          case 32: {
            BypassCorsPreflight = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            providers_.AddEntriesFrom(ref input, _map_providers_codec);
            break;
          }
          case 18: {
            rules_.AddEntriesFrom(ref input, _repeated_rules_codec);
            break;
          }
          case 26: {
            if (filterStateRules_ == null) {
              FilterStateRules = new global::Envoy.Config.Filter.Http.JwtAuthn.V2Alpha.FilterStateRule();
            }
            input.ReadMessage(FilterStateRules);
            break;
          }
          case 32: {
            BypassCorsPreflight = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
