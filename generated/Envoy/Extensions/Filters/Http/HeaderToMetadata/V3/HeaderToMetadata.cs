// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/extensions/filters/http/header_to_metadata/v3/header_to_metadata.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Extensions.Filters.Http.HeaderToMetadata.V3 {

  /// <summary>Holder for reflection information generated from envoy/extensions/filters/http/header_to_metadata/v3/header_to_metadata.proto</summary>
  public static partial class HeaderToMetadataReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/extensions/filters/http/header_to_metadata/v3/header_to_metadata.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HeaderToMetadataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkxlbnZveS9leHRlbnNpb25zL2ZpbHRlcnMvaHR0cC9oZWFkZXJfdG9fbWV0",
            "YWRhdGEvdjMvaGVhZGVyX3RvX21ldGFkYXRhLnByb3RvEjNlbnZveS5leHRl",
            "bnNpb25zLmZpbHRlcnMuaHR0cC5oZWFkZXJfdG9fbWV0YWRhdGEudjMaIWVu",
            "dm95L3R5cGUvbWF0Y2hlci92My9yZWdleC5wcm90bxoedWRwYS9hbm5vdGF0",
            "aW9ucy9taWdyYXRlLnByb3RvGh11ZHBhL2Fubm90YXRpb25zL3N0YXR1cy5w",
            "cm90bxohdWRwYS9hbm5vdGF0aW9ucy92ZXJzaW9uaW5nLnByb3RvGhd2YWxp",
            "ZGF0ZS92YWxpZGF0ZS5wcm90byLnCQoGQ29uZmlnElcKDXJlcXVlc3RfcnVs",
            "ZXMYASADKAsyQC5lbnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5oZWFk",
            "ZXJfdG9fbWV0YWRhdGEudjMuQ29uZmlnLlJ1bGUSWAoOcmVzcG9uc2VfcnVs",
            "ZXMYAiADKAsyQC5lbnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5oZWFk",
            "ZXJfdG9fbWV0YWRhdGEudjMuQ29uZmlnLlJ1bGUaxwMKDEtleVZhbHVlUGFp",
            "chIaChJtZXRhZGF0YV9uYW1lc3BhY2UYASABKAkSFAoDa2V5GAIgASgJQgf6",
            "QgRyAhABEiEKBXZhbHVlGAMgASgJQhLymP6PBQwSCnZhbHVlX3R5cGUSXwoT",
            "cmVnZXhfdmFsdWVfcmV3cml0ZRgGIAEoCzIuLmVudm95LnR5cGUubWF0Y2hl",
            "ci52My5SZWdleE1hdGNoQW5kU3Vic3RpdHV0ZUIS8pj+jwUMEgp2YWx1ZV90",
            "eXBlEl0KBHR5cGUYBCABKA4yRS5lbnZveS5leHRlbnNpb25zLmZpbHRlcnMu",
            "aHR0cC5oZWFkZXJfdG9fbWV0YWRhdGEudjMuQ29uZmlnLlZhbHVlVHlwZUII",
            "+kIFggECEAESVwoGZW5jb2RlGAUgASgOMkcuZW52b3kuZXh0ZW5zaW9ucy5m",
            "aWx0ZXJzLmh0dHAuaGVhZGVyX3RvX21ldGFkYXRhLnYzLkNvbmZpZy5WYWx1",
            "ZUVuY29kZTpJmsWIHkQKQmVudm95LmNvbmZpZy5maWx0ZXIuaHR0cC5oZWFk",
            "ZXJfdG9fbWV0YWRhdGEudjIuQ29uZmlnLktleVZhbHVlUGFpchrDAwoEUnVs",
            "ZRI6CgZoZWFkZXIYASABKAlCKvpCCHIGwAEByAEA8pj+jwUZEhdoZWFkZXJf",
            "Y29va2llX3NwZWNpZmllchI6CgZjb29raWUYBSABKAlCKvpCCHIGwAEByAEA",
            "8pj+jwUZEhdoZWFkZXJfY29va2llX3NwZWNpZmllchJ3ChFvbl9oZWFkZXJf",
            "cHJlc2VudBgCIAEoCzJILmVudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRw",
            "LmhlYWRlcl90b19tZXRhZGF0YS52My5Db25maWcuS2V5VmFsdWVQYWlyQhLy",
            "mP6PBQwKCm9uX3ByZXNlbnQSdwoRb25faGVhZGVyX21pc3NpbmcYAyABKAsy",
            "SC5lbnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5oZWFkZXJfdG9fbWV0",
            "YWRhdGEudjMuQ29uZmlnLktleVZhbHVlUGFpckIS8pj+jwUMCgpvbl9taXNz",
            "aW5nEg4KBnJlbW92ZRgEIAEoCDpBmsWIHjwKOmVudm95LmNvbmZpZy5maWx0",
            "ZXIuaHR0cC5oZWFkZXJfdG9fbWV0YWRhdGEudjIuQ29uZmlnLlJ1bGUiNwoJ",
            "VmFsdWVUeXBlEgoKBlNUUklORxAAEgoKBk5VTUJFUhABEhIKDlBST1RPQlVG",
            "X1ZBTFVFEAIiIwoLVmFsdWVFbmNvZGUSCAoETk9ORRAAEgoKBkJBU0U2NBAB",
            "OjyaxYgeNwo1ZW52b3kuY29uZmlnLmZpbHRlci5odHRwLmhlYWRlcl90b19t",
            "ZXRhZGF0YS52Mi5Db25maWdCZApBaW8uZW52b3lwcm94eS5lbnZveS5leHRl",
            "bnNpb25zLmZpbHRlcnMuaHR0cC5oZWFkZXJfdG9fbWV0YWRhdGEudjNCFUhl",
            "YWRlclRvTWV0YWRhdGFQcm90b1ABuoDI0QYCEAJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Type.Matcher.V3.RegexReflection.Descriptor, global::Udpa.Annotations.MigrateReflection.Descriptor, global::Udpa.Annotations.StatusReflection.Descriptor, global::Udpa.Annotations.VersioningReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config), global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Parser, new[]{ "RequestRules", "ResponseRules" }, null, new[]{ typeof(global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.ValueType), typeof(global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.ValueEncode) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.KeyValuePair), global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.KeyValuePair.Parser, new[]{ "MetadataNamespace", "Key", "Value", "RegexValueRewrite", "Type", "Encode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.Rule), global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.Rule.Parser, new[]{ "Header", "Cookie", "OnHeaderPresent", "OnHeaderMissing", "Remove" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Config : pb::IMessage<Config>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Config> _parser = new pb::MessageParser<Config>(() => new Config());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Config> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.HeaderToMetadataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Config() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Config(Config other) : this() {
      requestRules_ = other.requestRules_.Clone();
      responseRules_ = other.responseRules_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Config Clone() {
      return new Config(this);
    }

    /// <summary>Field number for the "request_rules" field.</summary>
    public const int RequestRulesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.Rule> _repeated_requestRules_codec
        = pb::FieldCodec.ForMessage(10, global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.Rule.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.Rule> requestRules_ = new pbc::RepeatedField<global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.Rule>();
    /// <summary>
    /// The list of rules to apply to requests.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.Rule> RequestRules {
      get { return requestRules_; }
    }

    /// <summary>Field number for the "response_rules" field.</summary>
    public const int ResponseRulesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.Rule> _repeated_responseRules_codec
        = pb::FieldCodec.ForMessage(18, global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.Rule.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.Rule> responseRules_ = new pbc::RepeatedField<global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.Rule>();
    /// <summary>
    /// The list of rules to apply to responses.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.Rule> ResponseRules {
      get { return responseRules_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Config);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Config other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!requestRules_.Equals(other.requestRules_)) return false;
      if(!responseRules_.Equals(other.responseRules_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= requestRules_.GetHashCode();
      hash ^= responseRules_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      requestRules_.WriteTo(output, _repeated_requestRules_codec);
      responseRules_.WriteTo(output, _repeated_responseRules_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      requestRules_.WriteTo(ref output, _repeated_requestRules_codec);
      responseRules_.WriteTo(ref output, _repeated_responseRules_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += requestRules_.CalculateSize(_repeated_requestRules_codec);
      size += responseRules_.CalculateSize(_repeated_responseRules_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Config other) {
      if (other == null) {
        return;
      }
      requestRules_.Add(other.requestRules_);
      responseRules_.Add(other.responseRules_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            requestRules_.AddEntriesFrom(input, _repeated_requestRules_codec);
            break;
          }
          case 18: {
            responseRules_.AddEntriesFrom(input, _repeated_responseRules_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            requestRules_.AddEntriesFrom(ref input, _repeated_requestRules_codec);
            break;
          }
          case 18: {
            responseRules_.AddEntriesFrom(ref input, _repeated_responseRules_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Config message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum ValueType {
        [pbr::OriginalName("STRING")] String = 0,
        [pbr::OriginalName("NUMBER")] Number = 1,
        /// <summary>
        /// The value is a serialized `protobuf.Value
        /// &lt;https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/struct.proto#L62>`_.
        /// </summary>
        [pbr::OriginalName("PROTOBUF_VALUE")] ProtobufValue = 2,
      }

      /// <summary>
      /// ValueEncode defines the encoding algorithm.
      /// </summary>
      public enum ValueEncode {
        /// <summary>
        /// The value is not encoded.
        /// </summary>
        [pbr::OriginalName("NONE")] None = 0,
        /// <summary>
        /// The value is encoded in `Base64 &lt;https://tools.ietf.org/html/rfc4648#section-4>`_.
        /// Note: this is mostly used for STRING and PROTOBUF_VALUE to escape the
        /// non-ASCII characters in the header.
        /// </summary>
        [pbr::OriginalName("BASE64")] Base64 = 1,
      }

      /// <summary>
      /// [#next-free-field: 7]
      /// </summary>
      public sealed partial class KeyValuePair : pb::IMessage<KeyValuePair>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<KeyValuePair> _parser = new pb::MessageParser<KeyValuePair>(() => new KeyValuePair());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<KeyValuePair> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public KeyValuePair() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public KeyValuePair(KeyValuePair other) : this() {
          metadataNamespace_ = other.metadataNamespace_;
          key_ = other.key_;
          value_ = other.value_;
          regexValueRewrite_ = other.regexValueRewrite_ != null ? other.regexValueRewrite_.Clone() : null;
          type_ = other.type_;
          encode_ = other.encode_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public KeyValuePair Clone() {
          return new KeyValuePair(this);
        }

        /// <summary>Field number for the "metadata_namespace" field.</summary>
        public const int MetadataNamespaceFieldNumber = 1;
        private string metadataNamespace_ = "";
        /// <summary>
        /// The namespace — if this is empty, the filter's namespace will be used.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string MetadataNamespace {
          get { return metadataNamespace_; }
          set {
            metadataNamespace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 2;
        private string key_ = "";
        /// <summary>
        /// The key to use within the namespace.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Key {
          get { return key_; }
          set {
            key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 3;
        private string value_ = "";
        /// <summary>
        /// The value to pair with the given key.
        ///
        /// When used for a
        /// :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present>`
        /// case, if value is non-empty it'll be used instead of the header value. If both are empty, no metadata is added.
        ///
        /// When used for a :ref:`on_header_missing &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_missing>`
        /// case, a non-empty value must be provided otherwise no metadata is added.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Value {
          get { return value_; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "regex_value_rewrite" field.</summary>
        public const int RegexValueRewriteFieldNumber = 6;
        private global::Envoy.Type.Matcher.V3.RegexMatchAndSubstitute regexValueRewrite_;
        /// <summary>
        /// If present, the header's value will be matched and substituted with this. If there is no match or substitution, the header value
        /// is used as-is.
        ///
        /// This is only used for :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present>`.
        ///
        /// Note: if the `value` field is non-empty this field should be empty.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Envoy.Type.Matcher.V3.RegexMatchAndSubstitute RegexValueRewrite {
          get { return regexValueRewrite_; }
          set {
            regexValueRewrite_ = value;
          }
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 4;
        private global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.ValueType type_ = global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.ValueType.String;
        /// <summary>
        /// The value's type — defaults to string.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.ValueType Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "encode" field.</summary>
        public const int EncodeFieldNumber = 5;
        private global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.ValueEncode encode_ = global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.ValueEncode.None;
        /// <summary>
        /// How is the value encoded, default is NONE (not encoded).
        /// The value will be decoded accordingly before storing to metadata.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.ValueEncode Encode {
          get { return encode_; }
          set {
            encode_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as KeyValuePair);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(KeyValuePair other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MetadataNamespace != other.MetadataNamespace) return false;
          if (Key != other.Key) return false;
          if (Value != other.Value) return false;
          if (!object.Equals(RegexValueRewrite, other.RegexValueRewrite)) return false;
          if (Type != other.Type) return false;
          if (Encode != other.Encode) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (MetadataNamespace.Length != 0) hash ^= MetadataNamespace.GetHashCode();
          if (Key.Length != 0) hash ^= Key.GetHashCode();
          if (Value.Length != 0) hash ^= Value.GetHashCode();
          if (regexValueRewrite_ != null) hash ^= RegexValueRewrite.GetHashCode();
          if (Type != global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.ValueType.String) hash ^= Type.GetHashCode();
          if (Encode != global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.ValueEncode.None) hash ^= Encode.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (MetadataNamespace.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MetadataNamespace);
          }
          if (Key.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Key);
          }
          if (Value.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Value);
          }
          if (Type != global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.ValueType.String) {
            output.WriteRawTag(32);
            output.WriteEnum((int) Type);
          }
          if (Encode != global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.ValueEncode.None) {
            output.WriteRawTag(40);
            output.WriteEnum((int) Encode);
          }
          if (regexValueRewrite_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(RegexValueRewrite);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (MetadataNamespace.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MetadataNamespace);
          }
          if (Key.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Key);
          }
          if (Value.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Value);
          }
          if (Type != global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.ValueType.String) {
            output.WriteRawTag(32);
            output.WriteEnum((int) Type);
          }
          if (Encode != global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.ValueEncode.None) {
            output.WriteRawTag(40);
            output.WriteEnum((int) Encode);
          }
          if (regexValueRewrite_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(RegexValueRewrite);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (MetadataNamespace.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MetadataNamespace);
          }
          if (Key.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
          }
          if (Value.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
          }
          if (regexValueRewrite_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegexValueRewrite);
          }
          if (Type != global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.ValueType.String) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (Encode != global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.ValueEncode.None) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Encode);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(KeyValuePair other) {
          if (other == null) {
            return;
          }
          if (other.MetadataNamespace.Length != 0) {
            MetadataNamespace = other.MetadataNamespace;
          }
          if (other.Key.Length != 0) {
            Key = other.Key;
          }
          if (other.Value.Length != 0) {
            Value = other.Value;
          }
          if (other.regexValueRewrite_ != null) {
            if (regexValueRewrite_ == null) {
              RegexValueRewrite = new global::Envoy.Type.Matcher.V3.RegexMatchAndSubstitute();
            }
            RegexValueRewrite.MergeFrom(other.RegexValueRewrite);
          }
          if (other.Type != global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.ValueType.String) {
            Type = other.Type;
          }
          if (other.Encode != global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.ValueEncode.None) {
            Encode = other.Encode;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                MetadataNamespace = input.ReadString();
                break;
              }
              case 18: {
                Key = input.ReadString();
                break;
              }
              case 26: {
                Value = input.ReadString();
                break;
              }
              case 32: {
                Type = (global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.ValueType) input.ReadEnum();
                break;
              }
              case 40: {
                Encode = (global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.ValueEncode) input.ReadEnum();
                break;
              }
              case 50: {
                if (regexValueRewrite_ == null) {
                  RegexValueRewrite = new global::Envoy.Type.Matcher.V3.RegexMatchAndSubstitute();
                }
                input.ReadMessage(RegexValueRewrite);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                MetadataNamespace = input.ReadString();
                break;
              }
              case 18: {
                Key = input.ReadString();
                break;
              }
              case 26: {
                Value = input.ReadString();
                break;
              }
              case 32: {
                Type = (global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.ValueType) input.ReadEnum();
                break;
              }
              case 40: {
                Encode = (global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.ValueEncode) input.ReadEnum();
                break;
              }
              case 50: {
                if (regexValueRewrite_ == null) {
                  RegexValueRewrite = new global::Envoy.Type.Matcher.V3.RegexMatchAndSubstitute();
                }
                input.ReadMessage(RegexValueRewrite);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// A Rule defines what metadata to apply when a header is present or missing.
      /// [#next-free-field: 6]
      /// </summary>
      public sealed partial class Rule : pb::IMessage<Rule>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Rule> _parser = new pb::MessageParser<Rule>(() => new Rule());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Rule> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rule() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rule(Rule other) : this() {
          header_ = other.header_;
          cookie_ = other.cookie_;
          onHeaderPresent_ = other.onHeaderPresent_ != null ? other.onHeaderPresent_.Clone() : null;
          onHeaderMissing_ = other.onHeaderMissing_ != null ? other.onHeaderMissing_.Clone() : null;
          remove_ = other.remove_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Rule Clone() {
          return new Rule(this);
        }

        /// <summary>Field number for the "header" field.</summary>
        public const int HeaderFieldNumber = 1;
        private string header_ = "";
        /// <summary>
        /// Specifies that a match will be performed on the value of a header or a cookie.
        ///
        /// The header to be extracted.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Header {
          get { return header_; }
          set {
            header_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "cookie" field.</summary>
        public const int CookieFieldNumber = 5;
        private string cookie_ = "";
        /// <summary>
        /// The cookie to be extracted.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Cookie {
          get { return cookie_; }
          set {
            cookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "on_header_present" field.</summary>
        public const int OnHeaderPresentFieldNumber = 2;
        private global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.KeyValuePair onHeaderPresent_;
        /// <summary>
        /// If the header or cookie is present, apply this metadata KeyValuePair.
        ///
        /// If the value in the KeyValuePair is non-empty, it'll be used instead
        /// of the header or cookie value.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.KeyValuePair OnHeaderPresent {
          get { return onHeaderPresent_; }
          set {
            onHeaderPresent_ = value;
          }
        }

        /// <summary>Field number for the "on_header_missing" field.</summary>
        public const int OnHeaderMissingFieldNumber = 3;
        private global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.KeyValuePair onHeaderMissing_;
        /// <summary>
        /// If the header or cookie is not present, apply this metadata KeyValuePair.
        ///
        /// The value in the KeyValuePair must be set, since it'll be used in lieu
        /// of the missing header or cookie value.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.KeyValuePair OnHeaderMissing {
          get { return onHeaderMissing_; }
          set {
            onHeaderMissing_ = value;
          }
        }

        /// <summary>Field number for the "remove" field.</summary>
        public const int RemoveFieldNumber = 4;
        private bool remove_;
        /// <summary>
        /// Whether or not to remove the header after a rule is applied.
        ///
        /// This prevents headers from leaking.
        /// This field is not supported in case of a cookie.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Remove {
          get { return remove_; }
          set {
            remove_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Rule);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Rule other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Header != other.Header) return false;
          if (Cookie != other.Cookie) return false;
          if (!object.Equals(OnHeaderPresent, other.OnHeaderPresent)) return false;
          if (!object.Equals(OnHeaderMissing, other.OnHeaderMissing)) return false;
          if (Remove != other.Remove) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Header.Length != 0) hash ^= Header.GetHashCode();
          if (Cookie.Length != 0) hash ^= Cookie.GetHashCode();
          if (onHeaderPresent_ != null) hash ^= OnHeaderPresent.GetHashCode();
          if (onHeaderMissing_ != null) hash ^= OnHeaderMissing.GetHashCode();
          if (Remove != false) hash ^= Remove.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Header.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Header);
          }
          if (onHeaderPresent_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(OnHeaderPresent);
          }
          if (onHeaderMissing_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(OnHeaderMissing);
          }
          if (Remove != false) {
            output.WriteRawTag(32);
            output.WriteBool(Remove);
          }
          if (Cookie.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Cookie);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Header.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Header);
          }
          if (onHeaderPresent_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(OnHeaderPresent);
          }
          if (onHeaderMissing_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(OnHeaderMissing);
          }
          if (Remove != false) {
            output.WriteRawTag(32);
            output.WriteBool(Remove);
          }
          if (Cookie.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Cookie);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Header.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Header);
          }
          if (Cookie.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Cookie);
          }
          if (onHeaderPresent_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(OnHeaderPresent);
          }
          if (onHeaderMissing_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(OnHeaderMissing);
          }
          if (Remove != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Rule other) {
          if (other == null) {
            return;
          }
          if (other.Header.Length != 0) {
            Header = other.Header;
          }
          if (other.Cookie.Length != 0) {
            Cookie = other.Cookie;
          }
          if (other.onHeaderPresent_ != null) {
            if (onHeaderPresent_ == null) {
              OnHeaderPresent = new global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.KeyValuePair();
            }
            OnHeaderPresent.MergeFrom(other.OnHeaderPresent);
          }
          if (other.onHeaderMissing_ != null) {
            if (onHeaderMissing_ == null) {
              OnHeaderMissing = new global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.KeyValuePair();
            }
            OnHeaderMissing.MergeFrom(other.OnHeaderMissing);
          }
          if (other.Remove != false) {
            Remove = other.Remove;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Header = input.ReadString();
                break;
              }
              case 18: {
                if (onHeaderPresent_ == null) {
                  OnHeaderPresent = new global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.KeyValuePair();
                }
                input.ReadMessage(OnHeaderPresent);
                break;
              }
              case 26: {
                if (onHeaderMissing_ == null) {
                  OnHeaderMissing = new global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.KeyValuePair();
                }
                input.ReadMessage(OnHeaderMissing);
                break;
              }
              case 32: {
                Remove = input.ReadBool();
                break;
              }
              case 42: {
                Cookie = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Header = input.ReadString();
                break;
              }
              case 18: {
                if (onHeaderPresent_ == null) {
                  OnHeaderPresent = new global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.KeyValuePair();
                }
                input.ReadMessage(OnHeaderPresent);
                break;
              }
              case 26: {
                if (onHeaderMissing_ == null) {
                  OnHeaderMissing = new global::Envoy.Extensions.Filters.Http.HeaderToMetadata.V3.Config.Types.KeyValuePair();
                }
                input.ReadMessage(OnHeaderMissing);
                break;
              }
              case 32: {
                Remove = input.ReadBool();
                break;
              }
              case 42: {
                Cookie = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
