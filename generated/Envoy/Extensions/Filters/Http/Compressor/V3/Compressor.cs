// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/extensions/filters/http/compressor/v3/compressor.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Extensions.Filters.Http.Compressor.V3 {

  /// <summary>Holder for reflection information generated from envoy/extensions/filters/http/compressor/v3/compressor.proto</summary>
  public static partial class CompressorReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/extensions/filters/http/compressor/v3/compressor.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CompressorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjxlbnZveS9leHRlbnNpb25zL2ZpbHRlcnMvaHR0cC9jb21wcmVzc29yL3Yz",
            "L2NvbXByZXNzb3IucHJvdG8SK2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5o",
            "dHRwLmNvbXByZXNzb3IudjMaH2Vudm95L2NvbmZpZy9jb3JlL3YzL2Jhc2Uu",
            "cHJvdG8aJGVudm95L2NvbmZpZy9jb3JlL3YzL2V4dGVuc2lvbi5wcm90bxoe",
            "Z29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGiNlbnZveS9hbm5vdGF0",
            "aW9ucy9kZXByZWNhdGlvbi5wcm90bxoddWRwYS9hbm5vdGF0aW9ucy9zdGF0",
            "dXMucHJvdG8aIXVkcGEvYW5ub3RhdGlvbnMvdmVyc2lvbmluZy5wcm90bxoX",
            "dmFsaWRhdGUvdmFsaWRhdGUucHJvdG8igwkKCkNvbXByZXNzb3ISQQoOY29u",
            "dGVudF9sZW5ndGgYASABKAsyHC5nb29nbGUucHJvdG9idWYuVUludDMyVmFs",
            "dWVCCxgBkseG2AQDMy4wEiEKDGNvbnRlbnRfdHlwZRgCIAMoCUILGAGSx4bY",
            "BAMzLjASKwoWZGlzYWJsZV9vbl9ldGFnX2hlYWRlchgDIAEoCEILGAGSx4bY",
            "BAMzLjASMgodcmVtb3ZlX2FjY2VwdF9lbmNvZGluZ19oZWFkZXIYBCABKAhC",
            "CxgBkseG2AQDMy4wEk4KD3J1bnRpbWVfZW5hYmxlZBgFIAEoCzIoLmVudm95",
            "LmNvbmZpZy5jb3JlLnYzLlJ1bnRpbWVGZWF0dXJlRmxhZ0ILGAGSx4bYBAMz",
            "LjASUAoSY29tcHJlc3Nvcl9saWJyYXJ5GAYgASgLMiouZW52b3kuY29uZmln",
            "LmNvcmUudjMuVHlwZWRFeHRlbnNpb25Db25maWdCCPpCBYoBAhABEnAKGHJl",
            "cXVlc3RfZGlyZWN0aW9uX2NvbmZpZxgHIAEoCzJOLmVudm95LmV4dGVuc2lv",
            "bnMuZmlsdGVycy5odHRwLmNvbXByZXNzb3IudjMuQ29tcHJlc3Nvci5SZXF1",
            "ZXN0RGlyZWN0aW9uQ29uZmlnEnIKGXJlc3BvbnNlX2RpcmVjdGlvbl9jb25m",
            "aWcYCCABKAsyTy5lbnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5jb21w",
            "cmVzc29yLnYzLkNvbXByZXNzb3IuUmVzcG9uc2VEaXJlY3Rpb25Db25maWca",
            "ogEKFUNvbW1vbkRpcmVjdGlvbkNvbmZpZxI5CgdlbmFibGVkGAEgASgLMigu",
            "ZW52b3kuY29uZmlnLmNvcmUudjMuUnVudGltZUZlYXR1cmVGbGFnEjgKEm1p",
            "bl9jb250ZW50X2xlbmd0aBgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5VSW50",
            "MzJWYWx1ZRIUCgxjb250ZW50X3R5cGUYAyADKAkafgoWUmVxdWVzdERpcmVj",
            "dGlvbkNvbmZpZxJkCg1jb21tb25fY29uZmlnGAEgASgLMk0uZW52b3kuZXh0",
            "ZW5zaW9ucy5maWx0ZXJzLmh0dHAuY29tcHJlc3Nvci52My5Db21wcmVzc29y",
            "LkNvbW1vbkRpcmVjdGlvbkNvbmZpZxrGAQoXUmVzcG9uc2VEaXJlY3Rpb25D",
            "b25maWcSZAoNY29tbW9uX2NvbmZpZxgBIAEoCzJNLmVudm95LmV4dGVuc2lv",
            "bnMuZmlsdGVycy5odHRwLmNvbXByZXNzb3IudjMuQ29tcHJlc3Nvci5Db21t",
            "b25EaXJlY3Rpb25Db25maWcSHgoWZGlzYWJsZV9vbl9ldGFnX2hlYWRlchgC",
            "IAEoCBIlCh1yZW1vdmVfYWNjZXB0X2VuY29kaW5nX2hlYWRlchgDIAEoCDo4",
            "msWIHjMKMWVudm95LmNvbmZpZy5maWx0ZXIuaHR0cC5jb21wcmVzc29yLnYy",
            "LkNvbXByZXNzb3JCVgo5aW8uZW52b3lwcm94eS5lbnZveS5leHRlbnNpb25z",
            "LmZpbHRlcnMuaHR0cC5jb21wcmVzc29yLnYzQg9Db21wcmVzc29yUHJvdG9Q",
            "AbqAyNEGAhACYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Config.Core.V3.BaseReflection.Descriptor, global::Envoy.Config.Core.V3.ExtensionReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Envoy.Annotations.DeprecationReflection.Descriptor, global::Udpa.Annotations.StatusReflection.Descriptor, global::Udpa.Annotations.VersioningReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor), global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Parser, new[]{ "ContentLength", "ContentType", "DisableOnEtagHeader", "RemoveAcceptEncodingHeader", "RuntimeEnabled", "CompressorLibrary", "RequestDirectionConfig", "ResponseDirectionConfig" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.CommonDirectionConfig), global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.CommonDirectionConfig.Parser, new[]{ "Enabled", "MinContentLength", "ContentType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.RequestDirectionConfig), global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.RequestDirectionConfig.Parser, new[]{ "CommonConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.ResponseDirectionConfig), global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.ResponseDirectionConfig.Parser, new[]{ "CommonConfig", "DisableOnEtagHeader", "RemoveAcceptEncodingHeader" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// [#next-free-field: 9]
  /// </summary>
  public sealed partial class Compressor : pb::IMessage<Compressor>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Compressor> _parser = new pb::MessageParser<Compressor>(() => new Compressor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Compressor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Extensions.Filters.Http.Compressor.V3.CompressorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Compressor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Compressor(Compressor other) : this() {
      ContentLength = other.ContentLength;
      contentType_ = other.contentType_.Clone();
      disableOnEtagHeader_ = other.disableOnEtagHeader_;
      removeAcceptEncodingHeader_ = other.removeAcceptEncodingHeader_;
      runtimeEnabled_ = other.runtimeEnabled_ != null ? other.runtimeEnabled_.Clone() : null;
      compressorLibrary_ = other.compressorLibrary_ != null ? other.compressorLibrary_.Clone() : null;
      requestDirectionConfig_ = other.requestDirectionConfig_ != null ? other.requestDirectionConfig_.Clone() : null;
      responseDirectionConfig_ = other.responseDirectionConfig_ != null ? other.responseDirectionConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Compressor Clone() {
      return new Compressor(this);
    }

    /// <summary>Field number for the "content_length" field.</summary>
    public const int ContentLengthFieldNumber = 1;
    private static readonly pb::FieldCodec<uint?> _single_contentLength_codec = pb::FieldCodec.ForStructWrapper<uint>(10);
    private uint? contentLength_;
    /// <summary>
    /// Minimum response length, in bytes, which will trigger compression. The default value is 30.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint? ContentLength {
      get { return contentLength_; }
      set {
        contentLength_ = value;
      }
    }


    /// <summary>Field number for the "content_type" field.</summary>
    public const int ContentTypeFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_contentType_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> contentType_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Set of strings that allows specifying which mime-types yield compression; e.g.,
    /// application/json, text/html, etc. When this field is not defined, compression will be applied
    /// to the following mime-types: "application/javascript", "application/json",
    /// "application/xhtml+xml", "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml"
    /// and their synonyms.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ContentType {
      get { return contentType_; }
    }

    /// <summary>Field number for the "disable_on_etag_header" field.</summary>
    public const int DisableOnEtagHeaderFieldNumber = 3;
    private bool disableOnEtagHeader_;
    /// <summary>
    /// If true, disables compression when the response contains an etag header. When it is false, the
    /// filter will preserve weak etags and remove the ones that require strong validation.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisableOnEtagHeader {
      get { return disableOnEtagHeader_; }
      set {
        disableOnEtagHeader_ = value;
      }
    }

    /// <summary>Field number for the "remove_accept_encoding_header" field.</summary>
    public const int RemoveAcceptEncodingHeaderFieldNumber = 4;
    private bool removeAcceptEncodingHeader_;
    /// <summary>
    /// If true, removes accept-encoding from the request headers before dispatching it to the upstream
    /// so that responses do not get compressed before reaching the filter.
    ///
    /// .. attention::
    ///
    ///    To avoid interfering with other compression filters in the same chain use this option in
    ///    the filter closest to the upstream.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RemoveAcceptEncodingHeader {
      get { return removeAcceptEncodingHeader_; }
      set {
        removeAcceptEncodingHeader_ = value;
      }
    }

    /// <summary>Field number for the "runtime_enabled" field.</summary>
    public const int RuntimeEnabledFieldNumber = 5;
    private global::Envoy.Config.Core.V3.RuntimeFeatureFlag runtimeEnabled_;
    /// <summary>
    /// Runtime flag that controls whether the filter is enabled or not. If set to false, the
    /// filter will operate as a pass-through filter. If not specified, defaults to enabled.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Core.V3.RuntimeFeatureFlag RuntimeEnabled {
      get { return runtimeEnabled_; }
      set {
        runtimeEnabled_ = value;
      }
    }

    /// <summary>Field number for the "compressor_library" field.</summary>
    public const int CompressorLibraryFieldNumber = 6;
    private global::Envoy.Config.Core.V3.TypedExtensionConfig compressorLibrary_;
    /// <summary>
    /// A compressor library to use for compression. Currently only
    /// :ref:`envoy.compression.gzip.compressor&lt;envoy_v3_api_msg_extensions.compression.gzip.compressor.v3.Gzip>`
    /// is included in Envoy.
    /// [#extension-category: envoy.compression.compressor]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Core.V3.TypedExtensionConfig CompressorLibrary {
      get { return compressorLibrary_; }
      set {
        compressorLibrary_ = value;
      }
    }

    /// <summary>Field number for the "request_direction_config" field.</summary>
    public const int RequestDirectionConfigFieldNumber = 7;
    private global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.RequestDirectionConfig requestDirectionConfig_;
    /// <summary>
    /// Configuration for request compression. Compression is disabled by default if left empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.RequestDirectionConfig RequestDirectionConfig {
      get { return requestDirectionConfig_; }
      set {
        requestDirectionConfig_ = value;
      }
    }

    /// <summary>Field number for the "response_direction_config" field.</summary>
    public const int ResponseDirectionConfigFieldNumber = 8;
    private global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.ResponseDirectionConfig responseDirectionConfig_;
    /// <summary>
    /// Configuration for response compression. Compression is enabled by default if left empty.
    ///
    /// .. attention::
    ///
    ///    If the field is not empty then the duplicate deprecated fields of the `Compressor` message,
    ///    such as `content_length`, `content_type`, `disable_on_etag_header`,
    ///    `remove_accept_encoding_header` and `runtime_enabled`, are ignored.
    ///
    ///    Also all the statistics related to response compression will be rooted in
    ///    `&lt;stat_prefix>.compressor.&lt;compressor_library.name>.&lt;compressor_library_stat_prefix>.response.*`
    ///    instead of
    ///    `&lt;stat_prefix>.compressor.&lt;compressor_library.name>.&lt;compressor_library_stat_prefix>.*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.ResponseDirectionConfig ResponseDirectionConfig {
      get { return responseDirectionConfig_; }
      set {
        responseDirectionConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Compressor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Compressor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContentLength != other.ContentLength) return false;
      if(!contentType_.Equals(other.contentType_)) return false;
      if (DisableOnEtagHeader != other.DisableOnEtagHeader) return false;
      if (RemoveAcceptEncodingHeader != other.RemoveAcceptEncodingHeader) return false;
      if (!object.Equals(RuntimeEnabled, other.RuntimeEnabled)) return false;
      if (!object.Equals(CompressorLibrary, other.CompressorLibrary)) return false;
      if (!object.Equals(RequestDirectionConfig, other.RequestDirectionConfig)) return false;
      if (!object.Equals(ResponseDirectionConfig, other.ResponseDirectionConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (contentLength_ != null) hash ^= ContentLength.GetHashCode();
      hash ^= contentType_.GetHashCode();
      if (DisableOnEtagHeader != false) hash ^= DisableOnEtagHeader.GetHashCode();
      if (RemoveAcceptEncodingHeader != false) hash ^= RemoveAcceptEncodingHeader.GetHashCode();
      if (runtimeEnabled_ != null) hash ^= RuntimeEnabled.GetHashCode();
      if (compressorLibrary_ != null) hash ^= CompressorLibrary.GetHashCode();
      if (requestDirectionConfig_ != null) hash ^= RequestDirectionConfig.GetHashCode();
      if (responseDirectionConfig_ != null) hash ^= ResponseDirectionConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (contentLength_ != null) {
        _single_contentLength_codec.WriteTagAndValue(output, ContentLength);
      }
      contentType_.WriteTo(output, _repeated_contentType_codec);
      if (DisableOnEtagHeader != false) {
        output.WriteRawTag(24);
        output.WriteBool(DisableOnEtagHeader);
      }
      if (RemoveAcceptEncodingHeader != false) {
        output.WriteRawTag(32);
        output.WriteBool(RemoveAcceptEncodingHeader);
      }
      if (runtimeEnabled_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RuntimeEnabled);
      }
      if (compressorLibrary_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CompressorLibrary);
      }
      if (requestDirectionConfig_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RequestDirectionConfig);
      }
      if (responseDirectionConfig_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ResponseDirectionConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (contentLength_ != null) {
        _single_contentLength_codec.WriteTagAndValue(ref output, ContentLength);
      }
      contentType_.WriteTo(ref output, _repeated_contentType_codec);
      if (DisableOnEtagHeader != false) {
        output.WriteRawTag(24);
        output.WriteBool(DisableOnEtagHeader);
      }
      if (RemoveAcceptEncodingHeader != false) {
        output.WriteRawTag(32);
        output.WriteBool(RemoveAcceptEncodingHeader);
      }
      if (runtimeEnabled_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RuntimeEnabled);
      }
      if (compressorLibrary_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CompressorLibrary);
      }
      if (requestDirectionConfig_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RequestDirectionConfig);
      }
      if (responseDirectionConfig_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ResponseDirectionConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (contentLength_ != null) {
        size += _single_contentLength_codec.CalculateSizeWithTag(ContentLength);
      }
      size += contentType_.CalculateSize(_repeated_contentType_codec);
      if (DisableOnEtagHeader != false) {
        size += 1 + 1;
      }
      if (RemoveAcceptEncodingHeader != false) {
        size += 1 + 1;
      }
      if (runtimeEnabled_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RuntimeEnabled);
      }
      if (compressorLibrary_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompressorLibrary);
      }
      if (requestDirectionConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestDirectionConfig);
      }
      if (responseDirectionConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseDirectionConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Compressor other) {
      if (other == null) {
        return;
      }
      if (other.contentLength_ != null) {
        if (contentLength_ == null || other.ContentLength != 0) {
          ContentLength = other.ContentLength;
        }
      }
      contentType_.Add(other.contentType_);
      if (other.DisableOnEtagHeader != false) {
        DisableOnEtagHeader = other.DisableOnEtagHeader;
      }
      if (other.RemoveAcceptEncodingHeader != false) {
        RemoveAcceptEncodingHeader = other.RemoveAcceptEncodingHeader;
      }
      if (other.runtimeEnabled_ != null) {
        if (runtimeEnabled_ == null) {
          RuntimeEnabled = new global::Envoy.Config.Core.V3.RuntimeFeatureFlag();
        }
        RuntimeEnabled.MergeFrom(other.RuntimeEnabled);
      }
      if (other.compressorLibrary_ != null) {
        if (compressorLibrary_ == null) {
          CompressorLibrary = new global::Envoy.Config.Core.V3.TypedExtensionConfig();
        }
        CompressorLibrary.MergeFrom(other.CompressorLibrary);
      }
      if (other.requestDirectionConfig_ != null) {
        if (requestDirectionConfig_ == null) {
          RequestDirectionConfig = new global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.RequestDirectionConfig();
        }
        RequestDirectionConfig.MergeFrom(other.RequestDirectionConfig);
      }
      if (other.responseDirectionConfig_ != null) {
        if (responseDirectionConfig_ == null) {
          ResponseDirectionConfig = new global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.ResponseDirectionConfig();
        }
        ResponseDirectionConfig.MergeFrom(other.ResponseDirectionConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            uint? value = _single_contentLength_codec.Read(input);
            if (contentLength_ == null || value != 0) {
              ContentLength = value;
            }
            break;
          }
          case 18: {
            contentType_.AddEntriesFrom(input, _repeated_contentType_codec);
            break;
          }
          case 24: {
            DisableOnEtagHeader = input.ReadBool();
            break;
          }
          case 32: {
            RemoveAcceptEncodingHeader = input.ReadBool();
            break;
          }
          case 42: {
            if (runtimeEnabled_ == null) {
              RuntimeEnabled = new global::Envoy.Config.Core.V3.RuntimeFeatureFlag();
            }
            input.ReadMessage(RuntimeEnabled);
            break;
          }
          case 50: {
            if (compressorLibrary_ == null) {
              CompressorLibrary = new global::Envoy.Config.Core.V3.TypedExtensionConfig();
            }
            input.ReadMessage(CompressorLibrary);
            break;
          }
          case 58: {
            if (requestDirectionConfig_ == null) {
              RequestDirectionConfig = new global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.RequestDirectionConfig();
            }
            input.ReadMessage(RequestDirectionConfig);
            break;
          }
          case 66: {
            if (responseDirectionConfig_ == null) {
              ResponseDirectionConfig = new global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.ResponseDirectionConfig();
            }
            input.ReadMessage(ResponseDirectionConfig);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            uint? value = _single_contentLength_codec.Read(ref input);
            if (contentLength_ == null || value != 0) {
              ContentLength = value;
            }
            break;
          }
          case 18: {
            contentType_.AddEntriesFrom(ref input, _repeated_contentType_codec);
            break;
          }
          case 24: {
            DisableOnEtagHeader = input.ReadBool();
            break;
          }
          case 32: {
            RemoveAcceptEncodingHeader = input.ReadBool();
            break;
          }
          case 42: {
            if (runtimeEnabled_ == null) {
              RuntimeEnabled = new global::Envoy.Config.Core.V3.RuntimeFeatureFlag();
            }
            input.ReadMessage(RuntimeEnabled);
            break;
          }
          case 50: {
            if (compressorLibrary_ == null) {
              CompressorLibrary = new global::Envoy.Config.Core.V3.TypedExtensionConfig();
            }
            input.ReadMessage(CompressorLibrary);
            break;
          }
          case 58: {
            if (requestDirectionConfig_ == null) {
              RequestDirectionConfig = new global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.RequestDirectionConfig();
            }
            input.ReadMessage(RequestDirectionConfig);
            break;
          }
          case 66: {
            if (responseDirectionConfig_ == null) {
              ResponseDirectionConfig = new global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.ResponseDirectionConfig();
            }
            input.ReadMessage(ResponseDirectionConfig);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Compressor message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class CommonDirectionConfig : pb::IMessage<CommonDirectionConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CommonDirectionConfig> _parser = new pb::MessageParser<CommonDirectionConfig>(() => new CommonDirectionConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<CommonDirectionConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public CommonDirectionConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public CommonDirectionConfig(CommonDirectionConfig other) : this() {
          enabled_ = other.enabled_ != null ? other.enabled_.Clone() : null;
          MinContentLength = other.MinContentLength;
          contentType_ = other.contentType_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public CommonDirectionConfig Clone() {
          return new CommonDirectionConfig(this);
        }

        /// <summary>Field number for the "enabled" field.</summary>
        public const int EnabledFieldNumber = 1;
        private global::Envoy.Config.Core.V3.RuntimeFeatureFlag enabled_;
        /// <summary>
        /// Runtime flag that controls whether compression is enabled or not for the direction this
        /// common config is put in. If set to false, the filter will operate as a pass-through filter
        /// in the chosen direction. If the field is omitted, the filter will be enabled.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Envoy.Config.Core.V3.RuntimeFeatureFlag Enabled {
          get { return enabled_; }
          set {
            enabled_ = value;
          }
        }

        /// <summary>Field number for the "min_content_length" field.</summary>
        public const int MinContentLengthFieldNumber = 2;
        private static readonly pb::FieldCodec<uint?> _single_minContentLength_codec = pb::FieldCodec.ForStructWrapper<uint>(18);
        private uint? minContentLength_;
        /// <summary>
        /// Minimum value of Content-Length header of request or response messages (depending on the direction
        /// this common config is put in), in bytes, which will trigger compression. The default value is 30.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint? MinContentLength {
          get { return minContentLength_; }
          set {
            minContentLength_ = value;
          }
        }


        /// <summary>Field number for the "content_type" field.</summary>
        public const int ContentTypeFieldNumber = 3;
        private static readonly pb::FieldCodec<string> _repeated_contentType_codec
            = pb::FieldCodec.ForString(26);
        private readonly pbc::RepeatedField<string> contentType_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// Set of strings that allows specifying which mime-types yield compression; e.g.,
        /// application/json, text/html, etc. When this field is not defined, compression will be applied
        /// to the following mime-types: "application/javascript", "application/json",
        /// "application/xhtml+xml", "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml"
        /// and their synonyms.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> ContentType {
          get { return contentType_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as CommonDirectionConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(CommonDirectionConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Enabled, other.Enabled)) return false;
          if (MinContentLength != other.MinContentLength) return false;
          if(!contentType_.Equals(other.contentType_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (enabled_ != null) hash ^= Enabled.GetHashCode();
          if (minContentLength_ != null) hash ^= MinContentLength.GetHashCode();
          hash ^= contentType_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (enabled_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Enabled);
          }
          if (minContentLength_ != null) {
            _single_minContentLength_codec.WriteTagAndValue(output, MinContentLength);
          }
          contentType_.WriteTo(output, _repeated_contentType_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (enabled_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Enabled);
          }
          if (minContentLength_ != null) {
            _single_minContentLength_codec.WriteTagAndValue(ref output, MinContentLength);
          }
          contentType_.WriteTo(ref output, _repeated_contentType_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (enabled_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Enabled);
          }
          if (minContentLength_ != null) {
            size += _single_minContentLength_codec.CalculateSizeWithTag(MinContentLength);
          }
          size += contentType_.CalculateSize(_repeated_contentType_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(CommonDirectionConfig other) {
          if (other == null) {
            return;
          }
          if (other.enabled_ != null) {
            if (enabled_ == null) {
              Enabled = new global::Envoy.Config.Core.V3.RuntimeFeatureFlag();
            }
            Enabled.MergeFrom(other.Enabled);
          }
          if (other.minContentLength_ != null) {
            if (minContentLength_ == null || other.MinContentLength != 0) {
              MinContentLength = other.MinContentLength;
            }
          }
          contentType_.Add(other.contentType_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (enabled_ == null) {
                  Enabled = new global::Envoy.Config.Core.V3.RuntimeFeatureFlag();
                }
                input.ReadMessage(Enabled);
                break;
              }
              case 18: {
                uint? value = _single_minContentLength_codec.Read(input);
                if (minContentLength_ == null || value != 0) {
                  MinContentLength = value;
                }
                break;
              }
              case 26: {
                contentType_.AddEntriesFrom(input, _repeated_contentType_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (enabled_ == null) {
                  Enabled = new global::Envoy.Config.Core.V3.RuntimeFeatureFlag();
                }
                input.ReadMessage(Enabled);
                break;
              }
              case 18: {
                uint? value = _single_minContentLength_codec.Read(ref input);
                if (minContentLength_ == null || value != 0) {
                  MinContentLength = value;
                }
                break;
              }
              case 26: {
                contentType_.AddEntriesFrom(ref input, _repeated_contentType_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Configuration for filter behavior on the request direction.
      /// </summary>
      public sealed partial class RequestDirectionConfig : pb::IMessage<RequestDirectionConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RequestDirectionConfig> _parser = new pb::MessageParser<RequestDirectionConfig>(() => new RequestDirectionConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<RequestDirectionConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RequestDirectionConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RequestDirectionConfig(RequestDirectionConfig other) : this() {
          commonConfig_ = other.commonConfig_ != null ? other.commonConfig_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RequestDirectionConfig Clone() {
          return new RequestDirectionConfig(this);
        }

        /// <summary>Field number for the "common_config" field.</summary>
        public const int CommonConfigFieldNumber = 1;
        private global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.CommonDirectionConfig commonConfig_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.CommonDirectionConfig CommonConfig {
          get { return commonConfig_; }
          set {
            commonConfig_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as RequestDirectionConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(RequestDirectionConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(CommonConfig, other.CommonConfig)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (commonConfig_ != null) hash ^= CommonConfig.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (commonConfig_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(CommonConfig);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (commonConfig_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(CommonConfig);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (commonConfig_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommonConfig);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(RequestDirectionConfig other) {
          if (other == null) {
            return;
          }
          if (other.commonConfig_ != null) {
            if (commonConfig_ == null) {
              CommonConfig = new global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.CommonDirectionConfig();
            }
            CommonConfig.MergeFrom(other.CommonConfig);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (commonConfig_ == null) {
                  CommonConfig = new global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.CommonDirectionConfig();
                }
                input.ReadMessage(CommonConfig);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (commonConfig_ == null) {
                  CommonConfig = new global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.CommonDirectionConfig();
                }
                input.ReadMessage(CommonConfig);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Configuration for filter behavior on the response direction.
      /// </summary>
      public sealed partial class ResponseDirectionConfig : pb::IMessage<ResponseDirectionConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ResponseDirectionConfig> _parser = new pb::MessageParser<ResponseDirectionConfig>(() => new ResponseDirectionConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ResponseDirectionConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ResponseDirectionConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ResponseDirectionConfig(ResponseDirectionConfig other) : this() {
          commonConfig_ = other.commonConfig_ != null ? other.commonConfig_.Clone() : null;
          disableOnEtagHeader_ = other.disableOnEtagHeader_;
          removeAcceptEncodingHeader_ = other.removeAcceptEncodingHeader_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ResponseDirectionConfig Clone() {
          return new ResponseDirectionConfig(this);
        }

        /// <summary>Field number for the "common_config" field.</summary>
        public const int CommonConfigFieldNumber = 1;
        private global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.CommonDirectionConfig commonConfig_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.CommonDirectionConfig CommonConfig {
          get { return commonConfig_; }
          set {
            commonConfig_ = value;
          }
        }

        /// <summary>Field number for the "disable_on_etag_header" field.</summary>
        public const int DisableOnEtagHeaderFieldNumber = 2;
        private bool disableOnEtagHeader_;
        /// <summary>
        /// If true, disables compression when the response contains an etag header. When it is false, the
        /// filter will preserve weak etags and remove the ones that require strong validation.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool DisableOnEtagHeader {
          get { return disableOnEtagHeader_; }
          set {
            disableOnEtagHeader_ = value;
          }
        }

        /// <summary>Field number for the "remove_accept_encoding_header" field.</summary>
        public const int RemoveAcceptEncodingHeaderFieldNumber = 3;
        private bool removeAcceptEncodingHeader_;
        /// <summary>
        /// If true, removes accept-encoding from the request headers before dispatching it to the upstream
        /// so that responses do not get compressed before reaching the filter.
        ///
        /// .. attention::
        ///
        ///    To avoid interfering with other compression filters in the same chain use this option in
        ///    the filter closest to the upstream.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool RemoveAcceptEncodingHeader {
          get { return removeAcceptEncodingHeader_; }
          set {
            removeAcceptEncodingHeader_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ResponseDirectionConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ResponseDirectionConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(CommonConfig, other.CommonConfig)) return false;
          if (DisableOnEtagHeader != other.DisableOnEtagHeader) return false;
          if (RemoveAcceptEncodingHeader != other.RemoveAcceptEncodingHeader) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (commonConfig_ != null) hash ^= CommonConfig.GetHashCode();
          if (DisableOnEtagHeader != false) hash ^= DisableOnEtagHeader.GetHashCode();
          if (RemoveAcceptEncodingHeader != false) hash ^= RemoveAcceptEncodingHeader.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (commonConfig_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(CommonConfig);
          }
          if (DisableOnEtagHeader != false) {
            output.WriteRawTag(16);
            output.WriteBool(DisableOnEtagHeader);
          }
          if (RemoveAcceptEncodingHeader != false) {
            output.WriteRawTag(24);
            output.WriteBool(RemoveAcceptEncodingHeader);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (commonConfig_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(CommonConfig);
          }
          if (DisableOnEtagHeader != false) {
            output.WriteRawTag(16);
            output.WriteBool(DisableOnEtagHeader);
          }
          if (RemoveAcceptEncodingHeader != false) {
            output.WriteRawTag(24);
            output.WriteBool(RemoveAcceptEncodingHeader);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (commonConfig_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommonConfig);
          }
          if (DisableOnEtagHeader != false) {
            size += 1 + 1;
          }
          if (RemoveAcceptEncodingHeader != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ResponseDirectionConfig other) {
          if (other == null) {
            return;
          }
          if (other.commonConfig_ != null) {
            if (commonConfig_ == null) {
              CommonConfig = new global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.CommonDirectionConfig();
            }
            CommonConfig.MergeFrom(other.CommonConfig);
          }
          if (other.DisableOnEtagHeader != false) {
            DisableOnEtagHeader = other.DisableOnEtagHeader;
          }
          if (other.RemoveAcceptEncodingHeader != false) {
            RemoveAcceptEncodingHeader = other.RemoveAcceptEncodingHeader;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (commonConfig_ == null) {
                  CommonConfig = new global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.CommonDirectionConfig();
                }
                input.ReadMessage(CommonConfig);
                break;
              }
              case 16: {
                DisableOnEtagHeader = input.ReadBool();
                break;
              }
              case 24: {
                RemoveAcceptEncodingHeader = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (commonConfig_ == null) {
                  CommonConfig = new global::Envoy.Extensions.Filters.Http.Compressor.V3.Compressor.Types.CommonDirectionConfig();
                }
                input.ReadMessage(CommonConfig);
                break;
              }
              case 16: {
                DisableOnEtagHeader = input.ReadBool();
                break;
              }
              case 24: {
                RemoveAcceptEncodingHeader = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
