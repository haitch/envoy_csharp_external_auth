// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/extensions/filters/http/rbac/v3/rbac.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Extensions.Filters.Http.Rbac.V3 {

  /// <summary>Holder for reflection information generated from envoy/extensions/filters/http/rbac/v3/rbac.proto</summary>
  public static partial class RbacReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/extensions/filters/http/rbac/v3/rbac.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RbacReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBlbnZveS9leHRlbnNpb25zL2ZpbHRlcnMvaHR0cC9yYmFjL3YzL3JiYWMu",
            "cHJvdG8SJWVudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLnJiYWMudjMa",
            "H2Vudm95L2NvbmZpZy9yYmFjL3YzL3JiYWMucHJvdG8aHXVkcGEvYW5ub3Rh",
            "dGlvbnMvc3RhdHVzLnByb3RvGiF1ZHBhL2Fubm90YXRpb25zL3ZlcnNpb25p",
            "bmcucHJvdG8iswEKBFJCQUMSKQoFcnVsZXMYASABKAsyGi5lbnZveS5jb25m",
            "aWcucmJhYy52My5SQkFDEjAKDHNoYWRvd19ydWxlcxgCIAEoCzIaLmVudm95",
            "LmNvbmZpZy5yYmFjLnYzLlJCQUMSIAoYc2hhZG93X3J1bGVzX3N0YXRfcHJl",
            "Zml4GAMgASgJOiyaxYgeJwolZW52b3kuY29uZmlnLmZpbHRlci5odHRwLnJi",
            "YWMudjIuUkJBQyKFAQoMUkJBQ1BlclJvdXRlEjkKBHJiYWMYAiABKAsyKy5l",
            "bnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5yYmFjLnYzLlJCQUM6NJrF",
            "iB4vCi1lbnZveS5jb25maWcuZmlsdGVyLmh0dHAucmJhYy52Mi5SQkFDUGVy",
            "Um91dGVKBAgBEAJCSgozaW8uZW52b3lwcm94eS5lbnZveS5leHRlbnNpb25z",
            "LmZpbHRlcnMuaHR0cC5yYmFjLnYzQglSYmFjUHJvdG9QAbqAyNEGAhACYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Config.Rbac.V3.RbacReflection.Descriptor, global::Udpa.Annotations.StatusReflection.Descriptor, global::Udpa.Annotations.VersioningReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Extensions.Filters.Http.Rbac.V3.RBAC), global::Envoy.Extensions.Filters.Http.Rbac.V3.RBAC.Parser, new[]{ "Rules", "ShadowRules", "ShadowRulesStatPrefix" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Extensions.Filters.Http.Rbac.V3.RBACPerRoute), global::Envoy.Extensions.Filters.Http.Rbac.V3.RBACPerRoute.Parser, new[]{ "Rbac" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// RBAC filter config.
  /// </summary>
  public sealed partial class RBAC : pb::IMessage<RBAC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RBAC> _parser = new pb::MessageParser<RBAC>(() => new RBAC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RBAC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Extensions.Filters.Http.Rbac.V3.RbacReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RBAC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RBAC(RBAC other) : this() {
      rules_ = other.rules_ != null ? other.rules_.Clone() : null;
      shadowRules_ = other.shadowRules_ != null ? other.shadowRules_.Clone() : null;
      shadowRulesStatPrefix_ = other.shadowRulesStatPrefix_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RBAC Clone() {
      return new RBAC(this);
    }

    /// <summary>Field number for the "rules" field.</summary>
    public const int RulesFieldNumber = 1;
    private global::Envoy.Config.Rbac.V3.RBAC rules_;
    /// <summary>
    /// Specify the RBAC rules to be applied globally.
    /// If absent, no enforcing RBAC policy will be applied.
    /// If present and empty, DENY.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Rbac.V3.RBAC Rules {
      get { return rules_; }
      set {
        rules_ = value;
      }
    }

    /// <summary>Field number for the "shadow_rules" field.</summary>
    public const int ShadowRulesFieldNumber = 2;
    private global::Envoy.Config.Rbac.V3.RBAC shadowRules_;
    /// <summary>
    /// Shadow rules are not enforced by the filter (i.e., returning a 403)
    /// but will emit stats and logs and can be used for rule testing.
    /// If absent, no shadow RBAC policy will be applied.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Rbac.V3.RBAC ShadowRules {
      get { return shadowRules_; }
      set {
        shadowRules_ = value;
      }
    }

    /// <summary>Field number for the "shadow_rules_stat_prefix" field.</summary>
    public const int ShadowRulesStatPrefixFieldNumber = 3;
    private string shadowRulesStatPrefix_ = "";
    /// <summary>
    /// If specified, shadow rules will emit stats with the given prefix.
    /// This is useful to distinguish the stat when there are more than 1 RBAC filter configured with
    /// shadow rules.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShadowRulesStatPrefix {
      get { return shadowRulesStatPrefix_; }
      set {
        shadowRulesStatPrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RBAC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RBAC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Rules, other.Rules)) return false;
      if (!object.Equals(ShadowRules, other.ShadowRules)) return false;
      if (ShadowRulesStatPrefix != other.ShadowRulesStatPrefix) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (rules_ != null) hash ^= Rules.GetHashCode();
      if (shadowRules_ != null) hash ^= ShadowRules.GetHashCode();
      if (ShadowRulesStatPrefix.Length != 0) hash ^= ShadowRulesStatPrefix.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (rules_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Rules);
      }
      if (shadowRules_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ShadowRules);
      }
      if (ShadowRulesStatPrefix.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ShadowRulesStatPrefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (rules_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Rules);
      }
      if (shadowRules_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ShadowRules);
      }
      if (ShadowRulesStatPrefix.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ShadowRulesStatPrefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (rules_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rules);
      }
      if (shadowRules_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShadowRules);
      }
      if (ShadowRulesStatPrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShadowRulesStatPrefix);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RBAC other) {
      if (other == null) {
        return;
      }
      if (other.rules_ != null) {
        if (rules_ == null) {
          Rules = new global::Envoy.Config.Rbac.V3.RBAC();
        }
        Rules.MergeFrom(other.Rules);
      }
      if (other.shadowRules_ != null) {
        if (shadowRules_ == null) {
          ShadowRules = new global::Envoy.Config.Rbac.V3.RBAC();
        }
        ShadowRules.MergeFrom(other.ShadowRules);
      }
      if (other.ShadowRulesStatPrefix.Length != 0) {
        ShadowRulesStatPrefix = other.ShadowRulesStatPrefix;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (rules_ == null) {
              Rules = new global::Envoy.Config.Rbac.V3.RBAC();
            }
            input.ReadMessage(Rules);
            break;
          }
          case 18: {
            if (shadowRules_ == null) {
              ShadowRules = new global::Envoy.Config.Rbac.V3.RBAC();
            }
            input.ReadMessage(ShadowRules);
            break;
          }
          case 26: {
            ShadowRulesStatPrefix = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (rules_ == null) {
              Rules = new global::Envoy.Config.Rbac.V3.RBAC();
            }
            input.ReadMessage(Rules);
            break;
          }
          case 18: {
            if (shadowRules_ == null) {
              ShadowRules = new global::Envoy.Config.Rbac.V3.RBAC();
            }
            input.ReadMessage(ShadowRules);
            break;
          }
          case 26: {
            ShadowRulesStatPrefix = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RBACPerRoute : pb::IMessage<RBACPerRoute>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RBACPerRoute> _parser = new pb::MessageParser<RBACPerRoute>(() => new RBACPerRoute());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RBACPerRoute> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Extensions.Filters.Http.Rbac.V3.RbacReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RBACPerRoute() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RBACPerRoute(RBACPerRoute other) : this() {
      rbac_ = other.rbac_ != null ? other.rbac_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RBACPerRoute Clone() {
      return new RBACPerRoute(this);
    }

    /// <summary>Field number for the "rbac" field.</summary>
    public const int RbacFieldNumber = 2;
    private global::Envoy.Extensions.Filters.Http.Rbac.V3.RBAC rbac_;
    /// <summary>
    /// Override the global configuration of the filter with this new config.
    /// If absent, the global RBAC policy will be disabled for this route.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Extensions.Filters.Http.Rbac.V3.RBAC Rbac {
      get { return rbac_; }
      set {
        rbac_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RBACPerRoute);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RBACPerRoute other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Rbac, other.Rbac)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (rbac_ != null) hash ^= Rbac.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (rbac_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Rbac);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (rbac_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Rbac);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (rbac_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rbac);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RBACPerRoute other) {
      if (other == null) {
        return;
      }
      if (other.rbac_ != null) {
        if (rbac_ == null) {
          Rbac = new global::Envoy.Extensions.Filters.Http.Rbac.V3.RBAC();
        }
        Rbac.MergeFrom(other.Rbac);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (rbac_ == null) {
              Rbac = new global::Envoy.Extensions.Filters.Http.Rbac.V3.RBAC();
            }
            input.ReadMessage(Rbac);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (rbac_ == null) {
              Rbac = new global::Envoy.Extensions.Filters.Http.Rbac.V3.RBAC();
            }
            input.ReadMessage(Rbac);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
