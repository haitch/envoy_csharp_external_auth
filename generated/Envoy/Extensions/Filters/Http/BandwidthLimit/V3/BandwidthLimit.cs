// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/extensions/filters/http/bandwidth_limit/v3/bandwidth_limit.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Extensions.Filters.Http.BandwidthLimit.V3 {

  /// <summary>Holder for reflection information generated from envoy/extensions/filters/http/bandwidth_limit/v3/bandwidth_limit.proto</summary>
  public static partial class BandwidthLimitReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/extensions/filters/http/bandwidth_limit/v3/bandwidth_limit.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BandwidthLimitReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkZlbnZveS9leHRlbnNpb25zL2ZpbHRlcnMvaHR0cC9iYW5kd2lkdGhfbGlt",
            "aXQvdjMvYmFuZHdpZHRoX2xpbWl0LnByb3RvEjBlbnZveS5leHRlbnNpb25z",
            "LmZpbHRlcnMuaHR0cC5iYW5kd2lkdGhfbGltaXQudjMaH2Vudm95L2NvbmZp",
            "Zy9jb3JlL3YzL2Jhc2UucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi9kdXJhdGlv",
            "bi5wcm90bxoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGh11ZHBh",
            "L2Fubm90YXRpb25zL3N0YXR1cy5wcm90bxoXdmFsaWRhdGUvdmFsaWRhdGUu",
            "cHJvdG8irgMKDkJhbmR3aWR0aExpbWl0EhwKC3N0YXRfcHJlZml4GAEgASgJ",
            "Qgf6QgRyAhABEmoKC2VuYWJsZV9tb2RlGAIgASgOMksuZW52b3kuZXh0ZW5z",
            "aW9ucy5maWx0ZXJzLmh0dHAuYmFuZHdpZHRoX2xpbWl0LnYzLkJhbmR3aWR0",
            "aExpbWl0LkVuYWJsZU1vZGVCCPpCBYIBAhABEjkKCmxpbWl0X2ticHMYAyAB",
            "KAsyHC5nb29nbGUucHJvdG9idWYuVUludDY0VmFsdWVCB/pCBDICKAESQwoN",
            "ZmlsbF9pbnRlcnZhbBgEIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlv",
            "bkIR+kIOqgELIgIIATIFEIDaxAkSQQoPcnVudGltZV9lbmFibGVkGAUgASgL",
            "MiguZW52b3kuY29uZmlnLmNvcmUudjMuUnVudGltZUZlYXR1cmVGbGFnIk8K",
            "CkVuYWJsZU1vZGUSDAoIRElTQUJMRUQQABILCgdSRVFVRVNUEAESDAoIUkVT",
            "UE9OU0UQAhIYChRSRVFVRVNUX0FORF9SRVNQT05TRRADQl8KPmlvLmVudm95",
            "cHJveHkuZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLmh0dHAuYmFuZHdpZHRo",
            "X2xpbWl0LnYzQhNCYW5kd2lkdGhMaW1pdFByb3RvUAG6gMjRBgIQAmIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Config.Core.V3.BaseReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Udpa.Annotations.StatusReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Extensions.Filters.Http.BandwidthLimit.V3.BandwidthLimit), global::Envoy.Extensions.Filters.Http.BandwidthLimit.V3.BandwidthLimit.Parser, new[]{ "StatPrefix", "EnableMode", "LimitKbps", "FillInterval", "RuntimeEnabled" }, null, new[]{ typeof(global::Envoy.Extensions.Filters.Http.BandwidthLimit.V3.BandwidthLimit.Types.EnableMode) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// [#next-free-field: 6]
  /// </summary>
  public sealed partial class BandwidthLimit : pb::IMessage<BandwidthLimit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BandwidthLimit> _parser = new pb::MessageParser<BandwidthLimit>(() => new BandwidthLimit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BandwidthLimit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Extensions.Filters.Http.BandwidthLimit.V3.BandwidthLimitReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BandwidthLimit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BandwidthLimit(BandwidthLimit other) : this() {
      statPrefix_ = other.statPrefix_;
      enableMode_ = other.enableMode_;
      LimitKbps = other.LimitKbps;
      fillInterval_ = other.fillInterval_ != null ? other.fillInterval_.Clone() : null;
      runtimeEnabled_ = other.runtimeEnabled_ != null ? other.runtimeEnabled_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BandwidthLimit Clone() {
      return new BandwidthLimit(this);
    }

    /// <summary>Field number for the "stat_prefix" field.</summary>
    public const int StatPrefixFieldNumber = 1;
    private string statPrefix_ = "";
    /// <summary>
    /// The human readable prefix to use when emitting stats.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StatPrefix {
      get { return statPrefix_; }
      set {
        statPrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enable_mode" field.</summary>
    public const int EnableModeFieldNumber = 2;
    private global::Envoy.Extensions.Filters.Http.BandwidthLimit.V3.BandwidthLimit.Types.EnableMode enableMode_ = global::Envoy.Extensions.Filters.Http.BandwidthLimit.V3.BandwidthLimit.Types.EnableMode.Disabled;
    /// <summary>
    /// The enable mode for the bandwidth limit filter.
    /// Default is Disabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Extensions.Filters.Http.BandwidthLimit.V3.BandwidthLimit.Types.EnableMode EnableMode {
      get { return enableMode_; }
      set {
        enableMode_ = value;
      }
    }

    /// <summary>Field number for the "limit_kbps" field.</summary>
    public const int LimitKbpsFieldNumber = 3;
    private static readonly pb::FieldCodec<ulong?> _single_limitKbps_codec = pb::FieldCodec.ForStructWrapper<ulong>(26);
    private ulong? limitKbps_;
    /// <summary>
    /// The limit supplied in KiB/s.
    ///
    /// .. note::
    ///   It's fine for the limit to be unset for the global configuration since the bandwidth limit
    ///   can be applied at a the virtual host or route level. Thus, the limit must be set for the
    ///   per route configuration otherwise the config will be rejected.
    ///
    /// .. note::
    ///   When using per route configuration, the limit becomes unique to that route.
    ///
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong? LimitKbps {
      get { return limitKbps_; }
      set {
        limitKbps_ = value;
      }
    }


    /// <summary>Field number for the "fill_interval" field.</summary>
    public const int FillIntervalFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Duration fillInterval_;
    /// <summary>
    /// Optional Fill interval in milliseconds for the token refills. Defaults to 50ms.
    /// It must be at least 20ms to avoid too aggressive refills.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration FillInterval {
      get { return fillInterval_; }
      set {
        fillInterval_ = value;
      }
    }

    /// <summary>Field number for the "runtime_enabled" field.</summary>
    public const int RuntimeEnabledFieldNumber = 5;
    private global::Envoy.Config.Core.V3.RuntimeFeatureFlag runtimeEnabled_;
    /// <summary>
    /// Runtime flag that controls whether the filter is enabled or not. If not specified, defaults
    /// to enabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Core.V3.RuntimeFeatureFlag RuntimeEnabled {
      get { return runtimeEnabled_; }
      set {
        runtimeEnabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BandwidthLimit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BandwidthLimit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatPrefix != other.StatPrefix) return false;
      if (EnableMode != other.EnableMode) return false;
      if (LimitKbps != other.LimitKbps) return false;
      if (!object.Equals(FillInterval, other.FillInterval)) return false;
      if (!object.Equals(RuntimeEnabled, other.RuntimeEnabled)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (StatPrefix.Length != 0) hash ^= StatPrefix.GetHashCode();
      if (EnableMode != global::Envoy.Extensions.Filters.Http.BandwidthLimit.V3.BandwidthLimit.Types.EnableMode.Disabled) hash ^= EnableMode.GetHashCode();
      if (limitKbps_ != null) hash ^= LimitKbps.GetHashCode();
      if (fillInterval_ != null) hash ^= FillInterval.GetHashCode();
      if (runtimeEnabled_ != null) hash ^= RuntimeEnabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StatPrefix.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StatPrefix);
      }
      if (EnableMode != global::Envoy.Extensions.Filters.Http.BandwidthLimit.V3.BandwidthLimit.Types.EnableMode.Disabled) {
        output.WriteRawTag(16);
        output.WriteEnum((int) EnableMode);
      }
      if (limitKbps_ != null) {
        _single_limitKbps_codec.WriteTagAndValue(output, LimitKbps);
      }
      if (fillInterval_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FillInterval);
      }
      if (runtimeEnabled_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RuntimeEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StatPrefix.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StatPrefix);
      }
      if (EnableMode != global::Envoy.Extensions.Filters.Http.BandwidthLimit.V3.BandwidthLimit.Types.EnableMode.Disabled) {
        output.WriteRawTag(16);
        output.WriteEnum((int) EnableMode);
      }
      if (limitKbps_ != null) {
        _single_limitKbps_codec.WriteTagAndValue(ref output, LimitKbps);
      }
      if (fillInterval_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FillInterval);
      }
      if (runtimeEnabled_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RuntimeEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (StatPrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatPrefix);
      }
      if (EnableMode != global::Envoy.Extensions.Filters.Http.BandwidthLimit.V3.BandwidthLimit.Types.EnableMode.Disabled) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EnableMode);
      }
      if (limitKbps_ != null) {
        size += _single_limitKbps_codec.CalculateSizeWithTag(LimitKbps);
      }
      if (fillInterval_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FillInterval);
      }
      if (runtimeEnabled_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RuntimeEnabled);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BandwidthLimit other) {
      if (other == null) {
        return;
      }
      if (other.StatPrefix.Length != 0) {
        StatPrefix = other.StatPrefix;
      }
      if (other.EnableMode != global::Envoy.Extensions.Filters.Http.BandwidthLimit.V3.BandwidthLimit.Types.EnableMode.Disabled) {
        EnableMode = other.EnableMode;
      }
      if (other.limitKbps_ != null) {
        if (limitKbps_ == null || other.LimitKbps != 0UL) {
          LimitKbps = other.LimitKbps;
        }
      }
      if (other.fillInterval_ != null) {
        if (fillInterval_ == null) {
          FillInterval = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        FillInterval.MergeFrom(other.FillInterval);
      }
      if (other.runtimeEnabled_ != null) {
        if (runtimeEnabled_ == null) {
          RuntimeEnabled = new global::Envoy.Config.Core.V3.RuntimeFeatureFlag();
        }
        RuntimeEnabled.MergeFrom(other.RuntimeEnabled);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StatPrefix = input.ReadString();
            break;
          }
          case 16: {
            EnableMode = (global::Envoy.Extensions.Filters.Http.BandwidthLimit.V3.BandwidthLimit.Types.EnableMode) input.ReadEnum();
            break;
          }
          case 26: {
            ulong? value = _single_limitKbps_codec.Read(input);
            if (limitKbps_ == null || value != 0UL) {
              LimitKbps = value;
            }
            break;
          }
          case 34: {
            if (fillInterval_ == null) {
              FillInterval = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(FillInterval);
            break;
          }
          case 42: {
            if (runtimeEnabled_ == null) {
              RuntimeEnabled = new global::Envoy.Config.Core.V3.RuntimeFeatureFlag();
            }
            input.ReadMessage(RuntimeEnabled);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            StatPrefix = input.ReadString();
            break;
          }
          case 16: {
            EnableMode = (global::Envoy.Extensions.Filters.Http.BandwidthLimit.V3.BandwidthLimit.Types.EnableMode) input.ReadEnum();
            break;
          }
          case 26: {
            ulong? value = _single_limitKbps_codec.Read(ref input);
            if (limitKbps_ == null || value != 0UL) {
              LimitKbps = value;
            }
            break;
          }
          case 34: {
            if (fillInterval_ == null) {
              FillInterval = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(FillInterval);
            break;
          }
          case 42: {
            if (runtimeEnabled_ == null) {
              RuntimeEnabled = new global::Envoy.Config.Core.V3.RuntimeFeatureFlag();
            }
            input.ReadMessage(RuntimeEnabled);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BandwidthLimit message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Defines the mode for the bandwidth limit filter.
      /// Values represent bitmask.
      /// </summary>
      public enum EnableMode {
        /// <summary>
        /// Filter is disabled.
        /// </summary>
        [pbr::OriginalName("DISABLED")] Disabled = 0,
        /// <summary>
        /// Filter enabled only for incoming traffic.
        /// </summary>
        [pbr::OriginalName("REQUEST")] Request = 1,
        /// <summary>
        /// Filter enabled only for outgoing traffic.
        /// </summary>
        [pbr::OriginalName("RESPONSE")] Response = 2,
        /// <summary>
        /// Filter enabled for both incoming and outgoing traffic.
        /// </summary>
        [pbr::OriginalName("REQUEST_AND_RESPONSE")] RequestAndResponse = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
