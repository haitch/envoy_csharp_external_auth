// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/service/ratelimit/v2/rls.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Service.Ratelimit.V2 {

  /// <summary>Holder for reflection information generated from envoy/service/ratelimit/v2/rls.proto</summary>
  public static partial class RlsReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/service/ratelimit/v2/rls.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RlsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRlbnZveS9zZXJ2aWNlL3JhdGVsaW1pdC92Mi9ybHMucHJvdG8SGmVudm95",
            "LnNlcnZpY2UucmF0ZWxpbWl0LnYyGhxlbnZveS9hcGkvdjIvY29yZS9iYXNl",
            "LnByb3RvGiZlbnZveS9hcGkvdjIvcmF0ZWxpbWl0L3JhdGVsaW1pdC5wcm90",
            "bxoedWRwYS9hbm5vdGF0aW9ucy9taWdyYXRlLnByb3RvGh11ZHBhL2Fubm90",
            "YXRpb25zL3N0YXR1cy5wcm90byJ5ChBSYXRlTGltaXRSZXF1ZXN0Eg4KBmRv",
            "bWFpbhgBIAEoCRJACgtkZXNjcmlwdG9ycxgCIAMoCzIrLmVudm95LmFwaS52",
            "Mi5yYXRlbGltaXQuUmF0ZUxpbWl0RGVzY3JpcHRvchITCgtoaXRzX2FkZGVu",
            "ZBgDIAEoDSLxBQoRUmF0ZUxpbWl0UmVzcG9uc2USSAoMb3ZlcmFsbF9jb2Rl",
            "GAEgASgOMjIuZW52b3kuc2VydmljZS5yYXRlbGltaXQudjIuUmF0ZUxpbWl0",
            "UmVzcG9uc2UuQ29kZRJQCghzdGF0dXNlcxgCIAMoCzI+LmVudm95LnNlcnZp",
            "Y2UucmF0ZWxpbWl0LnYyLlJhdGVMaW1pdFJlc3BvbnNlLkRlc2NyaXB0b3JT",
            "dGF0dXMSUAoHaGVhZGVycxgDIAMoCzIeLmVudm95LmFwaS52Mi5jb3JlLkhl",
            "YWRlclZhbHVlQh/ymP6PBRkKF3Jlc3BvbnNlX2hlYWRlcnNfdG9fYWRkEj4K",
            "FnJlcXVlc3RfaGVhZGVyc190b19hZGQYBCADKAsyHi5lbnZveS5hcGkudjIu",
            "Y29yZS5IZWFkZXJWYWx1ZRrAAQoJUmF0ZUxpbWl0EgwKBG5hbWUYAyABKAkS",
            "GQoRcmVxdWVzdHNfcGVyX3VuaXQYASABKA0SSgoEdW5pdBgCIAEoDjI8LmVu",
            "dm95LnNlcnZpY2UucmF0ZWxpbWl0LnYyLlJhdGVMaW1pdFJlc3BvbnNlLlJh",
            "dGVMaW1pdC5Vbml0Ij4KBFVuaXQSCwoHVU5LTk9XThAAEgoKBlNFQ09ORBAB",
            "EgoKBk1JTlVURRACEggKBEhPVVIQAxIHCgNEQVkQBBq9AQoQRGVzY3JpcHRv",
            "clN0YXR1cxJACgRjb2RlGAEgASgOMjIuZW52b3kuc2VydmljZS5yYXRlbGlt",
            "aXQudjIuUmF0ZUxpbWl0UmVzcG9uc2UuQ29kZRJOCg1jdXJyZW50X2xpbWl0",
            "GAIgASgLMjcuZW52b3kuc2VydmljZS5yYXRlbGltaXQudjIuUmF0ZUxpbWl0",
            "UmVzcG9uc2UuUmF0ZUxpbWl0EhcKD2xpbWl0X3JlbWFpbmluZxgDIAEoDSIr",
            "CgRDb2RlEgsKB1VOS05PV04QABIGCgJPSxABEg4KCk9WRVJfTElNSVQQAjKE",
            "AQoQUmF0ZUxpbWl0U2VydmljZRJwCg9TaG91bGRSYXRlTGltaXQSLC5lbnZv",
            "eS5zZXJ2aWNlLnJhdGVsaW1pdC52Mi5SYXRlTGltaXRSZXF1ZXN0Gi0uZW52",
            "b3kuc2VydmljZS5yYXRlbGltaXQudjIuUmF0ZUxpbWl0UmVzcG9uc2UiAEJB",
            "Cihpby5lbnZveXByb3h5LmVudm95LnNlcnZpY2UucmF0ZWxpbWl0LnYyQghS",
            "bHNQcm90b1ABiAEBuoDI0QYCEAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Api.V2.Core.BaseReflection.Descriptor, global::Envoy.Api.V2.Ratelimit.RatelimitReflection.Descriptor, global::Udpa.Annotations.MigrateReflection.Descriptor, global::Udpa.Annotations.StatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Service.Ratelimit.V2.RateLimitRequest), global::Envoy.Service.Ratelimit.V2.RateLimitRequest.Parser, new[]{ "Domain", "Descriptors", "HitsAddend" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Service.Ratelimit.V2.RateLimitResponse), global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Parser, new[]{ "OverallCode", "Statuses", "Headers", "RequestHeadersToAdd" }, null, new[]{ typeof(global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.Code) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.RateLimit), global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.RateLimit.Parser, new[]{ "Name", "RequestsPerUnit", "Unit" }, null, new[]{ typeof(global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.RateLimit.Types.Unit) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.DescriptorStatus), global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.DescriptorStatus.Parser, new[]{ "Code", "CurrentLimit", "LimitRemaining" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Main message for a rate limit request. The rate limit service is designed to be fully generic
  /// in the sense that it can operate on arbitrary hierarchical key/value pairs. The loaded
  /// configuration will parse the request and find the most specific limit to apply. In addition,
  /// a RateLimitRequest can contain multiple "descriptors" to limit on. When multiple descriptors
  /// are provided, the server will limit on *ALL* of them and return an OVER_LIMIT response if any
  /// of them are over limit. This enables more complex application level rate limiting scenarios
  /// if desired.
  /// </summary>
  public sealed partial class RateLimitRequest : pb::IMessage<RateLimitRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RateLimitRequest> _parser = new pb::MessageParser<RateLimitRequest>(() => new RateLimitRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RateLimitRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Service.Ratelimit.V2.RlsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RateLimitRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RateLimitRequest(RateLimitRequest other) : this() {
      domain_ = other.domain_;
      descriptors_ = other.descriptors_.Clone();
      hitsAddend_ = other.hitsAddend_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RateLimitRequest Clone() {
      return new RateLimitRequest(this);
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 1;
    private string domain_ = "";
    /// <summary>
    /// All rate limit requests must specify a domain. This enables the configuration to be per
    /// application without fear of overlap. E.g., "envoy".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Domain {
      get { return domain_; }
      set {
        domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "descriptors" field.</summary>
    public const int DescriptorsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Envoy.Api.V2.Ratelimit.RateLimitDescriptor> _repeated_descriptors_codec
        = pb::FieldCodec.ForMessage(18, global::Envoy.Api.V2.Ratelimit.RateLimitDescriptor.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Api.V2.Ratelimit.RateLimitDescriptor> descriptors_ = new pbc::RepeatedField<global::Envoy.Api.V2.Ratelimit.RateLimitDescriptor>();
    /// <summary>
    /// All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
    /// processed by the service (see below). If any of the descriptors are over limit, the entire
    /// request is considered to be over limit.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Api.V2.Ratelimit.RateLimitDescriptor> Descriptors {
      get { return descriptors_; }
    }

    /// <summary>Field number for the "hits_addend" field.</summary>
    public const int HitsAddendFieldNumber = 3;
    private uint hitsAddend_;
    /// <summary>
    /// Rate limit requests can optionally specify the number of hits a request adds to the matched
    /// limit. If the value is not set in the message, a request increases the matched limit by 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint HitsAddend {
      get { return hitsAddend_; }
      set {
        hitsAddend_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RateLimitRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RateLimitRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Domain != other.Domain) return false;
      if(!descriptors_.Equals(other.descriptors_)) return false;
      if (HitsAddend != other.HitsAddend) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Domain.Length != 0) hash ^= Domain.GetHashCode();
      hash ^= descriptors_.GetHashCode();
      if (HitsAddend != 0) hash ^= HitsAddend.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Domain.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Domain);
      }
      descriptors_.WriteTo(output, _repeated_descriptors_codec);
      if (HitsAddend != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(HitsAddend);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Domain.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Domain);
      }
      descriptors_.WriteTo(ref output, _repeated_descriptors_codec);
      if (HitsAddend != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(HitsAddend);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Domain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      size += descriptors_.CalculateSize(_repeated_descriptors_codec);
      if (HitsAddend != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HitsAddend);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RateLimitRequest other) {
      if (other == null) {
        return;
      }
      if (other.Domain.Length != 0) {
        Domain = other.Domain;
      }
      descriptors_.Add(other.descriptors_);
      if (other.HitsAddend != 0) {
        HitsAddend = other.HitsAddend;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Domain = input.ReadString();
            break;
          }
          case 18: {
            descriptors_.AddEntriesFrom(input, _repeated_descriptors_codec);
            break;
          }
          case 24: {
            HitsAddend = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Domain = input.ReadString();
            break;
          }
          case 18: {
            descriptors_.AddEntriesFrom(ref input, _repeated_descriptors_codec);
            break;
          }
          case 24: {
            HitsAddend = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A response from a ShouldRateLimit call.
  /// </summary>
  public sealed partial class RateLimitResponse : pb::IMessage<RateLimitResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RateLimitResponse> _parser = new pb::MessageParser<RateLimitResponse>(() => new RateLimitResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RateLimitResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Service.Ratelimit.V2.RlsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RateLimitResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RateLimitResponse(RateLimitResponse other) : this() {
      overallCode_ = other.overallCode_;
      statuses_ = other.statuses_.Clone();
      headers_ = other.headers_.Clone();
      requestHeadersToAdd_ = other.requestHeadersToAdd_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RateLimitResponse Clone() {
      return new RateLimitResponse(this);
    }

    /// <summary>Field number for the "overall_code" field.</summary>
    public const int OverallCodeFieldNumber = 1;
    private global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.Code overallCode_ = global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.Code.Unknown;
    /// <summary>
    /// The overall response code which takes into account all of the descriptors that were passed
    /// in the RateLimitRequest message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.Code OverallCode {
      get { return overallCode_; }
      set {
        overallCode_ = value;
      }
    }

    /// <summary>Field number for the "statuses" field.</summary>
    public const int StatusesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.DescriptorStatus> _repeated_statuses_codec
        = pb::FieldCodec.ForMessage(18, global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.DescriptorStatus.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.DescriptorStatus> statuses_ = new pbc::RepeatedField<global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.DescriptorStatus>();
    /// <summary>
    /// A list of DescriptorStatus messages which matches the length of the descriptor list passed
    /// in the RateLimitRequest. This can be used by the caller to determine which individual
    /// descriptors failed and/or what the currently configured limits are for all of them.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.DescriptorStatus> Statuses {
      get { return statuses_; }
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Envoy.Api.V2.Core.HeaderValue> _repeated_headers_codec
        = pb::FieldCodec.ForMessage(26, global::Envoy.Api.V2.Core.HeaderValue.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Api.V2.Core.HeaderValue> headers_ = new pbc::RepeatedField<global::Envoy.Api.V2.Core.HeaderValue>();
    /// <summary>
    /// A list of headers to add to the response
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Api.V2.Core.HeaderValue> Headers {
      get { return headers_; }
    }

    /// <summary>Field number for the "request_headers_to_add" field.</summary>
    public const int RequestHeadersToAddFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Envoy.Api.V2.Core.HeaderValue> _repeated_requestHeadersToAdd_codec
        = pb::FieldCodec.ForMessage(34, global::Envoy.Api.V2.Core.HeaderValue.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Api.V2.Core.HeaderValue> requestHeadersToAdd_ = new pbc::RepeatedField<global::Envoy.Api.V2.Core.HeaderValue>();
    /// <summary>
    /// A list of headers to add to the request when forwarded
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Api.V2.Core.HeaderValue> RequestHeadersToAdd {
      get { return requestHeadersToAdd_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RateLimitResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RateLimitResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OverallCode != other.OverallCode) return false;
      if(!statuses_.Equals(other.statuses_)) return false;
      if(!headers_.Equals(other.headers_)) return false;
      if(!requestHeadersToAdd_.Equals(other.requestHeadersToAdd_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (OverallCode != global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.Code.Unknown) hash ^= OverallCode.GetHashCode();
      hash ^= statuses_.GetHashCode();
      hash ^= headers_.GetHashCode();
      hash ^= requestHeadersToAdd_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OverallCode != global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.Code.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OverallCode);
      }
      statuses_.WriteTo(output, _repeated_statuses_codec);
      headers_.WriteTo(output, _repeated_headers_codec);
      requestHeadersToAdd_.WriteTo(output, _repeated_requestHeadersToAdd_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OverallCode != global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.Code.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OverallCode);
      }
      statuses_.WriteTo(ref output, _repeated_statuses_codec);
      headers_.WriteTo(ref output, _repeated_headers_codec);
      requestHeadersToAdd_.WriteTo(ref output, _repeated_requestHeadersToAdd_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (OverallCode != global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.Code.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OverallCode);
      }
      size += statuses_.CalculateSize(_repeated_statuses_codec);
      size += headers_.CalculateSize(_repeated_headers_codec);
      size += requestHeadersToAdd_.CalculateSize(_repeated_requestHeadersToAdd_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RateLimitResponse other) {
      if (other == null) {
        return;
      }
      if (other.OverallCode != global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.Code.Unknown) {
        OverallCode = other.OverallCode;
      }
      statuses_.Add(other.statuses_);
      headers_.Add(other.headers_);
      requestHeadersToAdd_.Add(other.requestHeadersToAdd_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OverallCode = (global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.Code) input.ReadEnum();
            break;
          }
          case 18: {
            statuses_.AddEntriesFrom(input, _repeated_statuses_codec);
            break;
          }
          case 26: {
            headers_.AddEntriesFrom(input, _repeated_headers_codec);
            break;
          }
          case 34: {
            requestHeadersToAdd_.AddEntriesFrom(input, _repeated_requestHeadersToAdd_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OverallCode = (global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.Code) input.ReadEnum();
            break;
          }
          case 18: {
            statuses_.AddEntriesFrom(ref input, _repeated_statuses_codec);
            break;
          }
          case 26: {
            headers_.AddEntriesFrom(ref input, _repeated_headers_codec);
            break;
          }
          case 34: {
            requestHeadersToAdd_.AddEntriesFrom(ref input, _repeated_requestHeadersToAdd_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RateLimitResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Code {
        /// <summary>
        /// The response code is not known.
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        /// <summary>
        /// The response code to notify that the number of requests are under limit.
        /// </summary>
        [pbr::OriginalName("OK")] Ok = 1,
        /// <summary>
        /// The response code to notify that the number of requests are over limit.
        /// </summary>
        [pbr::OriginalName("OVER_LIMIT")] OverLimit = 2,
      }

      /// <summary>
      /// Defines an actual rate limit in terms of requests per unit of time and the unit itself.
      /// </summary>
      public sealed partial class RateLimit : pb::IMessage<RateLimit>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RateLimit> _parser = new pb::MessageParser<RateLimit>(() => new RateLimit());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<RateLimit> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RateLimit() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RateLimit(RateLimit other) : this() {
          name_ = other.name_;
          requestsPerUnit_ = other.requestsPerUnit_;
          unit_ = other.unit_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RateLimit Clone() {
          return new RateLimit(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 3;
        private string name_ = "";
        /// <summary>
        /// A name or description of this limit.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "requests_per_unit" field.</summary>
        public const int RequestsPerUnitFieldNumber = 1;
        private uint requestsPerUnit_;
        /// <summary>
        /// The number of requests per unit of time.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint RequestsPerUnit {
          get { return requestsPerUnit_; }
          set {
            requestsPerUnit_ = value;
          }
        }

        /// <summary>Field number for the "unit" field.</summary>
        public const int UnitFieldNumber = 2;
        private global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.RateLimit.Types.Unit unit_ = global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.RateLimit.Types.Unit.Unknown;
        /// <summary>
        /// The unit of time.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.RateLimit.Types.Unit Unit {
          get { return unit_; }
          set {
            unit_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as RateLimit);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(RateLimit other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (RequestsPerUnit != other.RequestsPerUnit) return false;
          if (Unit != other.Unit) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (RequestsPerUnit != 0) hash ^= RequestsPerUnit.GetHashCode();
          if (Unit != global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.RateLimit.Types.Unit.Unknown) hash ^= Unit.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (RequestsPerUnit != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(RequestsPerUnit);
          }
          if (Unit != global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.RateLimit.Types.Unit.Unknown) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Unit);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (RequestsPerUnit != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(RequestsPerUnit);
          }
          if (Unit != global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.RateLimit.Types.Unit.Unknown) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Unit);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (RequestsPerUnit != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestsPerUnit);
          }
          if (Unit != global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.RateLimit.Types.Unit.Unknown) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Unit);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(RateLimit other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.RequestsPerUnit != 0) {
            RequestsPerUnit = other.RequestsPerUnit;
          }
          if (other.Unit != global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.RateLimit.Types.Unit.Unknown) {
            Unit = other.Unit;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                RequestsPerUnit = input.ReadUInt32();
                break;
              }
              case 16: {
                Unit = (global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.RateLimit.Types.Unit) input.ReadEnum();
                break;
              }
              case 26: {
                Name = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                RequestsPerUnit = input.ReadUInt32();
                break;
              }
              case 16: {
                Unit = (global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.RateLimit.Types.Unit) input.ReadEnum();
                break;
              }
              case 26: {
                Name = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the RateLimit message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          public enum Unit {
            /// <summary>
            /// The time unit is not known.
            /// </summary>
            [pbr::OriginalName("UNKNOWN")] Unknown = 0,
            /// <summary>
            /// The time unit representing a second.
            /// </summary>
            [pbr::OriginalName("SECOND")] Second = 1,
            /// <summary>
            /// The time unit representing a minute.
            /// </summary>
            [pbr::OriginalName("MINUTE")] Minute = 2,
            /// <summary>
            /// The time unit representing an hour.
            /// </summary>
            [pbr::OriginalName("HOUR")] Hour = 3,
            /// <summary>
            /// The time unit representing a day.
            /// </summary>
            [pbr::OriginalName("DAY")] Day = 4,
          }

        }
        #endregion

      }

      public sealed partial class DescriptorStatus : pb::IMessage<DescriptorStatus>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DescriptorStatus> _parser = new pb::MessageParser<DescriptorStatus>(() => new DescriptorStatus());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DescriptorStatus> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DescriptorStatus() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DescriptorStatus(DescriptorStatus other) : this() {
          code_ = other.code_;
          currentLimit_ = other.currentLimit_ != null ? other.currentLimit_.Clone() : null;
          limitRemaining_ = other.limitRemaining_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DescriptorStatus Clone() {
          return new DescriptorStatus(this);
        }

        /// <summary>Field number for the "code" field.</summary>
        public const int CodeFieldNumber = 1;
        private global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.Code code_ = global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.Code.Unknown;
        /// <summary>
        /// The response code for an individual descriptor.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.Code Code {
          get { return code_; }
          set {
            code_ = value;
          }
        }

        /// <summary>Field number for the "current_limit" field.</summary>
        public const int CurrentLimitFieldNumber = 2;
        private global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.RateLimit currentLimit_;
        /// <summary>
        /// The current limit as configured by the server. Useful for debugging, etc.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.RateLimit CurrentLimit {
          get { return currentLimit_; }
          set {
            currentLimit_ = value;
          }
        }

        /// <summary>Field number for the "limit_remaining" field.</summary>
        public const int LimitRemainingFieldNumber = 3;
        private uint limitRemaining_;
        /// <summary>
        /// The limit remaining in the current time unit.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint LimitRemaining {
          get { return limitRemaining_; }
          set {
            limitRemaining_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DescriptorStatus);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DescriptorStatus other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Code != other.Code) return false;
          if (!object.Equals(CurrentLimit, other.CurrentLimit)) return false;
          if (LimitRemaining != other.LimitRemaining) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Code != global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.Code.Unknown) hash ^= Code.GetHashCode();
          if (currentLimit_ != null) hash ^= CurrentLimit.GetHashCode();
          if (LimitRemaining != 0) hash ^= LimitRemaining.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Code != global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.Code.Unknown) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Code);
          }
          if (currentLimit_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(CurrentLimit);
          }
          if (LimitRemaining != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(LimitRemaining);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Code != global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.Code.Unknown) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Code);
          }
          if (currentLimit_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(CurrentLimit);
          }
          if (LimitRemaining != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(LimitRemaining);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Code != global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.Code.Unknown) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
          }
          if (currentLimit_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentLimit);
          }
          if (LimitRemaining != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LimitRemaining);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DescriptorStatus other) {
          if (other == null) {
            return;
          }
          if (other.Code != global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.Code.Unknown) {
            Code = other.Code;
          }
          if (other.currentLimit_ != null) {
            if (currentLimit_ == null) {
              CurrentLimit = new global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.RateLimit();
            }
            CurrentLimit.MergeFrom(other.CurrentLimit);
          }
          if (other.LimitRemaining != 0) {
            LimitRemaining = other.LimitRemaining;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Code = (global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.Code) input.ReadEnum();
                break;
              }
              case 18: {
                if (currentLimit_ == null) {
                  CurrentLimit = new global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.RateLimit();
                }
                input.ReadMessage(CurrentLimit);
                break;
              }
              case 24: {
                LimitRemaining = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Code = (global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.Code) input.ReadEnum();
                break;
              }
              case 18: {
                if (currentLimit_ == null) {
                  CurrentLimit = new global::Envoy.Service.Ratelimit.V2.RateLimitResponse.Types.RateLimit();
                }
                input.ReadMessage(CurrentLimit);
                break;
              }
              case 24: {
                LimitRemaining = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
