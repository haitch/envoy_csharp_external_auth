// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/config/filter/http/compressor/v2/compressor.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Config.Filter.Http.Compressor.V2 {

  /// <summary>Holder for reflection information generated from envoy/config/filter/http/compressor/v2/compressor.proto</summary>
  public static partial class CompressorReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/config/filter/http/compressor/v2/compressor.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CompressorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjdlbnZveS9jb25maWcvZmlsdGVyL2h0dHAvY29tcHJlc3Nvci92Mi9jb21w",
            "cmVzc29yLnByb3RvEiZlbnZveS5jb25maWcuZmlsdGVyLmh0dHAuY29tcHJl",
            "c3Nvci52MhocZW52b3kvYXBpL3YyL2NvcmUvYmFzZS5wcm90bxoeZ29vZ2xl",
            "L3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGh51ZHBhL2Fubm90YXRpb25zL21p",
            "Z3JhdGUucHJvdG8aHXVkcGEvYW5ub3RhdGlvbnMvc3RhdHVzLnByb3RvIt8B",
            "CgpDb21wcmVzc29yEjQKDmNvbnRlbnRfbGVuZ3RoGAEgASgLMhwuZ29vZ2xl",
            "LnByb3RvYnVmLlVJbnQzMlZhbHVlEhQKDGNvbnRlbnRfdHlwZRgCIAMoCRIe",
            "ChZkaXNhYmxlX29uX2V0YWdfaGVhZGVyGAMgASgIEiUKHXJlbW92ZV9hY2Nl",
            "cHRfZW5jb2RpbmdfaGVhZGVyGAQgASgIEj4KD3J1bnRpbWVfZW5hYmxlZBgF",
            "IAEoCzIlLmVudm95LmFwaS52Mi5jb3JlLlJ1bnRpbWVGZWF0dXJlRmxhZ0KE",
            "AQo0aW8uZW52b3lwcm94eS5lbnZveS5jb25maWcuZmlsdGVyLmh0dHAuY29t",
            "cHJlc3Nvci52MkIPQ29tcHJlc3NvclByb3RvUAHymP6PBS0SK2Vudm95LmV4",
            "dGVuc2lvbnMuZmlsdGVycy5odHRwLmNvbXByZXNzb3IudjO6gMjRBgIQAWIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Api.V2.Core.BaseReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Udpa.Annotations.MigrateReflection.Descriptor, global::Udpa.Annotations.StatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Filter.Http.Compressor.V2.Compressor), global::Envoy.Config.Filter.Http.Compressor.V2.Compressor.Parser, new[]{ "ContentLength", "ContentType", "DisableOnEtagHeader", "RemoveAcceptEncodingHeader", "RuntimeEnabled" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// [#next-free-field: 6]
  /// </summary>
  public sealed partial class Compressor : pb::IMessage<Compressor>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Compressor> _parser = new pb::MessageParser<Compressor>(() => new Compressor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Compressor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.Filter.Http.Compressor.V2.CompressorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Compressor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Compressor(Compressor other) : this() {
      ContentLength = other.ContentLength;
      contentType_ = other.contentType_.Clone();
      disableOnEtagHeader_ = other.disableOnEtagHeader_;
      removeAcceptEncodingHeader_ = other.removeAcceptEncodingHeader_;
      runtimeEnabled_ = other.runtimeEnabled_ != null ? other.runtimeEnabled_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Compressor Clone() {
      return new Compressor(this);
    }

    /// <summary>Field number for the "content_length" field.</summary>
    public const int ContentLengthFieldNumber = 1;
    private static readonly pb::FieldCodec<uint?> _single_contentLength_codec = pb::FieldCodec.ForStructWrapper<uint>(10);
    private uint? contentLength_;
    /// <summary>
    /// Minimum response length, in bytes, which will trigger compression. The default value is 30.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint? ContentLength {
      get { return contentLength_; }
      set {
        contentLength_ = value;
      }
    }


    /// <summary>Field number for the "content_type" field.</summary>
    public const int ContentTypeFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_contentType_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> contentType_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Set of strings that allows specifying which mime-types yield compression; e.g.,
    /// application/json, text/html, etc. When this field is not defined, compression will be applied
    /// to the following mime-types: "application/javascript", "application/json",
    /// "application/xhtml+xml", "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml"
    /// and their synonyms.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ContentType {
      get { return contentType_; }
    }

    /// <summary>Field number for the "disable_on_etag_header" field.</summary>
    public const int DisableOnEtagHeaderFieldNumber = 3;
    private bool disableOnEtagHeader_;
    /// <summary>
    /// If true, disables compression when the response contains an etag header. When it is false, the
    /// filter will preserve weak etags and remove the ones that require strong validation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisableOnEtagHeader {
      get { return disableOnEtagHeader_; }
      set {
        disableOnEtagHeader_ = value;
      }
    }

    /// <summary>Field number for the "remove_accept_encoding_header" field.</summary>
    public const int RemoveAcceptEncodingHeaderFieldNumber = 4;
    private bool removeAcceptEncodingHeader_;
    /// <summary>
    /// If true, removes accept-encoding from the request headers before dispatching it to the upstream
    /// so that responses do not get compressed before reaching the filter.
    /// .. attention:
    ///
    ///    To avoid interfering with other compression filters in the same chain use this option in
    ///    the filter closest to the upstream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RemoveAcceptEncodingHeader {
      get { return removeAcceptEncodingHeader_; }
      set {
        removeAcceptEncodingHeader_ = value;
      }
    }

    /// <summary>Field number for the "runtime_enabled" field.</summary>
    public const int RuntimeEnabledFieldNumber = 5;
    private global::Envoy.Api.V2.Core.RuntimeFeatureFlag runtimeEnabled_;
    /// <summary>
    /// Runtime flag that controls whether the filter is enabled or not. If set to false, the
    /// filter will operate as a pass-through filter. If not specified, defaults to enabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Api.V2.Core.RuntimeFeatureFlag RuntimeEnabled {
      get { return runtimeEnabled_; }
      set {
        runtimeEnabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Compressor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Compressor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContentLength != other.ContentLength) return false;
      if(!contentType_.Equals(other.contentType_)) return false;
      if (DisableOnEtagHeader != other.DisableOnEtagHeader) return false;
      if (RemoveAcceptEncodingHeader != other.RemoveAcceptEncodingHeader) return false;
      if (!object.Equals(RuntimeEnabled, other.RuntimeEnabled)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (contentLength_ != null) hash ^= ContentLength.GetHashCode();
      hash ^= contentType_.GetHashCode();
      if (DisableOnEtagHeader != false) hash ^= DisableOnEtagHeader.GetHashCode();
      if (RemoveAcceptEncodingHeader != false) hash ^= RemoveAcceptEncodingHeader.GetHashCode();
      if (runtimeEnabled_ != null) hash ^= RuntimeEnabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (contentLength_ != null) {
        _single_contentLength_codec.WriteTagAndValue(output, ContentLength);
      }
      contentType_.WriteTo(output, _repeated_contentType_codec);
      if (DisableOnEtagHeader != false) {
        output.WriteRawTag(24);
        output.WriteBool(DisableOnEtagHeader);
      }
      if (RemoveAcceptEncodingHeader != false) {
        output.WriteRawTag(32);
        output.WriteBool(RemoveAcceptEncodingHeader);
      }
      if (runtimeEnabled_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RuntimeEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (contentLength_ != null) {
        _single_contentLength_codec.WriteTagAndValue(ref output, ContentLength);
      }
      contentType_.WriteTo(ref output, _repeated_contentType_codec);
      if (DisableOnEtagHeader != false) {
        output.WriteRawTag(24);
        output.WriteBool(DisableOnEtagHeader);
      }
      if (RemoveAcceptEncodingHeader != false) {
        output.WriteRawTag(32);
        output.WriteBool(RemoveAcceptEncodingHeader);
      }
      if (runtimeEnabled_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RuntimeEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (contentLength_ != null) {
        size += _single_contentLength_codec.CalculateSizeWithTag(ContentLength);
      }
      size += contentType_.CalculateSize(_repeated_contentType_codec);
      if (DisableOnEtagHeader != false) {
        size += 1 + 1;
      }
      if (RemoveAcceptEncodingHeader != false) {
        size += 1 + 1;
      }
      if (runtimeEnabled_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RuntimeEnabled);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Compressor other) {
      if (other == null) {
        return;
      }
      if (other.contentLength_ != null) {
        if (contentLength_ == null || other.ContentLength != 0) {
          ContentLength = other.ContentLength;
        }
      }
      contentType_.Add(other.contentType_);
      if (other.DisableOnEtagHeader != false) {
        DisableOnEtagHeader = other.DisableOnEtagHeader;
      }
      if (other.RemoveAcceptEncodingHeader != false) {
        RemoveAcceptEncodingHeader = other.RemoveAcceptEncodingHeader;
      }
      if (other.runtimeEnabled_ != null) {
        if (runtimeEnabled_ == null) {
          RuntimeEnabled = new global::Envoy.Api.V2.Core.RuntimeFeatureFlag();
        }
        RuntimeEnabled.MergeFrom(other.RuntimeEnabled);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            uint? value = _single_contentLength_codec.Read(input);
            if (contentLength_ == null || value != 0) {
              ContentLength = value;
            }
            break;
          }
          case 18: {
            contentType_.AddEntriesFrom(input, _repeated_contentType_codec);
            break;
          }
          case 24: {
            DisableOnEtagHeader = input.ReadBool();
            break;
          }
          case 32: {
            RemoveAcceptEncodingHeader = input.ReadBool();
            break;
          }
          case 42: {
            if (runtimeEnabled_ == null) {
              RuntimeEnabled = new global::Envoy.Api.V2.Core.RuntimeFeatureFlag();
            }
            input.ReadMessage(RuntimeEnabled);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            uint? value = _single_contentLength_codec.Read(ref input);
            if (contentLength_ == null || value != 0) {
              ContentLength = value;
            }
            break;
          }
          case 18: {
            contentType_.AddEntriesFrom(ref input, _repeated_contentType_codec);
            break;
          }
          case 24: {
            DisableOnEtagHeader = input.ReadBool();
            break;
          }
          case 32: {
            RemoveAcceptEncodingHeader = input.ReadBool();
            break;
          }
          case 42: {
            if (runtimeEnabled_ == null) {
              RuntimeEnabled = new global::Envoy.Api.V2.Core.RuntimeFeatureFlag();
            }
            input.ReadMessage(RuntimeEnabled);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
