// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/extensions/http/original_ip_detection/custom_header/v3/custom_header.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Extensions.Http.OriginalIpDetection.CustomHeader.V3 {

  /// <summary>Holder for reflection information generated from envoy/extensions/http/original_ip_detection/custom_header/v3/custom_header.proto</summary>
  public static partial class CustomHeaderReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/extensions/http/original_ip_detection/custom_header/v3/custom_header.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CustomHeaderReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ClBlbnZveS9leHRlbnNpb25zL2h0dHAvb3JpZ2luYWxfaXBfZGV0ZWN0aW9u",
            "L2N1c3RvbV9oZWFkZXIvdjMvY3VzdG9tX2hlYWRlci5wcm90bxI8ZW52b3ku",
            "ZXh0ZW5zaW9ucy5odHRwLm9yaWdpbmFsX2lwX2RldGVjdGlvbi5jdXN0b21f",
            "aGVhZGVyLnYzGh9lbnZveS90eXBlL3YzL2h0dHBfc3RhdHVzLnByb3RvGh11",
            "ZHBhL2Fubm90YXRpb25zL3N0YXR1cy5wcm90bxoXdmFsaWRhdGUvdmFsaWRh",
            "dGUucHJvdG8iogEKEkN1c3RvbUhlYWRlckNvbmZpZxIiCgtoZWFkZXJfbmFt",
            "ZRgBIAEoCUIN+kIKcggQAcABAcgBARIxCilhbGxvd19leHRlbnNpb25fdG9f",
            "c2V0X2FkZHJlc3NfYXNfdHJ1c3RlZBgCIAEoCBI1ChJyZWplY3Rfd2l0aF9z",
            "dGF0dXMYAyABKAsyGS5lbnZveS50eXBlLnYzLkh0dHBTdGF0dXNCaQpKaW8u",
            "ZW52b3lwcm94eS5lbnZveS5leHRlbnNpb25zLmh0dHAub3JpZ2luYWxfaXBf",
            "ZGV0ZWN0aW9uLmN1c3RvbV9oZWFkZXIudjNCEUN1c3RvbUhlYWRlclByb3Rv",
            "UAG6gMjRBgIQAmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Type.V3.HttpStatusReflection.Descriptor, global::Udpa.Annotations.StatusReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Extensions.Http.OriginalIpDetection.CustomHeader.V3.CustomHeaderConfig), global::Envoy.Extensions.Http.OriginalIpDetection.CustomHeader.V3.CustomHeaderConfig.Parser, new[]{ "HeaderName", "AllowExtensionToSetAddressAsTrusted", "RejectWithStatus" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// This extension allows for the original downstream remote IP to be detected
  /// by reading the value from a configured header name. If the value is successfully parsed
  /// as an IP, it'll be treated as the effective downstream remote address and seen as such
  /// by all filters. See :ref:`original_ip_detection_extensions
  /// &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.original_ip_detection_extensions>`
  /// for an overview of how extensions operate and what happens when an extension fails
  /// to detect the remote IP.
  ///
  /// [#extension: envoy.http.original_ip_detection.custom_header]
  /// </summary>
  public sealed partial class CustomHeaderConfig : pb::IMessage<CustomHeaderConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CustomHeaderConfig> _parser = new pb::MessageParser<CustomHeaderConfig>(() => new CustomHeaderConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CustomHeaderConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Extensions.Http.OriginalIpDetection.CustomHeader.V3.CustomHeaderReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CustomHeaderConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CustomHeaderConfig(CustomHeaderConfig other) : this() {
      headerName_ = other.headerName_;
      allowExtensionToSetAddressAsTrusted_ = other.allowExtensionToSetAddressAsTrusted_;
      rejectWithStatus_ = other.rejectWithStatus_ != null ? other.rejectWithStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CustomHeaderConfig Clone() {
      return new CustomHeaderConfig(this);
    }

    /// <summary>Field number for the "header_name" field.</summary>
    public const int HeaderNameFieldNumber = 1;
    private string headerName_ = "";
    /// <summary>
    /// The header name containing the original downstream remote address, if present.
    ///
    /// Note: in the case of a multi-valued header, only the first value is tried and the rest are ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HeaderName {
      get { return headerName_; }
      set {
        headerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "allow_extension_to_set_address_as_trusted" field.</summary>
    public const int AllowExtensionToSetAddressAsTrustedFieldNumber = 2;
    private bool allowExtensionToSetAddressAsTrusted_;
    /// <summary>
    /// If set to true, the extension could decide that the detected address should be treated as
    /// trusted by the HCM. If the address is considered :ref:`trusted&lt;config_http_conn_man_headers_x-forwarded-for_trusted_client_address>`,
    /// it might be used as input to determine if the request is internal (among other things).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AllowExtensionToSetAddressAsTrusted {
      get { return allowExtensionToSetAddressAsTrusted_; }
      set {
        allowExtensionToSetAddressAsTrusted_ = value;
      }
    }

    /// <summary>Field number for the "reject_with_status" field.</summary>
    public const int RejectWithStatusFieldNumber = 3;
    private global::Envoy.Type.V3.HttpStatus rejectWithStatus_;
    /// <summary>
    /// If this is set, the request will be rejected when detection fails using it as the HTTP response status.
    ///
    /// .. note::
    ///   If this is set to &lt; 400 or > 511, the default status 403 will be used instead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Type.V3.HttpStatus RejectWithStatus {
      get { return rejectWithStatus_; }
      set {
        rejectWithStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CustomHeaderConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CustomHeaderConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeaderName != other.HeaderName) return false;
      if (AllowExtensionToSetAddressAsTrusted != other.AllowExtensionToSetAddressAsTrusted) return false;
      if (!object.Equals(RejectWithStatus, other.RejectWithStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HeaderName.Length != 0) hash ^= HeaderName.GetHashCode();
      if (AllowExtensionToSetAddressAsTrusted != false) hash ^= AllowExtensionToSetAddressAsTrusted.GetHashCode();
      if (rejectWithStatus_ != null) hash ^= RejectWithStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HeaderName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HeaderName);
      }
      if (AllowExtensionToSetAddressAsTrusted != false) {
        output.WriteRawTag(16);
        output.WriteBool(AllowExtensionToSetAddressAsTrusted);
      }
      if (rejectWithStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RejectWithStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HeaderName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HeaderName);
      }
      if (AllowExtensionToSetAddressAsTrusted != false) {
        output.WriteRawTag(16);
        output.WriteBool(AllowExtensionToSetAddressAsTrusted);
      }
      if (rejectWithStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RejectWithStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HeaderName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HeaderName);
      }
      if (AllowExtensionToSetAddressAsTrusted != false) {
        size += 1 + 1;
      }
      if (rejectWithStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RejectWithStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CustomHeaderConfig other) {
      if (other == null) {
        return;
      }
      if (other.HeaderName.Length != 0) {
        HeaderName = other.HeaderName;
      }
      if (other.AllowExtensionToSetAddressAsTrusted != false) {
        AllowExtensionToSetAddressAsTrusted = other.AllowExtensionToSetAddressAsTrusted;
      }
      if (other.rejectWithStatus_ != null) {
        if (rejectWithStatus_ == null) {
          RejectWithStatus = new global::Envoy.Type.V3.HttpStatus();
        }
        RejectWithStatus.MergeFrom(other.RejectWithStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HeaderName = input.ReadString();
            break;
          }
          case 16: {
            AllowExtensionToSetAddressAsTrusted = input.ReadBool();
            break;
          }
          case 26: {
            if (rejectWithStatus_ == null) {
              RejectWithStatus = new global::Envoy.Type.V3.HttpStatus();
            }
            input.ReadMessage(RejectWithStatus);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            HeaderName = input.ReadString();
            break;
          }
          case 16: {
            AllowExtensionToSetAddressAsTrusted = input.ReadBool();
            break;
          }
          case 26: {
            if (rejectWithStatus_ == null) {
              RejectWithStatus = new global::Envoy.Type.V3.HttpStatus();
            }
            input.ReadMessage(RejectWithStatus);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
