// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/data/dns/v3/dns_table.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Data.Dns.V3 {

  /// <summary>Holder for reflection information generated from envoy/data/dns/v3/dns_table.proto</summary>
  public static partial class DnsTableReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/data/dns/v3/dns_table.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DnsTableReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFlbnZveS9kYXRhL2Rucy92My9kbnNfdGFibGUucHJvdG8SEWVudm95LmRh",
            "dGEuZG5zLnYzGiJlbnZveS90eXBlL21hdGNoZXIvdjMvc3RyaW5nLnByb3Rv",
            "Gh5nb29nbGUvcHJvdG9idWYvZHVyYXRpb24ucHJvdG8aI2Vudm95L2Fubm90",
            "YXRpb25zL2RlcHJlY2F0aW9uLnByb3RvGh11ZHBhL2Fubm90YXRpb25zL3N0",
            "YXR1cy5wcm90bxohdWRwYS9hbm5vdGF0aW9ucy92ZXJzaW9uaW5nLnByb3Rv",
            "Ghd2YWxpZGF0ZS92YWxpZGF0ZS5wcm90byKTCwoIRG5zVGFibGUSJQoUZXh0",
            "ZXJuYWxfcmV0cnlfY291bnQYASABKA1CB/pCBCoCGAMSRQoPdmlydHVhbF9k",
            "b21haW5zGAIgAygLMiwuZW52b3kuZGF0YS5kbnMudjMuRG5zVGFibGUuRG5z",
            "VmlydHVhbERvbWFpbhJJCg5rbm93bl9zdWZmaXhlcxgDIAMoCzIkLmVudm95",
            "LnR5cGUubWF0Y2hlci52My5TdHJpbmdNYXRjaGVyQgsYAZLHhtgEAzMuMBpi",
            "CgtBZGRyZXNzTGlzdBIfCgdhZGRyZXNzGAEgAygJQg76QguSAQgIASIEcgIQ",
            "AzoymsWIHi0KK2Vudm95LmRhdGEuZG5zLnYyYWxwaGEuRG5zVGFibGUuQWRk",
            "cmVzc0xpc3QaZAoSRG5zU2VydmljZVByb3RvY29sEhoKBm51bWJlchgBIAEo",
            "DUII+kIFKgMQ/wFIABIaCgRuYW1lGAIgASgJQgr6QgdyBRABwAEBSABCFgoP",
            "cHJvdG9jb2xfY29uZmlnEgP4QgEavgEKEERuc1NlcnZpY2VUYXJnZXQSHwoJ",
            "aG9zdF9uYW1lGAEgASgJQgr6QgdyBRABwAEBSAASIgoMY2x1c3Rlcl9uYW1l",
            "GAIgASgJQgr6QgdyBRABwAEBSAASGwoIcHJpb3JpdHkYAyABKA1CCfpCBioE",
            "EICABBIZCgZ3ZWlnaHQYBCABKA1CCfpCBioEEICABBIXCgRwb3J0GAUgASgN",
            "Qgn6QgYqBBCAgARCFAoNZW5kcG9pbnRfdHlwZRID+EIBGu0BCgpEbnNTZXJ2",
            "aWNlEiAKDHNlcnZpY2VfbmFtZRgBIAEoCUIK+kIHcgUQAcABARJACghwcm90",
            "b2NvbBgCIAEoCzIuLmVudm95LmRhdGEuZG5zLnYzLkRuc1RhYmxlLkRuc1Nl",
            "cnZpY2VQcm90b2NvbBIyCgN0dGwYAyABKAsyGS5nb29nbGUucHJvdG9idWYu",
            "RHVyYXRpb25CCvpCB6oBBDICCAESRwoHdGFyZ2V0cxgEIAMoCzIsLmVudm95",
            "LmRhdGEuZG5zLnYzLkRuc1RhYmxlLkRuc1NlcnZpY2VUYXJnZXRCCPpCBZIB",
            "AggBGlQKDkRuc1NlcnZpY2VMaXN0EkIKCHNlcnZpY2VzGAEgAygLMiYuZW52",
            "b3kuZGF0YS5kbnMudjMuRG5zVGFibGUuRG5zU2VydmljZUII+kIFkgECCAEa",
            "9gEKC0Ruc0VuZHBvaW50Ej8KDGFkZHJlc3NfbGlzdBgBIAEoCzInLmVudm95",
            "LmRhdGEuZG5zLnYzLkRuc1RhYmxlLkFkZHJlc3NMaXN0SAASFgoMY2x1c3Rl",
            "cl9uYW1lGAIgASgJSAASQgoMc2VydmljZV9saXN0GAMgASgLMiouZW52b3ku",
            "ZGF0YS5kbnMudjMuRG5zVGFibGUuRG5zU2VydmljZUxpc3RIADoymsWIHi0K",
            "K2Vudm95LmRhdGEuZG5zLnYyYWxwaGEuRG5zVGFibGUuRG5zRW5kcG9pbnRC",
            "FgoPZW5kcG9pbnRfY29uZmlnEgP4QgEa2wEKEERuc1ZpcnR1YWxEb21haW4S",
            "GAoEbmFtZRgBIAEoCUIK+kIHcgUQAcABARI5CghlbmRwb2ludBgCIAEoCzIn",
            "LmVudm95LmRhdGEuZG5zLnYzLkRuc1RhYmxlLkRuc0VuZHBvaW50EjkKCmFu",
            "c3dlcl90dGwYAyABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb25CCvpC",
            "B6oBBDICCB46N5rFiB4yCjBlbnZveS5kYXRhLmRucy52MmFscGhhLkRuc1Rh",
            "YmxlLkRuc1ZpcnR1YWxEb21haW46JprFiB4hCh9lbnZveS5kYXRhLmRucy52",
            "MmFscGhhLkRuc1RhYmxlQjoKH2lvLmVudm95cHJveHkuZW52b3kuZGF0YS5k",
            "bnMudjNCDURuc1RhYmxlUHJvdG9QAbqAyNEGAhACYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Type.Matcher.V3.StringReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Envoy.Annotations.DeprecationReflection.Descriptor, global::Udpa.Annotations.StatusReflection.Descriptor, global::Udpa.Annotations.VersioningReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Dns.V3.DnsTable), global::Envoy.Data.Dns.V3.DnsTable.Parser, new[]{ "ExternalRetryCount", "VirtualDomains", "KnownSuffixes" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Dns.V3.DnsTable.Types.AddressList), global::Envoy.Data.Dns.V3.DnsTable.Types.AddressList.Parser, new[]{ "Address" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceProtocol), global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceProtocol.Parser, new[]{ "Number", "Name" }, new[]{ "ProtocolConfig" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceTarget), global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceTarget.Parser, new[]{ "HostName", "ClusterName", "Priority", "Weight", "Port" }, new[]{ "EndpointType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Dns.V3.DnsTable.Types.DnsService), global::Envoy.Data.Dns.V3.DnsTable.Types.DnsService.Parser, new[]{ "ServiceName", "Protocol", "Ttl", "Targets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceList), global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceList.Parser, new[]{ "Services" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Dns.V3.DnsTable.Types.DnsEndpoint), global::Envoy.Data.Dns.V3.DnsTable.Types.DnsEndpoint.Parser, new[]{ "AddressList", "ClusterName", "ServiceList" }, new[]{ "EndpointConfig" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Dns.V3.DnsTable.Types.DnsVirtualDomain), global::Envoy.Data.Dns.V3.DnsTable.Types.DnsVirtualDomain.Parser, new[]{ "Name", "Endpoint", "AnswerTtl" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// This message contains the configuration for the DNS Filter if populated
  /// from the control plane
  /// </summary>
  public sealed partial class DnsTable : pb::IMessage<DnsTable>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DnsTable> _parser = new pb::MessageParser<DnsTable>(() => new DnsTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DnsTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Data.Dns.V3.DnsTableReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DnsTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DnsTable(DnsTable other) : this() {
      externalRetryCount_ = other.externalRetryCount_;
      virtualDomains_ = other.virtualDomains_.Clone();
      knownSuffixes_ = other.knownSuffixes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DnsTable Clone() {
      return new DnsTable(this);
    }

    /// <summary>Field number for the "external_retry_count" field.</summary>
    public const int ExternalRetryCountFieldNumber = 1;
    private uint externalRetryCount_;
    /// <summary>
    /// Control how many times Envoy makes an attempt to forward a query to an external DNS server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ExternalRetryCount {
      get { return externalRetryCount_; }
      set {
        externalRetryCount_ = value;
      }
    }

    /// <summary>Field number for the "virtual_domains" field.</summary>
    public const int VirtualDomainsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Envoy.Data.Dns.V3.DnsTable.Types.DnsVirtualDomain> _repeated_virtualDomains_codec
        = pb::FieldCodec.ForMessage(18, global::Envoy.Data.Dns.V3.DnsTable.Types.DnsVirtualDomain.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Data.Dns.V3.DnsTable.Types.DnsVirtualDomain> virtualDomains_ = new pbc::RepeatedField<global::Envoy.Data.Dns.V3.DnsTable.Types.DnsVirtualDomain>();
    /// <summary>
    /// Fully qualified domain names for which Envoy will respond to DNS queries. By leaving this
    /// list empty, Envoy will forward all queries to external resolvers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Data.Dns.V3.DnsTable.Types.DnsVirtualDomain> VirtualDomains {
      get { return virtualDomains_; }
    }

    /// <summary>Field number for the "known_suffixes" field.</summary>
    public const int KnownSuffixesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Envoy.Type.Matcher.V3.StringMatcher> _repeated_knownSuffixes_codec
        = pb::FieldCodec.ForMessage(26, global::Envoy.Type.Matcher.V3.StringMatcher.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Type.Matcher.V3.StringMatcher> knownSuffixes_ = new pbc::RepeatedField<global::Envoy.Type.Matcher.V3.StringMatcher>();
    /// <summary>
    /// This field is deprecated and no longer used in Envoy. The filter's behavior has changed
    /// internally to use a different data structure allowing the filter to determine whether a
    /// query is for known domain without the use of this field.
    ///
    /// This field serves to help Envoy determine whether it can authoritatively answer a query
    /// for a name matching a suffix in this list. If the query name does not match a suffix in
    /// this list, Envoy will forward the query to an upstream DNS server
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Type.Matcher.V3.StringMatcher> KnownSuffixes {
      get { return knownSuffixes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DnsTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DnsTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExternalRetryCount != other.ExternalRetryCount) return false;
      if(!virtualDomains_.Equals(other.virtualDomains_)) return false;
      if(!knownSuffixes_.Equals(other.knownSuffixes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ExternalRetryCount != 0) hash ^= ExternalRetryCount.GetHashCode();
      hash ^= virtualDomains_.GetHashCode();
      hash ^= knownSuffixes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ExternalRetryCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ExternalRetryCount);
      }
      virtualDomains_.WriteTo(output, _repeated_virtualDomains_codec);
      knownSuffixes_.WriteTo(output, _repeated_knownSuffixes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ExternalRetryCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ExternalRetryCount);
      }
      virtualDomains_.WriteTo(ref output, _repeated_virtualDomains_codec);
      knownSuffixes_.WriteTo(ref output, _repeated_knownSuffixes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ExternalRetryCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExternalRetryCount);
      }
      size += virtualDomains_.CalculateSize(_repeated_virtualDomains_codec);
      size += knownSuffixes_.CalculateSize(_repeated_knownSuffixes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DnsTable other) {
      if (other == null) {
        return;
      }
      if (other.ExternalRetryCount != 0) {
        ExternalRetryCount = other.ExternalRetryCount;
      }
      virtualDomains_.Add(other.virtualDomains_);
      knownSuffixes_.Add(other.knownSuffixes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ExternalRetryCount = input.ReadUInt32();
            break;
          }
          case 18: {
            virtualDomains_.AddEntriesFrom(input, _repeated_virtualDomains_codec);
            break;
          }
          case 26: {
            knownSuffixes_.AddEntriesFrom(input, _repeated_knownSuffixes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ExternalRetryCount = input.ReadUInt32();
            break;
          }
          case 18: {
            virtualDomains_.AddEntriesFrom(ref input, _repeated_virtualDomains_codec);
            break;
          }
          case 26: {
            knownSuffixes_.AddEntriesFrom(ref input, _repeated_knownSuffixes_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DnsTable message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// This message contains a list of IP addresses returned for a query for a known name
      /// </summary>
      public sealed partial class AddressList : pb::IMessage<AddressList>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AddressList> _parser = new pb::MessageParser<AddressList>(() => new AddressList());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<AddressList> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Data.Dns.V3.DnsTable.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AddressList() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AddressList(AddressList other) : this() {
          address_ = other.address_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AddressList Clone() {
          return new AddressList(this);
        }

        /// <summary>Field number for the "address" field.</summary>
        public const int AddressFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_address_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> address_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// This field contains a well formed IP address that is returned in the answer for a
        /// name query. The address field can be an IPv4 or IPv6 address. Address family
        /// detection is done automatically when Envoy parses the string. Since this field is
        /// repeated, Envoy will return as many entries from this list in the DNS response while
        /// keeping the response under 512 bytes
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Address {
          get { return address_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as AddressList);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(AddressList other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!address_.Equals(other.address_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= address_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          address_.WriteTo(output, _repeated_address_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          address_.WriteTo(ref output, _repeated_address_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += address_.CalculateSize(_repeated_address_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(AddressList other) {
          if (other == null) {
            return;
          }
          address_.Add(other.address_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                address_.AddEntriesFrom(input, _repeated_address_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                address_.AddEntriesFrom(ref input, _repeated_address_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Specify the service protocol using a numeric or string value
      /// </summary>
      public sealed partial class DnsServiceProtocol : pb::IMessage<DnsServiceProtocol>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DnsServiceProtocol> _parser = new pb::MessageParser<DnsServiceProtocol>(() => new DnsServiceProtocol());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DnsServiceProtocol> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Data.Dns.V3.DnsTable.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DnsServiceProtocol() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DnsServiceProtocol(DnsServiceProtocol other) : this() {
          switch (other.ProtocolConfigCase) {
            case ProtocolConfigOneofCase.Number:
              Number = other.Number;
              break;
            case ProtocolConfigOneofCase.Name:
              Name = other.Name;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DnsServiceProtocol Clone() {
          return new DnsServiceProtocol(this);
        }

        /// <summary>Field number for the "number" field.</summary>
        public const int NumberFieldNumber = 1;
        /// <summary>
        /// Specify the protocol number for the service. Envoy will try to resolve the number to
        /// the protocol name. For example, 6 will resolve to "tcp". Refer to:
        /// https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
        /// for protocol names and numbers
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Number {
          get { return protocolConfigCase_ == ProtocolConfigOneofCase.Number ? (uint) protocolConfig_ : 0; }
          set {
            protocolConfig_ = value;
            protocolConfigCase_ = ProtocolConfigOneofCase.Number;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        /// <summary>
        /// Specify the protocol name for the service.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return protocolConfigCase_ == ProtocolConfigOneofCase.Name ? (string) protocolConfig_ : ""; }
          set {
            protocolConfig_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            protocolConfigCase_ = ProtocolConfigOneofCase.Name;
          }
        }

        private object protocolConfig_;
        /// <summary>Enum of possible cases for the "protocol_config" oneof.</summary>
        public enum ProtocolConfigOneofCase {
          None = 0,
          Number = 1,
          Name = 2,
        }
        private ProtocolConfigOneofCase protocolConfigCase_ = ProtocolConfigOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ProtocolConfigOneofCase ProtocolConfigCase {
          get { return protocolConfigCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearProtocolConfig() {
          protocolConfigCase_ = ProtocolConfigOneofCase.None;
          protocolConfig_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DnsServiceProtocol);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DnsServiceProtocol other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Number != other.Number) return false;
          if (Name != other.Name) return false;
          if (ProtocolConfigCase != other.ProtocolConfigCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (protocolConfigCase_ == ProtocolConfigOneofCase.Number) hash ^= Number.GetHashCode();
          if (protocolConfigCase_ == ProtocolConfigOneofCase.Name) hash ^= Name.GetHashCode();
          hash ^= (int) protocolConfigCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (protocolConfigCase_ == ProtocolConfigOneofCase.Number) {
            output.WriteRawTag(8);
            output.WriteUInt32(Number);
          }
          if (protocolConfigCase_ == ProtocolConfigOneofCase.Name) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (protocolConfigCase_ == ProtocolConfigOneofCase.Number) {
            output.WriteRawTag(8);
            output.WriteUInt32(Number);
          }
          if (protocolConfigCase_ == ProtocolConfigOneofCase.Name) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (protocolConfigCase_ == ProtocolConfigOneofCase.Number) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Number);
          }
          if (protocolConfigCase_ == ProtocolConfigOneofCase.Name) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DnsServiceProtocol other) {
          if (other == null) {
            return;
          }
          switch (other.ProtocolConfigCase) {
            case ProtocolConfigOneofCase.Number:
              Number = other.Number;
              break;
            case ProtocolConfigOneofCase.Name:
              Name = other.Name;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Number = input.ReadUInt32();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Number = input.ReadUInt32();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Specify the target for a given DNS service
      /// [#next-free-field: 6]
      /// </summary>
      public sealed partial class DnsServiceTarget : pb::IMessage<DnsServiceTarget>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DnsServiceTarget> _parser = new pb::MessageParser<DnsServiceTarget>(() => new DnsServiceTarget());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DnsServiceTarget> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Data.Dns.V3.DnsTable.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DnsServiceTarget() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DnsServiceTarget(DnsServiceTarget other) : this() {
          priority_ = other.priority_;
          weight_ = other.weight_;
          port_ = other.port_;
          switch (other.EndpointTypeCase) {
            case EndpointTypeOneofCase.HostName:
              HostName = other.HostName;
              break;
            case EndpointTypeOneofCase.ClusterName:
              ClusterName = other.ClusterName;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DnsServiceTarget Clone() {
          return new DnsServiceTarget(this);
        }

        /// <summary>Field number for the "host_name" field.</summary>
        public const int HostNameFieldNumber = 1;
        /// <summary>
        /// Use a resolvable hostname as the endpoint for a service.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string HostName {
          get { return endpointTypeCase_ == EndpointTypeOneofCase.HostName ? (string) endpointType_ : ""; }
          set {
            endpointType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            endpointTypeCase_ = EndpointTypeOneofCase.HostName;
          }
        }

        /// <summary>Field number for the "cluster_name" field.</summary>
        public const int ClusterNameFieldNumber = 2;
        /// <summary>
        /// Use a cluster name as the endpoint for a service.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ClusterName {
          get { return endpointTypeCase_ == EndpointTypeOneofCase.ClusterName ? (string) endpointType_ : ""; }
          set {
            endpointType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            endpointTypeCase_ = EndpointTypeOneofCase.ClusterName;
          }
        }

        /// <summary>Field number for the "priority" field.</summary>
        public const int PriorityFieldNumber = 3;
        private uint priority_;
        /// <summary>
        /// The priority of the service record target
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Priority {
          get { return priority_; }
          set {
            priority_ = value;
          }
        }

        /// <summary>Field number for the "weight" field.</summary>
        public const int WeightFieldNumber = 4;
        private uint weight_;
        /// <summary>
        /// The weight of the service record target
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Weight {
          get { return weight_; }
          set {
            weight_ = value;
          }
        }

        /// <summary>Field number for the "port" field.</summary>
        public const int PortFieldNumber = 5;
        private uint port_;
        /// <summary>
        /// The port to which the service is bound. This value is optional if the target is a
        /// cluster. Setting port to zero in this case makes the filter use the port value
        /// from the cluster host
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Port {
          get { return port_; }
          set {
            port_ = value;
          }
        }

        private object endpointType_;
        /// <summary>Enum of possible cases for the "endpoint_type" oneof.</summary>
        public enum EndpointTypeOneofCase {
          None = 0,
          HostName = 1,
          ClusterName = 2,
        }
        private EndpointTypeOneofCase endpointTypeCase_ = EndpointTypeOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public EndpointTypeOneofCase EndpointTypeCase {
          get { return endpointTypeCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearEndpointType() {
          endpointTypeCase_ = EndpointTypeOneofCase.None;
          endpointType_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DnsServiceTarget);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DnsServiceTarget other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (HostName != other.HostName) return false;
          if (ClusterName != other.ClusterName) return false;
          if (Priority != other.Priority) return false;
          if (Weight != other.Weight) return false;
          if (Port != other.Port) return false;
          if (EndpointTypeCase != other.EndpointTypeCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (endpointTypeCase_ == EndpointTypeOneofCase.HostName) hash ^= HostName.GetHashCode();
          if (endpointTypeCase_ == EndpointTypeOneofCase.ClusterName) hash ^= ClusterName.GetHashCode();
          if (Priority != 0) hash ^= Priority.GetHashCode();
          if (Weight != 0) hash ^= Weight.GetHashCode();
          if (Port != 0) hash ^= Port.GetHashCode();
          hash ^= (int) endpointTypeCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (endpointTypeCase_ == EndpointTypeOneofCase.HostName) {
            output.WriteRawTag(10);
            output.WriteString(HostName);
          }
          if (endpointTypeCase_ == EndpointTypeOneofCase.ClusterName) {
            output.WriteRawTag(18);
            output.WriteString(ClusterName);
          }
          if (Priority != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(Priority);
          }
          if (Weight != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(Weight);
          }
          if (Port != 0) {
            output.WriteRawTag(40);
            output.WriteUInt32(Port);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (endpointTypeCase_ == EndpointTypeOneofCase.HostName) {
            output.WriteRawTag(10);
            output.WriteString(HostName);
          }
          if (endpointTypeCase_ == EndpointTypeOneofCase.ClusterName) {
            output.WriteRawTag(18);
            output.WriteString(ClusterName);
          }
          if (Priority != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(Priority);
          }
          if (Weight != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(Weight);
          }
          if (Port != 0) {
            output.WriteRawTag(40);
            output.WriteUInt32(Port);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (endpointTypeCase_ == EndpointTypeOneofCase.HostName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HostName);
          }
          if (endpointTypeCase_ == EndpointTypeOneofCase.ClusterName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterName);
          }
          if (Priority != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Priority);
          }
          if (Weight != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Weight);
          }
          if (Port != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DnsServiceTarget other) {
          if (other == null) {
            return;
          }
          if (other.Priority != 0) {
            Priority = other.Priority;
          }
          if (other.Weight != 0) {
            Weight = other.Weight;
          }
          if (other.Port != 0) {
            Port = other.Port;
          }
          switch (other.EndpointTypeCase) {
            case EndpointTypeOneofCase.HostName:
              HostName = other.HostName;
              break;
            case EndpointTypeOneofCase.ClusterName:
              ClusterName = other.ClusterName;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                HostName = input.ReadString();
                break;
              }
              case 18: {
                ClusterName = input.ReadString();
                break;
              }
              case 24: {
                Priority = input.ReadUInt32();
                break;
              }
              case 32: {
                Weight = input.ReadUInt32();
                break;
              }
              case 40: {
                Port = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                HostName = input.ReadString();
                break;
              }
              case 18: {
                ClusterName = input.ReadString();
                break;
              }
              case 24: {
                Priority = input.ReadUInt32();
                break;
              }
              case 32: {
                Weight = input.ReadUInt32();
                break;
              }
              case 40: {
                Port = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// This message defines a service selection record returned for a service query in a domain
      /// </summary>
      public sealed partial class DnsService : pb::IMessage<DnsService>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DnsService> _parser = new pb::MessageParser<DnsService>(() => new DnsService());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DnsService> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Data.Dns.V3.DnsTable.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DnsService() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DnsService(DnsService other) : this() {
          serviceName_ = other.serviceName_;
          protocol_ = other.protocol_ != null ? other.protocol_.Clone() : null;
          ttl_ = other.ttl_ != null ? other.ttl_.Clone() : null;
          targets_ = other.targets_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DnsService Clone() {
          return new DnsService(this);
        }

        /// <summary>Field number for the "service_name" field.</summary>
        public const int ServiceNameFieldNumber = 1;
        private string serviceName_ = "";
        /// <summary>
        /// The name of the service without the protocol or domain name
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ServiceName {
          get { return serviceName_; }
          set {
            serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "protocol" field.</summary>
        public const int ProtocolFieldNumber = 2;
        private global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceProtocol protocol_;
        /// <summary>
        /// The service protocol. This can be specified as a string or the numeric value of the protocol
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceProtocol Protocol {
          get { return protocol_; }
          set {
            protocol_ = value;
          }
        }

        /// <summary>Field number for the "ttl" field.</summary>
        public const int TtlFieldNumber = 3;
        private global::Google.Protobuf.WellKnownTypes.Duration ttl_;
        /// <summary>
        /// The service entry time to live. This is independent from the DNS Answer record TTL
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Duration Ttl {
          get { return ttl_; }
          set {
            ttl_ = value;
          }
        }

        /// <summary>Field number for the "targets" field.</summary>
        public const int TargetsFieldNumber = 4;
        private static readonly pb::FieldCodec<global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceTarget> _repeated_targets_codec
            = pb::FieldCodec.ForMessage(34, global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceTarget.Parser);
        private readonly pbc::RepeatedField<global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceTarget> targets_ = new pbc::RepeatedField<global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceTarget>();
        /// <summary>
        /// The list of targets hosting the service
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceTarget> Targets {
          get { return targets_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DnsService);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DnsService other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ServiceName != other.ServiceName) return false;
          if (!object.Equals(Protocol, other.Protocol)) return false;
          if (!object.Equals(Ttl, other.Ttl)) return false;
          if(!targets_.Equals(other.targets_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
          if (protocol_ != null) hash ^= Protocol.GetHashCode();
          if (ttl_ != null) hash ^= Ttl.GetHashCode();
          hash ^= targets_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ServiceName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ServiceName);
          }
          if (protocol_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Protocol);
          }
          if (ttl_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Ttl);
          }
          targets_.WriteTo(output, _repeated_targets_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ServiceName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ServiceName);
          }
          if (protocol_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Protocol);
          }
          if (ttl_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Ttl);
          }
          targets_.WriteTo(ref output, _repeated_targets_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (ServiceName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
          }
          if (protocol_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Protocol);
          }
          if (ttl_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ttl);
          }
          size += targets_.CalculateSize(_repeated_targets_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DnsService other) {
          if (other == null) {
            return;
          }
          if (other.ServiceName.Length != 0) {
            ServiceName = other.ServiceName;
          }
          if (other.protocol_ != null) {
            if (protocol_ == null) {
              Protocol = new global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceProtocol();
            }
            Protocol.MergeFrom(other.Protocol);
          }
          if (other.ttl_ != null) {
            if (ttl_ == null) {
              Ttl = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            Ttl.MergeFrom(other.Ttl);
          }
          targets_.Add(other.targets_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ServiceName = input.ReadString();
                break;
              }
              case 18: {
                if (protocol_ == null) {
                  Protocol = new global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceProtocol();
                }
                input.ReadMessage(Protocol);
                break;
              }
              case 26: {
                if (ttl_ == null) {
                  Ttl = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                input.ReadMessage(Ttl);
                break;
              }
              case 34: {
                targets_.AddEntriesFrom(input, _repeated_targets_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                ServiceName = input.ReadString();
                break;
              }
              case 18: {
                if (protocol_ == null) {
                  Protocol = new global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceProtocol();
                }
                input.ReadMessage(Protocol);
                break;
              }
              case 26: {
                if (ttl_ == null) {
                  Ttl = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                input.ReadMessage(Ttl);
                break;
              }
              case 34: {
                targets_.AddEntriesFrom(ref input, _repeated_targets_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Define a list of service records for a given service
      /// </summary>
      public sealed partial class DnsServiceList : pb::IMessage<DnsServiceList>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DnsServiceList> _parser = new pb::MessageParser<DnsServiceList>(() => new DnsServiceList());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DnsServiceList> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Data.Dns.V3.DnsTable.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DnsServiceList() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DnsServiceList(DnsServiceList other) : this() {
          services_ = other.services_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DnsServiceList Clone() {
          return new DnsServiceList(this);
        }

        /// <summary>Field number for the "services" field.</summary>
        public const int ServicesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Envoy.Data.Dns.V3.DnsTable.Types.DnsService> _repeated_services_codec
            = pb::FieldCodec.ForMessage(10, global::Envoy.Data.Dns.V3.DnsTable.Types.DnsService.Parser);
        private readonly pbc::RepeatedField<global::Envoy.Data.Dns.V3.DnsTable.Types.DnsService> services_ = new pbc::RepeatedField<global::Envoy.Data.Dns.V3.DnsTable.Types.DnsService>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Envoy.Data.Dns.V3.DnsTable.Types.DnsService> Services {
          get { return services_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DnsServiceList);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DnsServiceList other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!services_.Equals(other.services_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= services_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          services_.WriteTo(output, _repeated_services_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          services_.WriteTo(ref output, _repeated_services_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += services_.CalculateSize(_repeated_services_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DnsServiceList other) {
          if (other == null) {
            return;
          }
          services_.Add(other.services_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                services_.AddEntriesFrom(input, _repeated_services_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                services_.AddEntriesFrom(ref input, _repeated_services_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class DnsEndpoint : pb::IMessage<DnsEndpoint>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DnsEndpoint> _parser = new pb::MessageParser<DnsEndpoint>(() => new DnsEndpoint());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DnsEndpoint> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Data.Dns.V3.DnsTable.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DnsEndpoint() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DnsEndpoint(DnsEndpoint other) : this() {
          switch (other.EndpointConfigCase) {
            case EndpointConfigOneofCase.AddressList:
              AddressList = other.AddressList.Clone();
              break;
            case EndpointConfigOneofCase.ClusterName:
              ClusterName = other.ClusterName;
              break;
            case EndpointConfigOneofCase.ServiceList:
              ServiceList = other.ServiceList.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DnsEndpoint Clone() {
          return new DnsEndpoint(this);
        }

        /// <summary>Field number for the "address_list" field.</summary>
        public const int AddressListFieldNumber = 1;
        /// <summary>
        /// Define a list of addresses to return for the specified endpoint
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Envoy.Data.Dns.V3.DnsTable.Types.AddressList AddressList {
          get { return endpointConfigCase_ == EndpointConfigOneofCase.AddressList ? (global::Envoy.Data.Dns.V3.DnsTable.Types.AddressList) endpointConfig_ : null; }
          set {
            endpointConfig_ = value;
            endpointConfigCase_ = value == null ? EndpointConfigOneofCase.None : EndpointConfigOneofCase.AddressList;
          }
        }

        /// <summary>Field number for the "cluster_name" field.</summary>
        public const int ClusterNameFieldNumber = 2;
        /// <summary>
        /// Define a cluster whose addresses are returned for the specified endpoint
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ClusterName {
          get { return endpointConfigCase_ == EndpointConfigOneofCase.ClusterName ? (string) endpointConfig_ : ""; }
          set {
            endpointConfig_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            endpointConfigCase_ = EndpointConfigOneofCase.ClusterName;
          }
        }

        /// <summary>Field number for the "service_list" field.</summary>
        public const int ServiceListFieldNumber = 3;
        /// <summary>
        /// Define a DNS Service List for the specified endpoint
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceList ServiceList {
          get { return endpointConfigCase_ == EndpointConfigOneofCase.ServiceList ? (global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceList) endpointConfig_ : null; }
          set {
            endpointConfig_ = value;
            endpointConfigCase_ = value == null ? EndpointConfigOneofCase.None : EndpointConfigOneofCase.ServiceList;
          }
        }

        private object endpointConfig_;
        /// <summary>Enum of possible cases for the "endpoint_config" oneof.</summary>
        public enum EndpointConfigOneofCase {
          None = 0,
          AddressList = 1,
          ClusterName = 2,
          ServiceList = 3,
        }
        private EndpointConfigOneofCase endpointConfigCase_ = EndpointConfigOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public EndpointConfigOneofCase EndpointConfigCase {
          get { return endpointConfigCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearEndpointConfig() {
          endpointConfigCase_ = EndpointConfigOneofCase.None;
          endpointConfig_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DnsEndpoint);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DnsEndpoint other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(AddressList, other.AddressList)) return false;
          if (ClusterName != other.ClusterName) return false;
          if (!object.Equals(ServiceList, other.ServiceList)) return false;
          if (EndpointConfigCase != other.EndpointConfigCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (endpointConfigCase_ == EndpointConfigOneofCase.AddressList) hash ^= AddressList.GetHashCode();
          if (endpointConfigCase_ == EndpointConfigOneofCase.ClusterName) hash ^= ClusterName.GetHashCode();
          if (endpointConfigCase_ == EndpointConfigOneofCase.ServiceList) hash ^= ServiceList.GetHashCode();
          hash ^= (int) endpointConfigCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (endpointConfigCase_ == EndpointConfigOneofCase.AddressList) {
            output.WriteRawTag(10);
            output.WriteMessage(AddressList);
          }
          if (endpointConfigCase_ == EndpointConfigOneofCase.ClusterName) {
            output.WriteRawTag(18);
            output.WriteString(ClusterName);
          }
          if (endpointConfigCase_ == EndpointConfigOneofCase.ServiceList) {
            output.WriteRawTag(26);
            output.WriteMessage(ServiceList);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (endpointConfigCase_ == EndpointConfigOneofCase.AddressList) {
            output.WriteRawTag(10);
            output.WriteMessage(AddressList);
          }
          if (endpointConfigCase_ == EndpointConfigOneofCase.ClusterName) {
            output.WriteRawTag(18);
            output.WriteString(ClusterName);
          }
          if (endpointConfigCase_ == EndpointConfigOneofCase.ServiceList) {
            output.WriteRawTag(26);
            output.WriteMessage(ServiceList);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (endpointConfigCase_ == EndpointConfigOneofCase.AddressList) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddressList);
          }
          if (endpointConfigCase_ == EndpointConfigOneofCase.ClusterName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterName);
          }
          if (endpointConfigCase_ == EndpointConfigOneofCase.ServiceList) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServiceList);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DnsEndpoint other) {
          if (other == null) {
            return;
          }
          switch (other.EndpointConfigCase) {
            case EndpointConfigOneofCase.AddressList:
              if (AddressList == null) {
                AddressList = new global::Envoy.Data.Dns.V3.DnsTable.Types.AddressList();
              }
              AddressList.MergeFrom(other.AddressList);
              break;
            case EndpointConfigOneofCase.ClusterName:
              ClusterName = other.ClusterName;
              break;
            case EndpointConfigOneofCase.ServiceList:
              if (ServiceList == null) {
                ServiceList = new global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceList();
              }
              ServiceList.MergeFrom(other.ServiceList);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Envoy.Data.Dns.V3.DnsTable.Types.AddressList subBuilder = new global::Envoy.Data.Dns.V3.DnsTable.Types.AddressList();
                if (endpointConfigCase_ == EndpointConfigOneofCase.AddressList) {
                  subBuilder.MergeFrom(AddressList);
                }
                input.ReadMessage(subBuilder);
                AddressList = subBuilder;
                break;
              }
              case 18: {
                ClusterName = input.ReadString();
                break;
              }
              case 26: {
                global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceList subBuilder = new global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceList();
                if (endpointConfigCase_ == EndpointConfigOneofCase.ServiceList) {
                  subBuilder.MergeFrom(ServiceList);
                }
                input.ReadMessage(subBuilder);
                ServiceList = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::Envoy.Data.Dns.V3.DnsTable.Types.AddressList subBuilder = new global::Envoy.Data.Dns.V3.DnsTable.Types.AddressList();
                if (endpointConfigCase_ == EndpointConfigOneofCase.AddressList) {
                  subBuilder.MergeFrom(AddressList);
                }
                input.ReadMessage(subBuilder);
                AddressList = subBuilder;
                break;
              }
              case 18: {
                ClusterName = input.ReadString();
                break;
              }
              case 26: {
                global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceList subBuilder = new global::Envoy.Data.Dns.V3.DnsTable.Types.DnsServiceList();
                if (endpointConfigCase_ == EndpointConfigOneofCase.ServiceList) {
                  subBuilder.MergeFrom(ServiceList);
                }
                input.ReadMessage(subBuilder);
                ServiceList = subBuilder;
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class DnsVirtualDomain : pb::IMessage<DnsVirtualDomain>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DnsVirtualDomain> _parser = new pb::MessageParser<DnsVirtualDomain>(() => new DnsVirtualDomain());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DnsVirtualDomain> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Data.Dns.V3.DnsTable.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DnsVirtualDomain() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DnsVirtualDomain(DnsVirtualDomain other) : this() {
          name_ = other.name_;
          endpoint_ = other.endpoint_ != null ? other.endpoint_.Clone() : null;
          answerTtl_ = other.answerTtl_ != null ? other.answerTtl_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DnsVirtualDomain Clone() {
          return new DnsVirtualDomain(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        /// <summary>
        /// A domain name for which Envoy will respond to query requests
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "endpoint" field.</summary>
        public const int EndpointFieldNumber = 2;
        private global::Envoy.Data.Dns.V3.DnsTable.Types.DnsEndpoint endpoint_;
        /// <summary>
        /// The configuration containing the method to determine the address of this endpoint
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Envoy.Data.Dns.V3.DnsTable.Types.DnsEndpoint Endpoint {
          get { return endpoint_; }
          set {
            endpoint_ = value;
          }
        }

        /// <summary>Field number for the "answer_ttl" field.</summary>
        public const int AnswerTtlFieldNumber = 3;
        private global::Google.Protobuf.WellKnownTypes.Duration answerTtl_;
        /// <summary>
        /// Sets the TTL in DNS answers from Envoy returned to the client. The default TTL is 300s
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Duration AnswerTtl {
          get { return answerTtl_; }
          set {
            answerTtl_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DnsVirtualDomain);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DnsVirtualDomain other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (!object.Equals(Endpoint, other.Endpoint)) return false;
          if (!object.Equals(AnswerTtl, other.AnswerTtl)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (endpoint_ != null) hash ^= Endpoint.GetHashCode();
          if (answerTtl_ != null) hash ^= AnswerTtl.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (endpoint_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Endpoint);
          }
          if (answerTtl_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(AnswerTtl);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (endpoint_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Endpoint);
          }
          if (answerTtl_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(AnswerTtl);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (endpoint_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Endpoint);
          }
          if (answerTtl_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AnswerTtl);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DnsVirtualDomain other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.endpoint_ != null) {
            if (endpoint_ == null) {
              Endpoint = new global::Envoy.Data.Dns.V3.DnsTable.Types.DnsEndpoint();
            }
            Endpoint.MergeFrom(other.Endpoint);
          }
          if (other.answerTtl_ != null) {
            if (answerTtl_ == null) {
              AnswerTtl = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            AnswerTtl.MergeFrom(other.AnswerTtl);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                if (endpoint_ == null) {
                  Endpoint = new global::Envoy.Data.Dns.V3.DnsTable.Types.DnsEndpoint();
                }
                input.ReadMessage(Endpoint);
                break;
              }
              case 26: {
                if (answerTtl_ == null) {
                  AnswerTtl = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                input.ReadMessage(AnswerTtl);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                if (endpoint_ == null) {
                  Endpoint = new global::Envoy.Data.Dns.V3.DnsTable.Types.DnsEndpoint();
                }
                input.ReadMessage(Endpoint);
                break;
              }
              case 26: {
                if (answerTtl_ == null) {
                  AnswerTtl = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                input.ReadMessage(AnswerTtl);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
