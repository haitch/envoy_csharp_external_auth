// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/extensions/filters/http/alternate_protocols_cache/v3/alternate_protocols_cache.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Extensions.Filters.Http.AlternateProtocolsCache.V3 {

  /// <summary>Holder for reflection information generated from envoy/extensions/filters/http/alternate_protocols_cache/v3/alternate_protocols_cache.proto</summary>
  public static partial class AlternateProtocolsCacheReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/extensions/filters/http/alternate_protocols_cache/v3/alternate_protocols_cache.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AlternateProtocolsCacheReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ClplbnZveS9leHRlbnNpb25zL2ZpbHRlcnMvaHR0cC9hbHRlcm5hdGVfcHJv",
            "dG9jb2xzX2NhY2hlL3YzL2FsdGVybmF0ZV9wcm90b2NvbHNfY2FjaGUucHJv",
            "dG8SOmVudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLmFsdGVybmF0ZV9w",
            "cm90b2NvbHNfY2FjaGUudjMaI2Vudm95L2NvbmZpZy9jb3JlL3YzL3Byb3Rv",
            "Y29sLnByb3RvGh11ZHBhL2Fubm90YXRpb25zL3N0YXR1cy5wcm90byJvCgxG",
            "aWx0ZXJDb25maWcSXwohYWx0ZXJuYXRlX3Byb3RvY29sc19jYWNoZV9vcHRp",
            "b25zGAEgASgLMjQuZW52b3kuY29uZmlnLmNvcmUudjMuQWx0ZXJuYXRlUHJv",
            "dG9jb2xzQ2FjaGVPcHRpb25zQnIKSGlvLmVudm95cHJveHkuZW52b3kuZXh0",
            "ZW5zaW9ucy5maWx0ZXJzLmh0dHAuYWx0ZXJuYXRlX3Byb3RvY29sc19jYWNo",
            "ZS52M0IcQWx0ZXJuYXRlUHJvdG9jb2xzQ2FjaGVQcm90b1ABuoDI0QYCEAJi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Config.Core.V3.ProtocolReflection.Descriptor, global::Udpa.Annotations.StatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Extensions.Filters.Http.AlternateProtocolsCache.V3.FilterConfig), global::Envoy.Extensions.Filters.Http.AlternateProtocolsCache.V3.FilterConfig.Parser, new[]{ "AlternateProtocolsCacheOptions" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Configuration for the alternate protocols cache HTTP filter.
  /// [#extension: envoy.filters.http.alternate_protocols_cache]
  /// </summary>
  public sealed partial class FilterConfig : pb::IMessage<FilterConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FilterConfig> _parser = new pb::MessageParser<FilterConfig>(() => new FilterConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FilterConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Extensions.Filters.Http.AlternateProtocolsCache.V3.AlternateProtocolsCacheReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FilterConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FilterConfig(FilterConfig other) : this() {
      alternateProtocolsCacheOptions_ = other.alternateProtocolsCacheOptions_ != null ? other.alternateProtocolsCacheOptions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FilterConfig Clone() {
      return new FilterConfig(this);
    }

    /// <summary>Field number for the "alternate_protocols_cache_options" field.</summary>
    public const int AlternateProtocolsCacheOptionsFieldNumber = 1;
    private global::Envoy.Config.Core.V3.AlternateProtocolsCacheOptions alternateProtocolsCacheOptions_;
    /// <summary>
    /// If set, causes the use of the alternate protocols cache, which is responsible for
    /// parsing and caching HTTP Alt-Svc headers. This enables the use of HTTP/3 for upstream
    /// servers that advertise supporting it.
    /// TODO(RyanTheOptimist): Make this field required when HTTP/3 is enabled via auto_http.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Core.V3.AlternateProtocolsCacheOptions AlternateProtocolsCacheOptions {
      get { return alternateProtocolsCacheOptions_; }
      set {
        alternateProtocolsCacheOptions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FilterConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FilterConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AlternateProtocolsCacheOptions, other.AlternateProtocolsCacheOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (alternateProtocolsCacheOptions_ != null) hash ^= AlternateProtocolsCacheOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (alternateProtocolsCacheOptions_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AlternateProtocolsCacheOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (alternateProtocolsCacheOptions_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AlternateProtocolsCacheOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (alternateProtocolsCacheOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AlternateProtocolsCacheOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FilterConfig other) {
      if (other == null) {
        return;
      }
      if (other.alternateProtocolsCacheOptions_ != null) {
        if (alternateProtocolsCacheOptions_ == null) {
          AlternateProtocolsCacheOptions = new global::Envoy.Config.Core.V3.AlternateProtocolsCacheOptions();
        }
        AlternateProtocolsCacheOptions.MergeFrom(other.AlternateProtocolsCacheOptions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (alternateProtocolsCacheOptions_ == null) {
              AlternateProtocolsCacheOptions = new global::Envoy.Config.Core.V3.AlternateProtocolsCacheOptions();
            }
            input.ReadMessage(AlternateProtocolsCacheOptions);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (alternateProtocolsCacheOptions_ == null) {
              AlternateProtocolsCacheOptions = new global::Envoy.Config.Core.V3.AlternateProtocolsCacheOptions();
            }
            input.ReadMessage(AlternateProtocolsCacheOptions);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
