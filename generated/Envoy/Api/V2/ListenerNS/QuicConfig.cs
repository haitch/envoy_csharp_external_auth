// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/api/v2/listener/quic_config.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Api.V2.ListenerNS {

  /// <summary>Holder for reflection information generated from envoy/api/v2/listener/quic_config.proto</summary>
  public static partial class QuicConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/api/v2/listener/quic_config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static QuicConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CidlbnZveS9hcGkvdjIvbGlzdGVuZXIvcXVpY19jb25maWcucHJvdG8SFWVu",
            "dm95LmFwaS52Mi5saXN0ZW5lchoeZ29vZ2xlL3Byb3RvYnVmL2R1cmF0aW9u",
            "LnByb3RvGh5nb29nbGUvcHJvdG9idWYvd3JhcHBlcnMucHJvdG8aHnVkcGEv",
            "YW5ub3RhdGlvbnMvbWlncmF0ZS5wcm90bxoddWRwYS9hbm5vdGF0aW9ucy9z",
            "dGF0dXMucHJvdG8iwQEKE1F1aWNQcm90b2NvbE9wdGlvbnMSPAoWbWF4X2Nv",
            "bmN1cnJlbnRfc3RyZWFtcxgBIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5VSW50",
            "MzJWYWx1ZRIvCgxpZGxlX3RpbWVvdXQYAiABKAsyGS5nb29nbGUucHJvdG9i",
            "dWYuRHVyYXRpb24SOwoYY3J5cHRvX2hhbmRzaGFrZV90aW1lb3V0GAMgASgL",
            "MhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uQpQBCiNpby5lbnZveXByb3h5",
            "LmVudm95LmFwaS52Mi5saXN0ZW5lckIPUXVpY0NvbmZpZ1Byb3RvUAGqAhdF",
            "bnZveS5BcGkuVjIuTGlzdGVuZXJOU+oCF0Vudm95LkFwaS5WMi5MaXN0ZW5l",
            "ck5T8pj+jwUaEhhlbnZveS5jb25maWcubGlzdGVuZXIudjO6gMjRBgIQAWIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Udpa.Annotations.MigrateReflection.Descriptor, global::Udpa.Annotations.StatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.ListenerNS.QuicProtocolOptions), global::Envoy.Api.V2.ListenerNS.QuicProtocolOptions.Parser, new[]{ "MaxConcurrentStreams", "IdleTimeout", "CryptoHandshakeTimeout" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Configuration specific to the QUIC protocol.
  /// Next id: 4
  /// </summary>
  public sealed partial class QuicProtocolOptions : pb::IMessage<QuicProtocolOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuicProtocolOptions> _parser = new pb::MessageParser<QuicProtocolOptions>(() => new QuicProtocolOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<QuicProtocolOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Api.V2.ListenerNS.QuicConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuicProtocolOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuicProtocolOptions(QuicProtocolOptions other) : this() {
      MaxConcurrentStreams = other.MaxConcurrentStreams;
      idleTimeout_ = other.idleTimeout_ != null ? other.idleTimeout_.Clone() : null;
      cryptoHandshakeTimeout_ = other.cryptoHandshakeTimeout_ != null ? other.cryptoHandshakeTimeout_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuicProtocolOptions Clone() {
      return new QuicProtocolOptions(this);
    }

    /// <summary>Field number for the "max_concurrent_streams" field.</summary>
    public const int MaxConcurrentStreamsFieldNumber = 1;
    private static readonly pb::FieldCodec<uint?> _single_maxConcurrentStreams_codec = pb::FieldCodec.ForStructWrapper<uint>(10);
    private uint? maxConcurrentStreams_;
    /// <summary>
    /// Maximum number of streams that the client can negotiate per connection. 100
    /// if not specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint? MaxConcurrentStreams {
      get { return maxConcurrentStreams_; }
      set {
        maxConcurrentStreams_ = value;
      }
    }


    /// <summary>Field number for the "idle_timeout" field.</summary>
    public const int IdleTimeoutFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Duration idleTimeout_;
    /// <summary>
    /// Maximum number of milliseconds that connection will be alive when there is
    /// no network activity. 300000ms if not specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration IdleTimeout {
      get { return idleTimeout_; }
      set {
        idleTimeout_ = value;
      }
    }

    /// <summary>Field number for the "crypto_handshake_timeout" field.</summary>
    public const int CryptoHandshakeTimeoutFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Duration cryptoHandshakeTimeout_;
    /// <summary>
    /// Connection timeout in milliseconds before the crypto handshake is finished.
    /// 20000ms if not specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration CryptoHandshakeTimeout {
      get { return cryptoHandshakeTimeout_; }
      set {
        cryptoHandshakeTimeout_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as QuicProtocolOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(QuicProtocolOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxConcurrentStreams != other.MaxConcurrentStreams) return false;
      if (!object.Equals(IdleTimeout, other.IdleTimeout)) return false;
      if (!object.Equals(CryptoHandshakeTimeout, other.CryptoHandshakeTimeout)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (maxConcurrentStreams_ != null) hash ^= MaxConcurrentStreams.GetHashCode();
      if (idleTimeout_ != null) hash ^= IdleTimeout.GetHashCode();
      if (cryptoHandshakeTimeout_ != null) hash ^= CryptoHandshakeTimeout.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (maxConcurrentStreams_ != null) {
        _single_maxConcurrentStreams_codec.WriteTagAndValue(output, MaxConcurrentStreams);
      }
      if (idleTimeout_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(IdleTimeout);
      }
      if (cryptoHandshakeTimeout_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CryptoHandshakeTimeout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (maxConcurrentStreams_ != null) {
        _single_maxConcurrentStreams_codec.WriteTagAndValue(ref output, MaxConcurrentStreams);
      }
      if (idleTimeout_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(IdleTimeout);
      }
      if (cryptoHandshakeTimeout_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CryptoHandshakeTimeout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (maxConcurrentStreams_ != null) {
        size += _single_maxConcurrentStreams_codec.CalculateSizeWithTag(MaxConcurrentStreams);
      }
      if (idleTimeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IdleTimeout);
      }
      if (cryptoHandshakeTimeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CryptoHandshakeTimeout);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(QuicProtocolOptions other) {
      if (other == null) {
        return;
      }
      if (other.maxConcurrentStreams_ != null) {
        if (maxConcurrentStreams_ == null || other.MaxConcurrentStreams != 0) {
          MaxConcurrentStreams = other.MaxConcurrentStreams;
        }
      }
      if (other.idleTimeout_ != null) {
        if (idleTimeout_ == null) {
          IdleTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        IdleTimeout.MergeFrom(other.IdleTimeout);
      }
      if (other.cryptoHandshakeTimeout_ != null) {
        if (cryptoHandshakeTimeout_ == null) {
          CryptoHandshakeTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        CryptoHandshakeTimeout.MergeFrom(other.CryptoHandshakeTimeout);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            uint? value = _single_maxConcurrentStreams_codec.Read(input);
            if (maxConcurrentStreams_ == null || value != 0) {
              MaxConcurrentStreams = value;
            }
            break;
          }
          case 18: {
            if (idleTimeout_ == null) {
              IdleTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(IdleTimeout);
            break;
          }
          case 26: {
            if (cryptoHandshakeTimeout_ == null) {
              CryptoHandshakeTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(CryptoHandshakeTimeout);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            uint? value = _single_maxConcurrentStreams_codec.Read(ref input);
            if (maxConcurrentStreams_ == null || value != 0) {
              MaxConcurrentStreams = value;
            }
            break;
          }
          case 18: {
            if (idleTimeout_ == null) {
              IdleTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(IdleTimeout);
            break;
          }
          case 26: {
            if (cryptoHandshakeTimeout_ == null) {
              CryptoHandshakeTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(CryptoHandshakeTimeout);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
