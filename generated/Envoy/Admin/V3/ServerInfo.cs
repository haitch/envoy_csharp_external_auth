// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/admin/v3/server_info.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Admin.V3 {

  /// <summary>Holder for reflection information generated from envoy/admin/v3/server_info.proto</summary>
  public static partial class ServerInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/admin/v3/server_info.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServerInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBlbnZveS9hZG1pbi92My9zZXJ2ZXJfaW5mby5wcm90bxIOZW52b3kuYWRt",
            "aW4udjMaH2Vudm95L2NvbmZpZy9jb3JlL3YzL2Jhc2UucHJvdG8aHmdvb2ds",
            "ZS9wcm90b2J1Zi9kdXJhdGlvbi5wcm90bxoddWRwYS9hbm5vdGF0aW9ucy9z",
            "dGF0dXMucHJvdG8aIXVkcGEvYW5ub3RhdGlvbnMvdmVyc2lvbmluZy5wcm90",
            "byK2AwoKU2VydmVySW5mbxIPCgd2ZXJzaW9uGAEgASgJEi8KBXN0YXRlGAIg",
            "ASgOMiAuZW52b3kuYWRtaW4udjMuU2VydmVySW5mby5TdGF0ZRI3ChR1cHRp",
            "bWVfY3VycmVudF9lcG9jaBgDIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJh",
            "dGlvbhI0ChF1cHRpbWVfYWxsX2Vwb2NocxgEIAEoCzIZLmdvb2dsZS5wcm90",
            "b2J1Zi5EdXJhdGlvbhIbChNob3RfcmVzdGFydF92ZXJzaW9uGAUgASgJEkAK",
            "FGNvbW1hbmRfbGluZV9vcHRpb25zGAYgASgLMiIuZW52b3kuYWRtaW4udjMu",
            "Q29tbWFuZExpbmVPcHRpb25zEigKBG5vZGUYByABKAsyGi5lbnZveS5jb25m",
            "aWcuY29yZS52My5Ob2RlIkcKBVN0YXRlEggKBExJVkUQABIMCghEUkFJTklO",
            "RxABEhQKEFBSRV9JTklUSUFMSVpJTkcQAhIQCgxJTklUSUFMSVpJTkcQAzol",
            "msWIHiAKHmVudm95LmFkbWluLnYyYWxwaGEuU2VydmVySW5mbyKsCgoSQ29t",
            "bWFuZExpbmVPcHRpb25zEg8KB2Jhc2VfaWQYASABKAQSGwoTdXNlX2R5bmFt",
            "aWNfYmFzZV9pZBgfIAEoCBIUCgxiYXNlX2lkX3BhdGgYICABKAkSEwoLY29u",
            "Y3VycmVuY3kYAiABKA0SEwoLY29uZmlnX3BhdGgYAyABKAkSEwoLY29uZmln",
            "X3lhbWwYBCABKAkSIwobYWxsb3dfdW5rbm93bl9zdGF0aWNfZmllbGRzGAUg",
            "ASgIEiUKHXJlamVjdF91bmtub3duX2R5bmFtaWNfZmllbGRzGBogASgIEiUK",
            "HWlnbm9yZV91bmtub3duX2R5bmFtaWNfZmllbGRzGB4gASgIEhoKEmFkbWlu",
            "X2FkZHJlc3NfcGF0aBgGIAEoCRJOChhsb2NhbF9hZGRyZXNzX2lwX3ZlcnNp",
            "b24YByABKA4yLC5lbnZveS5hZG1pbi52My5Db21tYW5kTGluZU9wdGlvbnMu",
            "SXBWZXJzaW9uEhEKCWxvZ19sZXZlbBgIIAEoCRIbChNjb21wb25lbnRfbG9n",
            "X2xldmVsGAkgASgJEhIKCmxvZ19mb3JtYXQYCiABKAkSGgoSbG9nX2Zvcm1h",
            "dF9lc2NhcGVkGBsgASgIEhAKCGxvZ19wYXRoGAsgASgJEhcKD3NlcnZpY2Vf",
            "Y2x1c3RlchgNIAEoCRIUCgxzZXJ2aWNlX25vZGUYDiABKAkSFAoMc2Vydmlj",
            "ZV96b25lGA8gASgJEjYKE2ZpbGVfZmx1c2hfaW50ZXJ2YWwYECABKAsyGS5n",
            "b29nbGUucHJvdG9idWYuRHVyYXRpb24SLQoKZHJhaW5fdGltZRgRIAEoCzIZ",
            "Lmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhJICg5kcmFpbl9zdHJhdGVneRgh",
            "IAEoDjIwLmVudm95LmFkbWluLnYzLkNvbW1hbmRMaW5lT3B0aW9ucy5EcmFp",
            "blN0cmF0ZWd5EjcKFHBhcmVudF9zaHV0ZG93bl90aW1lGBIgASgLMhkuZ29v",
            "Z2xlLnByb3RvYnVmLkR1cmF0aW9uEjUKBG1vZGUYEyABKA4yJy5lbnZveS5h",
            "ZG1pbi52My5Db21tYW5kTGluZU9wdGlvbnMuTW9kZRIbChNkaXNhYmxlX2hv",
            "dF9yZXN0YXJ0GBYgASgIEhwKFGVuYWJsZV9tdXRleF90cmFjaW5nGBcgASgI",
            "EhUKDXJlc3RhcnRfZXBvY2gYGCABKA0SFgoOY3B1c2V0X3RocmVhZHMYGSAB",
            "KAgSGwoTZGlzYWJsZWRfZXh0ZW5zaW9ucxgcIAMoCRIhChllbmFibGVfZmlu",
            "ZV9ncmFpbl9sb2dnaW5nGCIgASgIEhMKC3NvY2tldF9wYXRoGCMgASgJEhMK",
            "C3NvY2tldF9tb2RlGCQgASgNEhgKEGVuYWJsZV9jb3JlX2R1bXAYJSABKAgi",
            "GwoJSXBWZXJzaW9uEgYKAnY0EAASBgoCdjYQASItCgRNb2RlEgkKBVNlcnZl",
            "EAASDAoIVmFsaWRhdGUQARIMCghJbml0T25seRACIisKDURyYWluU3RyYXRl",
            "Z3kSCwoHR3JhZHVhbBAAEg0KCUltbWVkaWF0ZRABOi2axYgeKAomZW52b3ku",
            "YWRtaW4udjJhbHBoYS5Db21tYW5kTGluZU9wdGlvbnNKBAgMEA1KBAgUEBVK",
            "BAgVEBZKBAgdEB5SCW1heF9zdGF0c1IQbWF4X29ial9uYW1lX2xlblIRYm9v",
            "dHN0cmFwX3ZlcnNpb25COQocaW8uZW52b3lwcm94eS5lbnZveS5hZG1pbi52",
            "M0IPU2VydmVySW5mb1Byb3RvUAG6gMjRBgIQAmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Config.Core.V3.BaseReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Udpa.Annotations.StatusReflection.Descriptor, global::Udpa.Annotations.VersioningReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Admin.V3.ServerInfo), global::Envoy.Admin.V3.ServerInfo.Parser, new[]{ "Version", "State", "UptimeCurrentEpoch", "UptimeAllEpochs", "HotRestartVersion", "CommandLineOptions", "Node" }, null, new[]{ typeof(global::Envoy.Admin.V3.ServerInfo.Types.State) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Admin.V3.CommandLineOptions), global::Envoy.Admin.V3.CommandLineOptions.Parser, new[]{ "BaseId", "UseDynamicBaseId", "BaseIdPath", "Concurrency", "ConfigPath", "ConfigYaml", "AllowUnknownStaticFields", "RejectUnknownDynamicFields", "IgnoreUnknownDynamicFields", "AdminAddressPath", "LocalAddressIpVersion", "LogLevel", "ComponentLogLevel", "LogFormat", "LogFormatEscaped", "LogPath", "ServiceCluster", "ServiceNode", "ServiceZone", "FileFlushInterval", "DrainTime", "DrainStrategy", "ParentShutdownTime", "Mode", "DisableHotRestart", "EnableMutexTracing", "RestartEpoch", "CpusetThreads", "DisabledExtensions", "EnableFineGrainLogging", "SocketPath", "SocketMode", "EnableCoreDump" }, null, new[]{ typeof(global::Envoy.Admin.V3.CommandLineOptions.Types.IpVersion), typeof(global::Envoy.Admin.V3.CommandLineOptions.Types.Mode), typeof(global::Envoy.Admin.V3.CommandLineOptions.Types.DrainStrategy) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Proto representation of the value returned by /server_info, containing
  /// server version/server status information.
  /// [#next-free-field: 8]
  /// </summary>
  public sealed partial class ServerInfo : pb::IMessage<ServerInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServerInfo> _parser = new pb::MessageParser<ServerInfo>(() => new ServerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ServerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Admin.V3.ServerInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerInfo(ServerInfo other) : this() {
      version_ = other.version_;
      state_ = other.state_;
      uptimeCurrentEpoch_ = other.uptimeCurrentEpoch_ != null ? other.uptimeCurrentEpoch_.Clone() : null;
      uptimeAllEpochs_ = other.uptimeAllEpochs_ != null ? other.uptimeAllEpochs_.Clone() : null;
      hotRestartVersion_ = other.hotRestartVersion_;
      commandLineOptions_ = other.commandLineOptions_ != null ? other.commandLineOptions_.Clone() : null;
      node_ = other.node_ != null ? other.node_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerInfo Clone() {
      return new ServerInfo(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private string version_ = "";
    /// <summary>
    /// Server version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::Envoy.Admin.V3.ServerInfo.Types.State state_ = global::Envoy.Admin.V3.ServerInfo.Types.State.Live;
    /// <summary>
    /// State of the server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Admin.V3.ServerInfo.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "uptime_current_epoch" field.</summary>
    public const int UptimeCurrentEpochFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Duration uptimeCurrentEpoch_;
    /// <summary>
    /// Uptime since current epoch was started.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration UptimeCurrentEpoch {
      get { return uptimeCurrentEpoch_; }
      set {
        uptimeCurrentEpoch_ = value;
      }
    }

    /// <summary>Field number for the "uptime_all_epochs" field.</summary>
    public const int UptimeAllEpochsFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Duration uptimeAllEpochs_;
    /// <summary>
    /// Uptime since the start of the first epoch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration UptimeAllEpochs {
      get { return uptimeAllEpochs_; }
      set {
        uptimeAllEpochs_ = value;
      }
    }

    /// <summary>Field number for the "hot_restart_version" field.</summary>
    public const int HotRestartVersionFieldNumber = 5;
    private string hotRestartVersion_ = "";
    /// <summary>
    /// Hot restart version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HotRestartVersion {
      get { return hotRestartVersion_; }
      set {
        hotRestartVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "command_line_options" field.</summary>
    public const int CommandLineOptionsFieldNumber = 6;
    private global::Envoy.Admin.V3.CommandLineOptions commandLineOptions_;
    /// <summary>
    /// Command line options the server is currently running with.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Admin.V3.CommandLineOptions CommandLineOptions {
      get { return commandLineOptions_; }
      set {
        commandLineOptions_ = value;
      }
    }

    /// <summary>Field number for the "node" field.</summary>
    public const int NodeFieldNumber = 7;
    private global::Envoy.Config.Core.V3.Node node_;
    /// <summary>
    /// Populated node identity of this server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Core.V3.Node Node {
      get { return node_; }
      set {
        node_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ServerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ServerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (State != other.State) return false;
      if (!object.Equals(UptimeCurrentEpoch, other.UptimeCurrentEpoch)) return false;
      if (!object.Equals(UptimeAllEpochs, other.UptimeAllEpochs)) return false;
      if (HotRestartVersion != other.HotRestartVersion) return false;
      if (!object.Equals(CommandLineOptions, other.CommandLineOptions)) return false;
      if (!object.Equals(Node, other.Node)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (State != global::Envoy.Admin.V3.ServerInfo.Types.State.Live) hash ^= State.GetHashCode();
      if (uptimeCurrentEpoch_ != null) hash ^= UptimeCurrentEpoch.GetHashCode();
      if (uptimeAllEpochs_ != null) hash ^= UptimeAllEpochs.GetHashCode();
      if (HotRestartVersion.Length != 0) hash ^= HotRestartVersion.GetHashCode();
      if (commandLineOptions_ != null) hash ^= CommandLineOptions.GetHashCode();
      if (node_ != null) hash ^= Node.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Version.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Version);
      }
      if (State != global::Envoy.Admin.V3.ServerInfo.Types.State.Live) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (uptimeCurrentEpoch_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UptimeCurrentEpoch);
      }
      if (uptimeAllEpochs_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UptimeAllEpochs);
      }
      if (HotRestartVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(HotRestartVersion);
      }
      if (commandLineOptions_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CommandLineOptions);
      }
      if (node_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Node);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Version.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Version);
      }
      if (State != global::Envoy.Admin.V3.ServerInfo.Types.State.Live) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (uptimeCurrentEpoch_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UptimeCurrentEpoch);
      }
      if (uptimeAllEpochs_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UptimeAllEpochs);
      }
      if (HotRestartVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(HotRestartVersion);
      }
      if (commandLineOptions_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CommandLineOptions);
      }
      if (node_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Node);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (State != global::Envoy.Admin.V3.ServerInfo.Types.State.Live) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (uptimeCurrentEpoch_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UptimeCurrentEpoch);
      }
      if (uptimeAllEpochs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UptimeAllEpochs);
      }
      if (HotRestartVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotRestartVersion);
      }
      if (commandLineOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommandLineOptions);
      }
      if (node_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Node);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ServerInfo other) {
      if (other == null) {
        return;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.State != global::Envoy.Admin.V3.ServerInfo.Types.State.Live) {
        State = other.State;
      }
      if (other.uptimeCurrentEpoch_ != null) {
        if (uptimeCurrentEpoch_ == null) {
          UptimeCurrentEpoch = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        UptimeCurrentEpoch.MergeFrom(other.UptimeCurrentEpoch);
      }
      if (other.uptimeAllEpochs_ != null) {
        if (uptimeAllEpochs_ == null) {
          UptimeAllEpochs = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        UptimeAllEpochs.MergeFrom(other.UptimeAllEpochs);
      }
      if (other.HotRestartVersion.Length != 0) {
        HotRestartVersion = other.HotRestartVersion;
      }
      if (other.commandLineOptions_ != null) {
        if (commandLineOptions_ == null) {
          CommandLineOptions = new global::Envoy.Admin.V3.CommandLineOptions();
        }
        CommandLineOptions.MergeFrom(other.CommandLineOptions);
      }
      if (other.node_ != null) {
        if (node_ == null) {
          Node = new global::Envoy.Config.Core.V3.Node();
        }
        Node.MergeFrom(other.Node);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Version = input.ReadString();
            break;
          }
          case 16: {
            State = (global::Envoy.Admin.V3.ServerInfo.Types.State) input.ReadEnum();
            break;
          }
          case 26: {
            if (uptimeCurrentEpoch_ == null) {
              UptimeCurrentEpoch = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(UptimeCurrentEpoch);
            break;
          }
          case 34: {
            if (uptimeAllEpochs_ == null) {
              UptimeAllEpochs = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(UptimeAllEpochs);
            break;
          }
          case 42: {
            HotRestartVersion = input.ReadString();
            break;
          }
          case 50: {
            if (commandLineOptions_ == null) {
              CommandLineOptions = new global::Envoy.Admin.V3.CommandLineOptions();
            }
            input.ReadMessage(CommandLineOptions);
            break;
          }
          case 58: {
            if (node_ == null) {
              Node = new global::Envoy.Config.Core.V3.Node();
            }
            input.ReadMessage(Node);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Version = input.ReadString();
            break;
          }
          case 16: {
            State = (global::Envoy.Admin.V3.ServerInfo.Types.State) input.ReadEnum();
            break;
          }
          case 26: {
            if (uptimeCurrentEpoch_ == null) {
              UptimeCurrentEpoch = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(UptimeCurrentEpoch);
            break;
          }
          case 34: {
            if (uptimeAllEpochs_ == null) {
              UptimeAllEpochs = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(UptimeAllEpochs);
            break;
          }
          case 42: {
            HotRestartVersion = input.ReadString();
            break;
          }
          case 50: {
            if (commandLineOptions_ == null) {
              CommandLineOptions = new global::Envoy.Admin.V3.CommandLineOptions();
            }
            input.ReadMessage(CommandLineOptions);
            break;
          }
          case 58: {
            if (node_ == null) {
              Node = new global::Envoy.Config.Core.V3.Node();
            }
            input.ReadMessage(Node);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ServerInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum State {
        /// <summary>
        /// Server is live and serving traffic.
        /// </summary>
        [pbr::OriginalName("LIVE")] Live = 0,
        /// <summary>
        /// Server is draining listeners in response to external health checks failing.
        /// </summary>
        [pbr::OriginalName("DRAINING")] Draining = 1,
        /// <summary>
        /// Server has not yet completed cluster manager initialization.
        /// </summary>
        [pbr::OriginalName("PRE_INITIALIZING")] PreInitializing = 2,
        /// <summary>
        /// Server is running the cluster manager initialization callbacks (e.g., RDS).
        /// </summary>
        [pbr::OriginalName("INITIALIZING")] Initializing = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// [#next-free-field: 38]
  /// </summary>
  public sealed partial class CommandLineOptions : pb::IMessage<CommandLineOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CommandLineOptions> _parser = new pb::MessageParser<CommandLineOptions>(() => new CommandLineOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CommandLineOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Admin.V3.ServerInfoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CommandLineOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CommandLineOptions(CommandLineOptions other) : this() {
      baseId_ = other.baseId_;
      useDynamicBaseId_ = other.useDynamicBaseId_;
      baseIdPath_ = other.baseIdPath_;
      concurrency_ = other.concurrency_;
      configPath_ = other.configPath_;
      configYaml_ = other.configYaml_;
      allowUnknownStaticFields_ = other.allowUnknownStaticFields_;
      rejectUnknownDynamicFields_ = other.rejectUnknownDynamicFields_;
      ignoreUnknownDynamicFields_ = other.ignoreUnknownDynamicFields_;
      adminAddressPath_ = other.adminAddressPath_;
      localAddressIpVersion_ = other.localAddressIpVersion_;
      logLevel_ = other.logLevel_;
      componentLogLevel_ = other.componentLogLevel_;
      logFormat_ = other.logFormat_;
      logFormatEscaped_ = other.logFormatEscaped_;
      logPath_ = other.logPath_;
      serviceCluster_ = other.serviceCluster_;
      serviceNode_ = other.serviceNode_;
      serviceZone_ = other.serviceZone_;
      fileFlushInterval_ = other.fileFlushInterval_ != null ? other.fileFlushInterval_.Clone() : null;
      drainTime_ = other.drainTime_ != null ? other.drainTime_.Clone() : null;
      drainStrategy_ = other.drainStrategy_;
      parentShutdownTime_ = other.parentShutdownTime_ != null ? other.parentShutdownTime_.Clone() : null;
      mode_ = other.mode_;
      disableHotRestart_ = other.disableHotRestart_;
      enableMutexTracing_ = other.enableMutexTracing_;
      restartEpoch_ = other.restartEpoch_;
      cpusetThreads_ = other.cpusetThreads_;
      disabledExtensions_ = other.disabledExtensions_.Clone();
      enableFineGrainLogging_ = other.enableFineGrainLogging_;
      socketPath_ = other.socketPath_;
      socketMode_ = other.socketMode_;
      enableCoreDump_ = other.enableCoreDump_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CommandLineOptions Clone() {
      return new CommandLineOptions(this);
    }

    /// <summary>Field number for the "base_id" field.</summary>
    public const int BaseIdFieldNumber = 1;
    private ulong baseId_;
    /// <summary>
    /// See :option:`--base-id` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong BaseId {
      get { return baseId_; }
      set {
        baseId_ = value;
      }
    }

    /// <summary>Field number for the "use_dynamic_base_id" field.</summary>
    public const int UseDynamicBaseIdFieldNumber = 31;
    private bool useDynamicBaseId_;
    /// <summary>
    /// See :option:`--use-dynamic-base-id` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseDynamicBaseId {
      get { return useDynamicBaseId_; }
      set {
        useDynamicBaseId_ = value;
      }
    }

    /// <summary>Field number for the "base_id_path" field.</summary>
    public const int BaseIdPathFieldNumber = 32;
    private string baseIdPath_ = "";
    /// <summary>
    /// See :option:`--base-id-path` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BaseIdPath {
      get { return baseIdPath_; }
      set {
        baseIdPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "concurrency" field.</summary>
    public const int ConcurrencyFieldNumber = 2;
    private uint concurrency_;
    /// <summary>
    /// See :option:`--concurrency` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Concurrency {
      get { return concurrency_; }
      set {
        concurrency_ = value;
      }
    }

    /// <summary>Field number for the "config_path" field.</summary>
    public const int ConfigPathFieldNumber = 3;
    private string configPath_ = "";
    /// <summary>
    /// See :option:`--config-path` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ConfigPath {
      get { return configPath_; }
      set {
        configPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config_yaml" field.</summary>
    public const int ConfigYamlFieldNumber = 4;
    private string configYaml_ = "";
    /// <summary>
    /// See :option:`--config-yaml` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ConfigYaml {
      get { return configYaml_; }
      set {
        configYaml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "allow_unknown_static_fields" field.</summary>
    public const int AllowUnknownStaticFieldsFieldNumber = 5;
    private bool allowUnknownStaticFields_;
    /// <summary>
    /// See :option:`--allow-unknown-static-fields` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AllowUnknownStaticFields {
      get { return allowUnknownStaticFields_; }
      set {
        allowUnknownStaticFields_ = value;
      }
    }

    /// <summary>Field number for the "reject_unknown_dynamic_fields" field.</summary>
    public const int RejectUnknownDynamicFieldsFieldNumber = 26;
    private bool rejectUnknownDynamicFields_;
    /// <summary>
    /// See :option:`--reject-unknown-dynamic-fields` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RejectUnknownDynamicFields {
      get { return rejectUnknownDynamicFields_; }
      set {
        rejectUnknownDynamicFields_ = value;
      }
    }

    /// <summary>Field number for the "ignore_unknown_dynamic_fields" field.</summary>
    public const int IgnoreUnknownDynamicFieldsFieldNumber = 30;
    private bool ignoreUnknownDynamicFields_;
    /// <summary>
    /// See :option:`--ignore-unknown-dynamic-fields` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IgnoreUnknownDynamicFields {
      get { return ignoreUnknownDynamicFields_; }
      set {
        ignoreUnknownDynamicFields_ = value;
      }
    }

    /// <summary>Field number for the "admin_address_path" field.</summary>
    public const int AdminAddressPathFieldNumber = 6;
    private string adminAddressPath_ = "";
    /// <summary>
    /// See :option:`--admin-address-path` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AdminAddressPath {
      get { return adminAddressPath_; }
      set {
        adminAddressPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "local_address_ip_version" field.</summary>
    public const int LocalAddressIpVersionFieldNumber = 7;
    private global::Envoy.Admin.V3.CommandLineOptions.Types.IpVersion localAddressIpVersion_ = global::Envoy.Admin.V3.CommandLineOptions.Types.IpVersion.V4;
    /// <summary>
    /// See :option:`--local-address-ip-version` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Admin.V3.CommandLineOptions.Types.IpVersion LocalAddressIpVersion {
      get { return localAddressIpVersion_; }
      set {
        localAddressIpVersion_ = value;
      }
    }

    /// <summary>Field number for the "log_level" field.</summary>
    public const int LogLevelFieldNumber = 8;
    private string logLevel_ = "";
    /// <summary>
    /// See :option:`--log-level` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LogLevel {
      get { return logLevel_; }
      set {
        logLevel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "component_log_level" field.</summary>
    public const int ComponentLogLevelFieldNumber = 9;
    private string componentLogLevel_ = "";
    /// <summary>
    /// See :option:`--component-log-level` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ComponentLogLevel {
      get { return componentLogLevel_; }
      set {
        componentLogLevel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "log_format" field.</summary>
    public const int LogFormatFieldNumber = 10;
    private string logFormat_ = "";
    /// <summary>
    /// See :option:`--log-format` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LogFormat {
      get { return logFormat_; }
      set {
        logFormat_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "log_format_escaped" field.</summary>
    public const int LogFormatEscapedFieldNumber = 27;
    private bool logFormatEscaped_;
    /// <summary>
    /// See :option:`--log-format-escaped` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LogFormatEscaped {
      get { return logFormatEscaped_; }
      set {
        logFormatEscaped_ = value;
      }
    }

    /// <summary>Field number for the "log_path" field.</summary>
    public const int LogPathFieldNumber = 11;
    private string logPath_ = "";
    /// <summary>
    /// See :option:`--log-path` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LogPath {
      get { return logPath_; }
      set {
        logPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_cluster" field.</summary>
    public const int ServiceClusterFieldNumber = 13;
    private string serviceCluster_ = "";
    /// <summary>
    /// See :option:`--service-cluster` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServiceCluster {
      get { return serviceCluster_; }
      set {
        serviceCluster_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_node" field.</summary>
    public const int ServiceNodeFieldNumber = 14;
    private string serviceNode_ = "";
    /// <summary>
    /// See :option:`--service-node` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServiceNode {
      get { return serviceNode_; }
      set {
        serviceNode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_zone" field.</summary>
    public const int ServiceZoneFieldNumber = 15;
    private string serviceZone_ = "";
    /// <summary>
    /// See :option:`--service-zone` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServiceZone {
      get { return serviceZone_; }
      set {
        serviceZone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "file_flush_interval" field.</summary>
    public const int FileFlushIntervalFieldNumber = 16;
    private global::Google.Protobuf.WellKnownTypes.Duration fileFlushInterval_;
    /// <summary>
    /// See :option:`--file-flush-interval-msec` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration FileFlushInterval {
      get { return fileFlushInterval_; }
      set {
        fileFlushInterval_ = value;
      }
    }

    /// <summary>Field number for the "drain_time" field.</summary>
    public const int DrainTimeFieldNumber = 17;
    private global::Google.Protobuf.WellKnownTypes.Duration drainTime_;
    /// <summary>
    /// See :option:`--drain-time-s` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration DrainTime {
      get { return drainTime_; }
      set {
        drainTime_ = value;
      }
    }

    /// <summary>Field number for the "drain_strategy" field.</summary>
    public const int DrainStrategyFieldNumber = 33;
    private global::Envoy.Admin.V3.CommandLineOptions.Types.DrainStrategy drainStrategy_ = global::Envoy.Admin.V3.CommandLineOptions.Types.DrainStrategy.Gradual;
    /// <summary>
    /// See :option:`--drain-strategy` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Admin.V3.CommandLineOptions.Types.DrainStrategy DrainStrategy {
      get { return drainStrategy_; }
      set {
        drainStrategy_ = value;
      }
    }

    /// <summary>Field number for the "parent_shutdown_time" field.</summary>
    public const int ParentShutdownTimeFieldNumber = 18;
    private global::Google.Protobuf.WellKnownTypes.Duration parentShutdownTime_;
    /// <summary>
    /// See :option:`--parent-shutdown-time-s` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration ParentShutdownTime {
      get { return parentShutdownTime_; }
      set {
        parentShutdownTime_ = value;
      }
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 19;
    private global::Envoy.Admin.V3.CommandLineOptions.Types.Mode mode_ = global::Envoy.Admin.V3.CommandLineOptions.Types.Mode.Serve;
    /// <summary>
    /// See :option:`--mode` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Admin.V3.CommandLineOptions.Types.Mode Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    /// <summary>Field number for the "disable_hot_restart" field.</summary>
    public const int DisableHotRestartFieldNumber = 22;
    private bool disableHotRestart_;
    /// <summary>
    /// See :option:`--disable-hot-restart` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisableHotRestart {
      get { return disableHotRestart_; }
      set {
        disableHotRestart_ = value;
      }
    }

    /// <summary>Field number for the "enable_mutex_tracing" field.</summary>
    public const int EnableMutexTracingFieldNumber = 23;
    private bool enableMutexTracing_;
    /// <summary>
    /// See :option:`--enable-mutex-tracing` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableMutexTracing {
      get { return enableMutexTracing_; }
      set {
        enableMutexTracing_ = value;
      }
    }

    /// <summary>Field number for the "restart_epoch" field.</summary>
    public const int RestartEpochFieldNumber = 24;
    private uint restartEpoch_;
    /// <summary>
    /// See :option:`--restart-epoch` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RestartEpoch {
      get { return restartEpoch_; }
      set {
        restartEpoch_ = value;
      }
    }

    /// <summary>Field number for the "cpuset_threads" field.</summary>
    public const int CpusetThreadsFieldNumber = 25;
    private bool cpusetThreads_;
    /// <summary>
    /// See :option:`--cpuset-threads` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CpusetThreads {
      get { return cpusetThreads_; }
      set {
        cpusetThreads_ = value;
      }
    }

    /// <summary>Field number for the "disabled_extensions" field.</summary>
    public const int DisabledExtensionsFieldNumber = 28;
    private static readonly pb::FieldCodec<string> _repeated_disabledExtensions_codec
        = pb::FieldCodec.ForString(226);
    private readonly pbc::RepeatedField<string> disabledExtensions_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// See :option:`--disable-extensions` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> DisabledExtensions {
      get { return disabledExtensions_; }
    }

    /// <summary>Field number for the "enable_fine_grain_logging" field.</summary>
    public const int EnableFineGrainLoggingFieldNumber = 34;
    private bool enableFineGrainLogging_;
    /// <summary>
    /// See :option:`--enable-fine-grain-logging` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableFineGrainLogging {
      get { return enableFineGrainLogging_; }
      set {
        enableFineGrainLogging_ = value;
      }
    }

    /// <summary>Field number for the "socket_path" field.</summary>
    public const int SocketPathFieldNumber = 35;
    private string socketPath_ = "";
    /// <summary>
    /// See :option:`--socket-path` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SocketPath {
      get { return socketPath_; }
      set {
        socketPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "socket_mode" field.</summary>
    public const int SocketModeFieldNumber = 36;
    private uint socketMode_;
    /// <summary>
    /// See :option:`--socket-mode` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SocketMode {
      get { return socketMode_; }
      set {
        socketMode_ = value;
      }
    }

    /// <summary>Field number for the "enable_core_dump" field.</summary>
    public const int EnableCoreDumpFieldNumber = 37;
    private bool enableCoreDump_;
    /// <summary>
    /// See :option:`--enable-core-dump` for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableCoreDump {
      get { return enableCoreDump_; }
      set {
        enableCoreDump_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CommandLineOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CommandLineOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BaseId != other.BaseId) return false;
      if (UseDynamicBaseId != other.UseDynamicBaseId) return false;
      if (BaseIdPath != other.BaseIdPath) return false;
      if (Concurrency != other.Concurrency) return false;
      if (ConfigPath != other.ConfigPath) return false;
      if (ConfigYaml != other.ConfigYaml) return false;
      if (AllowUnknownStaticFields != other.AllowUnknownStaticFields) return false;
      if (RejectUnknownDynamicFields != other.RejectUnknownDynamicFields) return false;
      if (IgnoreUnknownDynamicFields != other.IgnoreUnknownDynamicFields) return false;
      if (AdminAddressPath != other.AdminAddressPath) return false;
      if (LocalAddressIpVersion != other.LocalAddressIpVersion) return false;
      if (LogLevel != other.LogLevel) return false;
      if (ComponentLogLevel != other.ComponentLogLevel) return false;
      if (LogFormat != other.LogFormat) return false;
      if (LogFormatEscaped != other.LogFormatEscaped) return false;
      if (LogPath != other.LogPath) return false;
      if (ServiceCluster != other.ServiceCluster) return false;
      if (ServiceNode != other.ServiceNode) return false;
      if (ServiceZone != other.ServiceZone) return false;
      if (!object.Equals(FileFlushInterval, other.FileFlushInterval)) return false;
      if (!object.Equals(DrainTime, other.DrainTime)) return false;
      if (DrainStrategy != other.DrainStrategy) return false;
      if (!object.Equals(ParentShutdownTime, other.ParentShutdownTime)) return false;
      if (Mode != other.Mode) return false;
      if (DisableHotRestart != other.DisableHotRestart) return false;
      if (EnableMutexTracing != other.EnableMutexTracing) return false;
      if (RestartEpoch != other.RestartEpoch) return false;
      if (CpusetThreads != other.CpusetThreads) return false;
      if(!disabledExtensions_.Equals(other.disabledExtensions_)) return false;
      if (EnableFineGrainLogging != other.EnableFineGrainLogging) return false;
      if (SocketPath != other.SocketPath) return false;
      if (SocketMode != other.SocketMode) return false;
      if (EnableCoreDump != other.EnableCoreDump) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BaseId != 0UL) hash ^= BaseId.GetHashCode();
      if (UseDynamicBaseId != false) hash ^= UseDynamicBaseId.GetHashCode();
      if (BaseIdPath.Length != 0) hash ^= BaseIdPath.GetHashCode();
      if (Concurrency != 0) hash ^= Concurrency.GetHashCode();
      if (ConfigPath.Length != 0) hash ^= ConfigPath.GetHashCode();
      if (ConfigYaml.Length != 0) hash ^= ConfigYaml.GetHashCode();
      if (AllowUnknownStaticFields != false) hash ^= AllowUnknownStaticFields.GetHashCode();
      if (RejectUnknownDynamicFields != false) hash ^= RejectUnknownDynamicFields.GetHashCode();
      if (IgnoreUnknownDynamicFields != false) hash ^= IgnoreUnknownDynamicFields.GetHashCode();
      if (AdminAddressPath.Length != 0) hash ^= AdminAddressPath.GetHashCode();
      if (LocalAddressIpVersion != global::Envoy.Admin.V3.CommandLineOptions.Types.IpVersion.V4) hash ^= LocalAddressIpVersion.GetHashCode();
      if (LogLevel.Length != 0) hash ^= LogLevel.GetHashCode();
      if (ComponentLogLevel.Length != 0) hash ^= ComponentLogLevel.GetHashCode();
      if (LogFormat.Length != 0) hash ^= LogFormat.GetHashCode();
      if (LogFormatEscaped != false) hash ^= LogFormatEscaped.GetHashCode();
      if (LogPath.Length != 0) hash ^= LogPath.GetHashCode();
      if (ServiceCluster.Length != 0) hash ^= ServiceCluster.GetHashCode();
      if (ServiceNode.Length != 0) hash ^= ServiceNode.GetHashCode();
      if (ServiceZone.Length != 0) hash ^= ServiceZone.GetHashCode();
      if (fileFlushInterval_ != null) hash ^= FileFlushInterval.GetHashCode();
      if (drainTime_ != null) hash ^= DrainTime.GetHashCode();
      if (DrainStrategy != global::Envoy.Admin.V3.CommandLineOptions.Types.DrainStrategy.Gradual) hash ^= DrainStrategy.GetHashCode();
      if (parentShutdownTime_ != null) hash ^= ParentShutdownTime.GetHashCode();
      if (Mode != global::Envoy.Admin.V3.CommandLineOptions.Types.Mode.Serve) hash ^= Mode.GetHashCode();
      if (DisableHotRestart != false) hash ^= DisableHotRestart.GetHashCode();
      if (EnableMutexTracing != false) hash ^= EnableMutexTracing.GetHashCode();
      if (RestartEpoch != 0) hash ^= RestartEpoch.GetHashCode();
      if (CpusetThreads != false) hash ^= CpusetThreads.GetHashCode();
      hash ^= disabledExtensions_.GetHashCode();
      if (EnableFineGrainLogging != false) hash ^= EnableFineGrainLogging.GetHashCode();
      if (SocketPath.Length != 0) hash ^= SocketPath.GetHashCode();
      if (SocketMode != 0) hash ^= SocketMode.GetHashCode();
      if (EnableCoreDump != false) hash ^= EnableCoreDump.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BaseId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(BaseId);
      }
      if (Concurrency != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Concurrency);
      }
      if (ConfigPath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ConfigPath);
      }
      if (ConfigYaml.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ConfigYaml);
      }
      if (AllowUnknownStaticFields != false) {
        output.WriteRawTag(40);
        output.WriteBool(AllowUnknownStaticFields);
      }
      if (AdminAddressPath.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AdminAddressPath);
      }
      if (LocalAddressIpVersion != global::Envoy.Admin.V3.CommandLineOptions.Types.IpVersion.V4) {
        output.WriteRawTag(56);
        output.WriteEnum((int) LocalAddressIpVersion);
      }
      if (LogLevel.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(LogLevel);
      }
      if (ComponentLogLevel.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ComponentLogLevel);
      }
      if (LogFormat.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(LogFormat);
      }
      if (LogPath.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(LogPath);
      }
      if (ServiceCluster.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ServiceCluster);
      }
      if (ServiceNode.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ServiceNode);
      }
      if (ServiceZone.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(ServiceZone);
      }
      if (fileFlushInterval_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(FileFlushInterval);
      }
      if (drainTime_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(DrainTime);
      }
      if (parentShutdownTime_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(ParentShutdownTime);
      }
      if (Mode != global::Envoy.Admin.V3.CommandLineOptions.Types.Mode.Serve) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) Mode);
      }
      if (DisableHotRestart != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(DisableHotRestart);
      }
      if (EnableMutexTracing != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(EnableMutexTracing);
      }
      if (RestartEpoch != 0) {
        output.WriteRawTag(192, 1);
        output.WriteUInt32(RestartEpoch);
      }
      if (CpusetThreads != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(CpusetThreads);
      }
      if (RejectUnknownDynamicFields != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(RejectUnknownDynamicFields);
      }
      if (LogFormatEscaped != false) {
        output.WriteRawTag(216, 1);
        output.WriteBool(LogFormatEscaped);
      }
      disabledExtensions_.WriteTo(output, _repeated_disabledExtensions_codec);
      if (IgnoreUnknownDynamicFields != false) {
        output.WriteRawTag(240, 1);
        output.WriteBool(IgnoreUnknownDynamicFields);
      }
      if (UseDynamicBaseId != false) {
        output.WriteRawTag(248, 1);
        output.WriteBool(UseDynamicBaseId);
      }
      if (BaseIdPath.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(BaseIdPath);
      }
      if (DrainStrategy != global::Envoy.Admin.V3.CommandLineOptions.Types.DrainStrategy.Gradual) {
        output.WriteRawTag(136, 2);
        output.WriteEnum((int) DrainStrategy);
      }
      if (EnableFineGrainLogging != false) {
        output.WriteRawTag(144, 2);
        output.WriteBool(EnableFineGrainLogging);
      }
      if (SocketPath.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(SocketPath);
      }
      if (SocketMode != 0) {
        output.WriteRawTag(160, 2);
        output.WriteUInt32(SocketMode);
      }
      if (EnableCoreDump != false) {
        output.WriteRawTag(168, 2);
        output.WriteBool(EnableCoreDump);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BaseId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(BaseId);
      }
      if (Concurrency != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Concurrency);
      }
      if (ConfigPath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ConfigPath);
      }
      if (ConfigYaml.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ConfigYaml);
      }
      if (AllowUnknownStaticFields != false) {
        output.WriteRawTag(40);
        output.WriteBool(AllowUnknownStaticFields);
      }
      if (AdminAddressPath.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AdminAddressPath);
      }
      if (LocalAddressIpVersion != global::Envoy.Admin.V3.CommandLineOptions.Types.IpVersion.V4) {
        output.WriteRawTag(56);
        output.WriteEnum((int) LocalAddressIpVersion);
      }
      if (LogLevel.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(LogLevel);
      }
      if (ComponentLogLevel.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ComponentLogLevel);
      }
      if (LogFormat.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(LogFormat);
      }
      if (LogPath.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(LogPath);
      }
      if (ServiceCluster.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ServiceCluster);
      }
      if (ServiceNode.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ServiceNode);
      }
      if (ServiceZone.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(ServiceZone);
      }
      if (fileFlushInterval_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(FileFlushInterval);
      }
      if (drainTime_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(DrainTime);
      }
      if (parentShutdownTime_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(ParentShutdownTime);
      }
      if (Mode != global::Envoy.Admin.V3.CommandLineOptions.Types.Mode.Serve) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) Mode);
      }
      if (DisableHotRestart != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(DisableHotRestart);
      }
      if (EnableMutexTracing != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(EnableMutexTracing);
      }
      if (RestartEpoch != 0) {
        output.WriteRawTag(192, 1);
        output.WriteUInt32(RestartEpoch);
      }
      if (CpusetThreads != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(CpusetThreads);
      }
      if (RejectUnknownDynamicFields != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(RejectUnknownDynamicFields);
      }
      if (LogFormatEscaped != false) {
        output.WriteRawTag(216, 1);
        output.WriteBool(LogFormatEscaped);
      }
      disabledExtensions_.WriteTo(ref output, _repeated_disabledExtensions_codec);
      if (IgnoreUnknownDynamicFields != false) {
        output.WriteRawTag(240, 1);
        output.WriteBool(IgnoreUnknownDynamicFields);
      }
      if (UseDynamicBaseId != false) {
        output.WriteRawTag(248, 1);
        output.WriteBool(UseDynamicBaseId);
      }
      if (BaseIdPath.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(BaseIdPath);
      }
      if (DrainStrategy != global::Envoy.Admin.V3.CommandLineOptions.Types.DrainStrategy.Gradual) {
        output.WriteRawTag(136, 2);
        output.WriteEnum((int) DrainStrategy);
      }
      if (EnableFineGrainLogging != false) {
        output.WriteRawTag(144, 2);
        output.WriteBool(EnableFineGrainLogging);
      }
      if (SocketPath.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(SocketPath);
      }
      if (SocketMode != 0) {
        output.WriteRawTag(160, 2);
        output.WriteUInt32(SocketMode);
      }
      if (EnableCoreDump != false) {
        output.WriteRawTag(168, 2);
        output.WriteBool(EnableCoreDump);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BaseId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BaseId);
      }
      if (UseDynamicBaseId != false) {
        size += 2 + 1;
      }
      if (BaseIdPath.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BaseIdPath);
      }
      if (Concurrency != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Concurrency);
      }
      if (ConfigPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConfigPath);
      }
      if (ConfigYaml.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConfigYaml);
      }
      if (AllowUnknownStaticFields != false) {
        size += 1 + 1;
      }
      if (RejectUnknownDynamicFields != false) {
        size += 2 + 1;
      }
      if (IgnoreUnknownDynamicFields != false) {
        size += 2 + 1;
      }
      if (AdminAddressPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AdminAddressPath);
      }
      if (LocalAddressIpVersion != global::Envoy.Admin.V3.CommandLineOptions.Types.IpVersion.V4) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LocalAddressIpVersion);
      }
      if (LogLevel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogLevel);
      }
      if (ComponentLogLevel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComponentLogLevel);
      }
      if (LogFormat.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogFormat);
      }
      if (LogFormatEscaped != false) {
        size += 2 + 1;
      }
      if (LogPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogPath);
      }
      if (ServiceCluster.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceCluster);
      }
      if (ServiceNode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceNode);
      }
      if (ServiceZone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceZone);
      }
      if (fileFlushInterval_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FileFlushInterval);
      }
      if (drainTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DrainTime);
      }
      if (DrainStrategy != global::Envoy.Admin.V3.CommandLineOptions.Types.DrainStrategy.Gradual) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) DrainStrategy);
      }
      if (parentShutdownTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ParentShutdownTime);
      }
      if (Mode != global::Envoy.Admin.V3.CommandLineOptions.Types.Mode.Serve) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
      }
      if (DisableHotRestart != false) {
        size += 2 + 1;
      }
      if (EnableMutexTracing != false) {
        size += 2 + 1;
      }
      if (RestartEpoch != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RestartEpoch);
      }
      if (CpusetThreads != false) {
        size += 2 + 1;
      }
      size += disabledExtensions_.CalculateSize(_repeated_disabledExtensions_codec);
      if (EnableFineGrainLogging != false) {
        size += 2 + 1;
      }
      if (SocketPath.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SocketPath);
      }
      if (SocketMode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SocketMode);
      }
      if (EnableCoreDump != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CommandLineOptions other) {
      if (other == null) {
        return;
      }
      if (other.BaseId != 0UL) {
        BaseId = other.BaseId;
      }
      if (other.UseDynamicBaseId != false) {
        UseDynamicBaseId = other.UseDynamicBaseId;
      }
      if (other.BaseIdPath.Length != 0) {
        BaseIdPath = other.BaseIdPath;
      }
      if (other.Concurrency != 0) {
        Concurrency = other.Concurrency;
      }
      if (other.ConfigPath.Length != 0) {
        ConfigPath = other.ConfigPath;
      }
      if (other.ConfigYaml.Length != 0) {
        ConfigYaml = other.ConfigYaml;
      }
      if (other.AllowUnknownStaticFields != false) {
        AllowUnknownStaticFields = other.AllowUnknownStaticFields;
      }
      if (other.RejectUnknownDynamicFields != false) {
        RejectUnknownDynamicFields = other.RejectUnknownDynamicFields;
      }
      if (other.IgnoreUnknownDynamicFields != false) {
        IgnoreUnknownDynamicFields = other.IgnoreUnknownDynamicFields;
      }
      if (other.AdminAddressPath.Length != 0) {
        AdminAddressPath = other.AdminAddressPath;
      }
      if (other.LocalAddressIpVersion != global::Envoy.Admin.V3.CommandLineOptions.Types.IpVersion.V4) {
        LocalAddressIpVersion = other.LocalAddressIpVersion;
      }
      if (other.LogLevel.Length != 0) {
        LogLevel = other.LogLevel;
      }
      if (other.ComponentLogLevel.Length != 0) {
        ComponentLogLevel = other.ComponentLogLevel;
      }
      if (other.LogFormat.Length != 0) {
        LogFormat = other.LogFormat;
      }
      if (other.LogFormatEscaped != false) {
        LogFormatEscaped = other.LogFormatEscaped;
      }
      if (other.LogPath.Length != 0) {
        LogPath = other.LogPath;
      }
      if (other.ServiceCluster.Length != 0) {
        ServiceCluster = other.ServiceCluster;
      }
      if (other.ServiceNode.Length != 0) {
        ServiceNode = other.ServiceNode;
      }
      if (other.ServiceZone.Length != 0) {
        ServiceZone = other.ServiceZone;
      }
      if (other.fileFlushInterval_ != null) {
        if (fileFlushInterval_ == null) {
          FileFlushInterval = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        FileFlushInterval.MergeFrom(other.FileFlushInterval);
      }
      if (other.drainTime_ != null) {
        if (drainTime_ == null) {
          DrainTime = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        DrainTime.MergeFrom(other.DrainTime);
      }
      if (other.DrainStrategy != global::Envoy.Admin.V3.CommandLineOptions.Types.DrainStrategy.Gradual) {
        DrainStrategy = other.DrainStrategy;
      }
      if (other.parentShutdownTime_ != null) {
        if (parentShutdownTime_ == null) {
          ParentShutdownTime = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        ParentShutdownTime.MergeFrom(other.ParentShutdownTime);
      }
      if (other.Mode != global::Envoy.Admin.V3.CommandLineOptions.Types.Mode.Serve) {
        Mode = other.Mode;
      }
      if (other.DisableHotRestart != false) {
        DisableHotRestart = other.DisableHotRestart;
      }
      if (other.EnableMutexTracing != false) {
        EnableMutexTracing = other.EnableMutexTracing;
      }
      if (other.RestartEpoch != 0) {
        RestartEpoch = other.RestartEpoch;
      }
      if (other.CpusetThreads != false) {
        CpusetThreads = other.CpusetThreads;
      }
      disabledExtensions_.Add(other.disabledExtensions_);
      if (other.EnableFineGrainLogging != false) {
        EnableFineGrainLogging = other.EnableFineGrainLogging;
      }
      if (other.SocketPath.Length != 0) {
        SocketPath = other.SocketPath;
      }
      if (other.SocketMode != 0) {
        SocketMode = other.SocketMode;
      }
      if (other.EnableCoreDump != false) {
        EnableCoreDump = other.EnableCoreDump;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BaseId = input.ReadUInt64();
            break;
          }
          case 16: {
            Concurrency = input.ReadUInt32();
            break;
          }
          case 26: {
            ConfigPath = input.ReadString();
            break;
          }
          case 34: {
            ConfigYaml = input.ReadString();
            break;
          }
          case 40: {
            AllowUnknownStaticFields = input.ReadBool();
            break;
          }
          case 50: {
            AdminAddressPath = input.ReadString();
            break;
          }
          case 56: {
            LocalAddressIpVersion = (global::Envoy.Admin.V3.CommandLineOptions.Types.IpVersion) input.ReadEnum();
            break;
          }
          case 66: {
            LogLevel = input.ReadString();
            break;
          }
          case 74: {
            ComponentLogLevel = input.ReadString();
            break;
          }
          case 82: {
            LogFormat = input.ReadString();
            break;
          }
          case 90: {
            LogPath = input.ReadString();
            break;
          }
          case 106: {
            ServiceCluster = input.ReadString();
            break;
          }
          case 114: {
            ServiceNode = input.ReadString();
            break;
          }
          case 122: {
            ServiceZone = input.ReadString();
            break;
          }
          case 130: {
            if (fileFlushInterval_ == null) {
              FileFlushInterval = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(FileFlushInterval);
            break;
          }
          case 138: {
            if (drainTime_ == null) {
              DrainTime = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(DrainTime);
            break;
          }
          case 146: {
            if (parentShutdownTime_ == null) {
              ParentShutdownTime = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(ParentShutdownTime);
            break;
          }
          case 152: {
            Mode = (global::Envoy.Admin.V3.CommandLineOptions.Types.Mode) input.ReadEnum();
            break;
          }
          case 176: {
            DisableHotRestart = input.ReadBool();
            break;
          }
          case 184: {
            EnableMutexTracing = input.ReadBool();
            break;
          }
          case 192: {
            RestartEpoch = input.ReadUInt32();
            break;
          }
          case 200: {
            CpusetThreads = input.ReadBool();
            break;
          }
          case 208: {
            RejectUnknownDynamicFields = input.ReadBool();
            break;
          }
          case 216: {
            LogFormatEscaped = input.ReadBool();
            break;
          }
          case 226: {
            disabledExtensions_.AddEntriesFrom(input, _repeated_disabledExtensions_codec);
            break;
          }
          case 240: {
            IgnoreUnknownDynamicFields = input.ReadBool();
            break;
          }
          case 248: {
            UseDynamicBaseId = input.ReadBool();
            break;
          }
          case 258: {
            BaseIdPath = input.ReadString();
            break;
          }
          case 264: {
            DrainStrategy = (global::Envoy.Admin.V3.CommandLineOptions.Types.DrainStrategy) input.ReadEnum();
            break;
          }
          case 272: {
            EnableFineGrainLogging = input.ReadBool();
            break;
          }
          case 282: {
            SocketPath = input.ReadString();
            break;
          }
          case 288: {
            SocketMode = input.ReadUInt32();
            break;
          }
          case 296: {
            EnableCoreDump = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BaseId = input.ReadUInt64();
            break;
          }
          case 16: {
            Concurrency = input.ReadUInt32();
            break;
          }
          case 26: {
            ConfigPath = input.ReadString();
            break;
          }
          case 34: {
            ConfigYaml = input.ReadString();
            break;
          }
          case 40: {
            AllowUnknownStaticFields = input.ReadBool();
            break;
          }
          case 50: {
            AdminAddressPath = input.ReadString();
            break;
          }
          case 56: {
            LocalAddressIpVersion = (global::Envoy.Admin.V3.CommandLineOptions.Types.IpVersion) input.ReadEnum();
            break;
          }
          case 66: {
            LogLevel = input.ReadString();
            break;
          }
          case 74: {
            ComponentLogLevel = input.ReadString();
            break;
          }
          case 82: {
            LogFormat = input.ReadString();
            break;
          }
          case 90: {
            LogPath = input.ReadString();
            break;
          }
          case 106: {
            ServiceCluster = input.ReadString();
            break;
          }
          case 114: {
            ServiceNode = input.ReadString();
            break;
          }
          case 122: {
            ServiceZone = input.ReadString();
            break;
          }
          case 130: {
            if (fileFlushInterval_ == null) {
              FileFlushInterval = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(FileFlushInterval);
            break;
          }
          case 138: {
            if (drainTime_ == null) {
              DrainTime = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(DrainTime);
            break;
          }
          case 146: {
            if (parentShutdownTime_ == null) {
              ParentShutdownTime = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(ParentShutdownTime);
            break;
          }
          case 152: {
            Mode = (global::Envoy.Admin.V3.CommandLineOptions.Types.Mode) input.ReadEnum();
            break;
          }
          case 176: {
            DisableHotRestart = input.ReadBool();
            break;
          }
          case 184: {
            EnableMutexTracing = input.ReadBool();
            break;
          }
          case 192: {
            RestartEpoch = input.ReadUInt32();
            break;
          }
          case 200: {
            CpusetThreads = input.ReadBool();
            break;
          }
          case 208: {
            RejectUnknownDynamicFields = input.ReadBool();
            break;
          }
          case 216: {
            LogFormatEscaped = input.ReadBool();
            break;
          }
          case 226: {
            disabledExtensions_.AddEntriesFrom(ref input, _repeated_disabledExtensions_codec);
            break;
          }
          case 240: {
            IgnoreUnknownDynamicFields = input.ReadBool();
            break;
          }
          case 248: {
            UseDynamicBaseId = input.ReadBool();
            break;
          }
          case 258: {
            BaseIdPath = input.ReadString();
            break;
          }
          case 264: {
            DrainStrategy = (global::Envoy.Admin.V3.CommandLineOptions.Types.DrainStrategy) input.ReadEnum();
            break;
          }
          case 272: {
            EnableFineGrainLogging = input.ReadBool();
            break;
          }
          case 282: {
            SocketPath = input.ReadString();
            break;
          }
          case 288: {
            SocketMode = input.ReadUInt32();
            break;
          }
          case 296: {
            EnableCoreDump = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CommandLineOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum IpVersion {
        [pbr::OriginalName("v4")] V4 = 0,
        [pbr::OriginalName("v6")] V6 = 1,
      }

      public enum Mode {
        /// <summary>
        /// Validate configs and then serve traffic normally.
        /// </summary>
        [pbr::OriginalName("Serve")] Serve = 0,
        /// <summary>
        /// Validate configs and exit.
        /// </summary>
        [pbr::OriginalName("Validate")] Validate = 1,
        /// <summary>
        /// Completely load and initialize the config, and then exit without running the listener loop.
        /// </summary>
        [pbr::OriginalName("InitOnly")] InitOnly = 2,
      }

      public enum DrainStrategy {
        /// <summary>
        /// Gradually discourage connections over the course of the drain period.
        /// </summary>
        [pbr::OriginalName("Gradual")] Gradual = 0,
        /// <summary>
        /// Discourage all connections for the duration of the drain sequence.
        /// </summary>
        [pbr::OriginalName("Immediate")] Immediate = 1,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
