// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/type/matcher/string.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Type.Matcher {

  /// <summary>Holder for reflection information generated from envoy/type/matcher/string.proto</summary>
  public static partial class StringReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/type/matcher/string.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StringReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9lbnZveS90eXBlL21hdGNoZXIvc3RyaW5nLnByb3RvEhJlbnZveS50eXBl",
            "Lm1hdGNoZXIaHmVudm95L3R5cGUvbWF0Y2hlci9yZWdleC5wcm90bxojZW52",
            "b3kvYW5ub3RhdGlvbnMvZGVwcmVjYXRpb24ucHJvdG8aHXVkcGEvYW5ub3Rh",
            "dGlvbnMvc3RhdHVzLnByb3RvGhd2YWxpZGF0ZS92YWxpZGF0ZS5wcm90byLm",
            "AQoNU3RyaW5nTWF0Y2hlchIPCgVleGFjdBgBIAEoCUgAEhkKBnByZWZpeBgC",
            "IAEoCUIH+kIEcgIQAUgAEhkKBnN1ZmZpeBgDIAEoCUIH+kIEcgIQAUgAEiEK",
            "BXJlZ2V4GAQgASgJQhAYAfpCBXIDKIAIuO7y0gUBSAASQAoKc2FmZV9yZWdl",
            "eBgFIAEoCzIgLmVudm95LnR5cGUubWF0Y2hlci5SZWdleE1hdGNoZXJCCPpC",
            "BYoBAhABSAASEwoLaWdub3JlX2Nhc2UYBiABKAhCFAoNbWF0Y2hfcGF0dGVy",
            "bhID+EIBIlIKEUxpc3RTdHJpbmdNYXRjaGVyEj0KCHBhdHRlcm5zGAEgAygL",
            "MiEuZW52b3kudHlwZS5tYXRjaGVyLlN0cmluZ01hdGNoZXJCCPpCBZIBAggB",
            "QjkKIGlvLmVudm95cHJveHkuZW52b3kudHlwZS5tYXRjaGVyQgtTdHJpbmdQ",
            "cm90b1ABuoDI0QYCEAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Type.Matcher.RegexReflection.Descriptor, global::Envoy.Annotations.DeprecationReflection.Descriptor, global::Udpa.Annotations.StatusReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Type.Matcher.StringMatcher), global::Envoy.Type.Matcher.StringMatcher.Parser, new[]{ "Exact", "Prefix", "Suffix", "Regex", "SafeRegex", "IgnoreCase" }, new[]{ "MatchPattern" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Type.Matcher.ListStringMatcher), global::Envoy.Type.Matcher.ListStringMatcher.Parser, new[]{ "Patterns" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Specifies the way to match a string.
  /// [#next-free-field: 7]
  /// </summary>
  public sealed partial class StringMatcher : pb::IMessage<StringMatcher>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StringMatcher> _parser = new pb::MessageParser<StringMatcher>(() => new StringMatcher());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StringMatcher> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Type.Matcher.StringReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StringMatcher() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StringMatcher(StringMatcher other) : this() {
      ignoreCase_ = other.ignoreCase_;
      switch (other.MatchPatternCase) {
        case MatchPatternOneofCase.Exact:
          Exact = other.Exact;
          break;
        case MatchPatternOneofCase.Prefix:
          Prefix = other.Prefix;
          break;
        case MatchPatternOneofCase.Suffix:
          Suffix = other.Suffix;
          break;
        case MatchPatternOneofCase.Regex:
          Regex = other.Regex;
          break;
        case MatchPatternOneofCase.SafeRegex:
          SafeRegex = other.SafeRegex.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StringMatcher Clone() {
      return new StringMatcher(this);
    }

    /// <summary>Field number for the "exact" field.</summary>
    public const int ExactFieldNumber = 1;
    /// <summary>
    /// The input string must match exactly the string specified here.
    ///
    /// Examples:
    ///
    /// * *abc* only matches the value *abc*.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Exact {
      get { return matchPatternCase_ == MatchPatternOneofCase.Exact ? (string) matchPattern_ : ""; }
      set {
        matchPattern_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        matchPatternCase_ = MatchPatternOneofCase.Exact;
      }
    }

    /// <summary>Field number for the "prefix" field.</summary>
    public const int PrefixFieldNumber = 2;
    /// <summary>
    /// The input string must have the prefix specified here.
    /// Note: empty prefix is not allowed, please use regex instead.
    ///
    /// Examples:
    ///
    /// * *abc* matches the value *abc.xyz*
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Prefix {
      get { return matchPatternCase_ == MatchPatternOneofCase.Prefix ? (string) matchPattern_ : ""; }
      set {
        matchPattern_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        matchPatternCase_ = MatchPatternOneofCase.Prefix;
      }
    }

    /// <summary>Field number for the "suffix" field.</summary>
    public const int SuffixFieldNumber = 3;
    /// <summary>
    /// The input string must have the suffix specified here.
    /// Note: empty prefix is not allowed, please use regex instead.
    ///
    /// Examples:
    ///
    /// * *abc* matches the value *xyz.abc*
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Suffix {
      get { return matchPatternCase_ == MatchPatternOneofCase.Suffix ? (string) matchPattern_ : ""; }
      set {
        matchPattern_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        matchPatternCase_ = MatchPatternOneofCase.Suffix;
      }
    }

    /// <summary>Field number for the "regex" field.</summary>
    public const int RegexFieldNumber = 4;
    /// <summary>
    /// The input string must match the regular expression specified here.
    /// The regex grammar is defined `here
    /// &lt;https://en.cppreference.com/w/cpp/regex/ecmascript>`_.
    ///
    /// Examples:
    ///
    /// * The regex ``\d{3}`` matches the value *123*
    /// * The regex ``\d{3}`` does not match the value *1234*
    /// * The regex ``\d{3}`` does not match the value *123.456*
    ///
    /// .. attention::
    ///   This field has been deprecated in favor of `safe_regex` as it is not safe for use with
    ///   untrusted input in all cases.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Regex {
      get { return matchPatternCase_ == MatchPatternOneofCase.Regex ? (string) matchPattern_ : ""; }
      set {
        matchPattern_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        matchPatternCase_ = MatchPatternOneofCase.Regex;
      }
    }

    /// <summary>Field number for the "safe_regex" field.</summary>
    public const int SafeRegexFieldNumber = 5;
    /// <summary>
    /// The input string must match the regular expression specified here.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Type.Matcher.RegexMatcher SafeRegex {
      get { return matchPatternCase_ == MatchPatternOneofCase.SafeRegex ? (global::Envoy.Type.Matcher.RegexMatcher) matchPattern_ : null; }
      set {
        matchPattern_ = value;
        matchPatternCase_ = value == null ? MatchPatternOneofCase.None : MatchPatternOneofCase.SafeRegex;
      }
    }

    /// <summary>Field number for the "ignore_case" field.</summary>
    public const int IgnoreCaseFieldNumber = 6;
    private bool ignoreCase_;
    /// <summary>
    /// If true, indicates the exact/prefix/suffix matching should be case insensitive. This has no
    /// effect for the safe_regex match.
    /// For example, the matcher *data* will match both input string *Data* and *data* if set to true.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IgnoreCase {
      get { return ignoreCase_; }
      set {
        ignoreCase_ = value;
      }
    }

    private object matchPattern_;
    /// <summary>Enum of possible cases for the "match_pattern" oneof.</summary>
    public enum MatchPatternOneofCase {
      None = 0,
      Exact = 1,
      Prefix = 2,
      Suffix = 3,
      Regex = 4,
      SafeRegex = 5,
    }
    private MatchPatternOneofCase matchPatternCase_ = MatchPatternOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchPatternOneofCase MatchPatternCase {
      get { return matchPatternCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMatchPattern() {
      matchPatternCase_ = MatchPatternOneofCase.None;
      matchPattern_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StringMatcher);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StringMatcher other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Exact != other.Exact) return false;
      if (Prefix != other.Prefix) return false;
      if (Suffix != other.Suffix) return false;
      if (Regex != other.Regex) return false;
      if (!object.Equals(SafeRegex, other.SafeRegex)) return false;
      if (IgnoreCase != other.IgnoreCase) return false;
      if (MatchPatternCase != other.MatchPatternCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (matchPatternCase_ == MatchPatternOneofCase.Exact) hash ^= Exact.GetHashCode();
      if (matchPatternCase_ == MatchPatternOneofCase.Prefix) hash ^= Prefix.GetHashCode();
      if (matchPatternCase_ == MatchPatternOneofCase.Suffix) hash ^= Suffix.GetHashCode();
      if (matchPatternCase_ == MatchPatternOneofCase.Regex) hash ^= Regex.GetHashCode();
      if (matchPatternCase_ == MatchPatternOneofCase.SafeRegex) hash ^= SafeRegex.GetHashCode();
      if (IgnoreCase != false) hash ^= IgnoreCase.GetHashCode();
      hash ^= (int) matchPatternCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (matchPatternCase_ == MatchPatternOneofCase.Exact) {
        output.WriteRawTag(10);
        output.WriteString(Exact);
      }
      if (matchPatternCase_ == MatchPatternOneofCase.Prefix) {
        output.WriteRawTag(18);
        output.WriteString(Prefix);
      }
      if (matchPatternCase_ == MatchPatternOneofCase.Suffix) {
        output.WriteRawTag(26);
        output.WriteString(Suffix);
      }
      if (matchPatternCase_ == MatchPatternOneofCase.Regex) {
        output.WriteRawTag(34);
        output.WriteString(Regex);
      }
      if (matchPatternCase_ == MatchPatternOneofCase.SafeRegex) {
        output.WriteRawTag(42);
        output.WriteMessage(SafeRegex);
      }
      if (IgnoreCase != false) {
        output.WriteRawTag(48);
        output.WriteBool(IgnoreCase);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (matchPatternCase_ == MatchPatternOneofCase.Exact) {
        output.WriteRawTag(10);
        output.WriteString(Exact);
      }
      if (matchPatternCase_ == MatchPatternOneofCase.Prefix) {
        output.WriteRawTag(18);
        output.WriteString(Prefix);
      }
      if (matchPatternCase_ == MatchPatternOneofCase.Suffix) {
        output.WriteRawTag(26);
        output.WriteString(Suffix);
      }
      if (matchPatternCase_ == MatchPatternOneofCase.Regex) {
        output.WriteRawTag(34);
        output.WriteString(Regex);
      }
      if (matchPatternCase_ == MatchPatternOneofCase.SafeRegex) {
        output.WriteRawTag(42);
        output.WriteMessage(SafeRegex);
      }
      if (IgnoreCase != false) {
        output.WriteRawTag(48);
        output.WriteBool(IgnoreCase);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (matchPatternCase_ == MatchPatternOneofCase.Exact) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exact);
      }
      if (matchPatternCase_ == MatchPatternOneofCase.Prefix) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Prefix);
      }
      if (matchPatternCase_ == MatchPatternOneofCase.Suffix) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Suffix);
      }
      if (matchPatternCase_ == MatchPatternOneofCase.Regex) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Regex);
      }
      if (matchPatternCase_ == MatchPatternOneofCase.SafeRegex) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SafeRegex);
      }
      if (IgnoreCase != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StringMatcher other) {
      if (other == null) {
        return;
      }
      if (other.IgnoreCase != false) {
        IgnoreCase = other.IgnoreCase;
      }
      switch (other.MatchPatternCase) {
        case MatchPatternOneofCase.Exact:
          Exact = other.Exact;
          break;
        case MatchPatternOneofCase.Prefix:
          Prefix = other.Prefix;
          break;
        case MatchPatternOneofCase.Suffix:
          Suffix = other.Suffix;
          break;
        case MatchPatternOneofCase.Regex:
          Regex = other.Regex;
          break;
        case MatchPatternOneofCase.SafeRegex:
          if (SafeRegex == null) {
            SafeRegex = new global::Envoy.Type.Matcher.RegexMatcher();
          }
          SafeRegex.MergeFrom(other.SafeRegex);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Exact = input.ReadString();
            break;
          }
          case 18: {
            Prefix = input.ReadString();
            break;
          }
          case 26: {
            Suffix = input.ReadString();
            break;
          }
          case 34: {
            Regex = input.ReadString();
            break;
          }
          case 42: {
            global::Envoy.Type.Matcher.RegexMatcher subBuilder = new global::Envoy.Type.Matcher.RegexMatcher();
            if (matchPatternCase_ == MatchPatternOneofCase.SafeRegex) {
              subBuilder.MergeFrom(SafeRegex);
            }
            input.ReadMessage(subBuilder);
            SafeRegex = subBuilder;
            break;
          }
          case 48: {
            IgnoreCase = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Exact = input.ReadString();
            break;
          }
          case 18: {
            Prefix = input.ReadString();
            break;
          }
          case 26: {
            Suffix = input.ReadString();
            break;
          }
          case 34: {
            Regex = input.ReadString();
            break;
          }
          case 42: {
            global::Envoy.Type.Matcher.RegexMatcher subBuilder = new global::Envoy.Type.Matcher.RegexMatcher();
            if (matchPatternCase_ == MatchPatternOneofCase.SafeRegex) {
              subBuilder.MergeFrom(SafeRegex);
            }
            input.ReadMessage(subBuilder);
            SafeRegex = subBuilder;
            break;
          }
          case 48: {
            IgnoreCase = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Specifies a list of ways to match a string.
  /// </summary>
  public sealed partial class ListStringMatcher : pb::IMessage<ListStringMatcher>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListStringMatcher> _parser = new pb::MessageParser<ListStringMatcher>(() => new ListStringMatcher());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListStringMatcher> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Type.Matcher.StringReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListStringMatcher() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListStringMatcher(ListStringMatcher other) : this() {
      patterns_ = other.patterns_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListStringMatcher Clone() {
      return new ListStringMatcher(this);
    }

    /// <summary>Field number for the "patterns" field.</summary>
    public const int PatternsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Envoy.Type.Matcher.StringMatcher> _repeated_patterns_codec
        = pb::FieldCodec.ForMessage(10, global::Envoy.Type.Matcher.StringMatcher.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Type.Matcher.StringMatcher> patterns_ = new pbc::RepeatedField<global::Envoy.Type.Matcher.StringMatcher>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Type.Matcher.StringMatcher> Patterns {
      get { return patterns_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListStringMatcher);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListStringMatcher other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!patterns_.Equals(other.patterns_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= patterns_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      patterns_.WriteTo(output, _repeated_patterns_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      patterns_.WriteTo(ref output, _repeated_patterns_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += patterns_.CalculateSize(_repeated_patterns_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListStringMatcher other) {
      if (other == null) {
        return;
      }
      patterns_.Add(other.patterns_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            patterns_.AddEntriesFrom(input, _repeated_patterns_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            patterns_.AddEntriesFrom(ref input, _repeated_patterns_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
